{"version":3,"file":"static/js/6853.cd96edae.chunk.js","mappings":"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","sources":["../../../jsonConfig/src/JsonConfigComponent/ConfigGeneric.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigAccordion.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigAlive.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigAutocomplete.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigAutocompleteSendTo.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigCRON.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigCertificateSelect.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigCertificates.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigCertCollection.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigCheckLicense.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigCheckbox.tsx","../../../jsonConfig/src/JsonConfigComponent/ChipInput.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigChip.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigColor.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigCoordinates.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigCustom.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigDeviceManager.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigFileSelector.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigFile.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigFunc.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigIP.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigImageSendTo.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigImageUpload.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigInstanceSelect.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigInterface.tsx","../../../jsonConfig/src/JsonConfigComponent/wrapper/Components/CustomModal.tsx","../../../jsonConfig/src/JsonConfigComponent/wrapper/Components/Editor.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigJsonEditor.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigLanguage.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigLicense.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigNumber.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigObjectId.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigPassword.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigPattern.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigPort.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigRoom.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigSelect.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigSelectSendTo.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigSendto.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigSetState.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigSlider.tsx","../../../jsonConfig/src/JsonConfigComponent/Icons.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigState.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigStaticDivider.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigStaticHeader.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigStaticImage.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigStaticInfo.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigStaticText.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigTable.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigText.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigTextSendTo.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigTopic.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigUUID.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigUser.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigQrCode.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigPanel.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigDatePicker.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigTimePicker.tsx","../../../jsonConfig/src/JsonConfigComponent/ConfigTabs.tsx","../../../jsonConfig/src/JsonConfigComponent/index.tsx","../../../jsonConfig/src/JsonConfig.tsx"],"sourcesContent":["import React, { Component, type JSX } from 'react';\n\nimport { Grid2, Button } from '@mui/material';\n\nimport {\n    Info as IconInfo,\n    Warning as IconWarning,\n    Error as IconError,\n    Key as IconAuth,\n    Send as IconSend,\n    Public as IconWeb,\n    Search as IconSearch,\n    MenuBook as IconMenuBook,\n    Help as IconHelp,\n    UploadFile as IconUploadFile,\n    Edit as IconEdit,\n    Person as IconPerson,\n    Group as IconGroup,\n    Delete as IconDelete,\n    Refresh as IconRefresh,\n    Add as IconAdd,\n    LinkOff as IconLinkOff,\n    Link as LinkIcon,\n    Save,\n    OpenInNew,\n} from '@mui/icons-material';\n\nimport {\n    DialogConfirm,\n    Icon,\n    Utils,\n    I18n,\n    type Connection,\n    type ThemeType,\n    type ThemeName,\n} from '@iobroker/adapter-react-v5';\nimport type { ConfigIconType, ConfigItemAny, ConfigItemConfirmData, JsonConfigContext } from '#JC/types';\n\nconst DEFAULT_SM_SIZE = window.innerWidth <= 600 ? 12 : undefined;\n\n// because this class is used in react-components, do not include here any foreign files like from '../../helpers/utils.ts'\nexport function isObject(it: any): it is Record<string, any> {\n    // This is necessary because:\n    // typeof null === 'object'\n    // typeof [] === 'object'\n    // [] instanceof Object === true\n    return Object.prototype.toString.call(it) === '[object Object]'; // this code is 25% faster than below one\n    // return it && typeof it === 'object' && !(it instanceof Array);\n}\n\nexport interface DeviceManagerPropsProps {\n    /* socket object */\n    socket: Connection;\n    /* Instance to communicate with device-manager backend, like `adapterName.X` */\n    selectedInstance: string; // adapterName.X\n    registerHandler?: (handler: null | ((command: string) => void)) => void;\n    themeName: ThemeName;\n    themeType: ThemeType;\n    isFloatComma: boolean;\n    dateFormat: string;\n    /** Instance to upload images to, like `adapterName.X` */\n    uploadImagesToInstance?: string;\n    /** Filter devices with this string */\n    filter?: string;\n    /** If this component is used in GUI with own toolbar. `false` if this list is used with multiple instances and true if only with one (in this case, it will monitor alive itself */\n    embedded?: boolean;\n    /** If embedded, this text is shown in the toolbar */\n    title?: string;\n    /** Style of a component that displays all devices */\n    style?: React.CSSProperties;\n    /** Use small cards for devices */\n    smallCards?: boolean;\n}\n\nexport interface ConfigGenericProps {\n    oContext: JsonConfigContext;\n    alive: boolean;\n    arrayIndex?: number;\n    attr?: string;\n    changed: boolean;\n    className?: string;\n    style?: Record<string, any>;\n    commandRunning?: boolean;\n    common: Record<string, any>;\n    custom?: boolean;\n    customObj?: Record<string, any>;\n    data: Record<string, any>;\n    disabled?: boolean;\n    // filled only by table and represents the obj.native or obj.common.custom['adapter.X'] object\n    globalData?: Record<string, any>;\n    // filled only by table\n    index?: number;\n    isParentTab?: boolean;\n    onChange: (attrOrData: string | Record<string, any>, val?: any, cb?: () => void, saveConfig?: boolean) => void;\n    onError: (attr: string, error?: string) => void;\n    originalData: Record<string, any>;\n    /** This indicates that the component is the very firsts one - root */\n    root?: boolean;\n    /** Provided props by the specific component */\n    schema: ConfigItemAny;\n    /** This item is in the table. Maybe some layouts must be changed */\n    table?: boolean;\n    themeName: ThemeName;\n}\n\nexport interface ConfigGenericState {\n    confirmDialog: boolean;\n    confirmNewValue: any;\n    confirmAttr: any;\n    confirmData: ConfigItemConfirmData | null;\n    value?: any;\n    confirmDepAttr?: any;\n    confirmDepNewValue?: any;\n    confirmCallback: null | ((result: boolean) => void);\n}\n\nexport default class ConfigGeneric<\n    Props extends ConfigGenericProps = ConfigGenericProps,\n    State extends ConfigGenericState = ConfigGenericState,\n> extends Component<Props, State> {\n    static DIFFERENT_VALUE = '__different__';\n\n    static DIFFERENT_LABEL = 'ra___different__';\n\n    static NONE_VALUE = '';\n\n    static NONE_LABEL = 'ra_none';\n\n    private readonly defaultValue: any;\n\n    private isError: any;\n\n    private readonly lang: ioBroker.Languages;\n\n    private defaultSendToDone?: boolean;\n\n    private sendToTimeout?: any;\n\n    private noPlaceRequired: any;\n\n    constructor(props: Props) {\n        super(props);\n\n        // @ts-expect-error of course, as we just\n        this.state = {\n            confirmDialog: false,\n            confirmNewValue: null,\n            confirmAttr: null,\n            confirmData: null,\n            confirmCallback: null,\n        } satisfies ConfigGenericState;\n\n        this.isError = {};\n\n        if (props.schema) {\n            if (props.custom) {\n                this.defaultValue = props.schema.defaultFunc\n                    ? this.executeCustom(\n                          props.schema.defaultFunc,\n                          props.data,\n                          props.customObj,\n                          props.oContext.instanceObj,\n                          props.arrayIndex,\n                          props.globalData,\n                      )\n                    : props.schema.default;\n            } else if (props.schema.type !== 'state') {\n                this.defaultValue = props.schema.defaultFunc\n                    ? this.execute(\n                          props.schema.defaultFunc,\n                          props.schema.default,\n                          props.data,\n                          props.arrayIndex,\n                          props.globalData,\n                      )\n                    : props.schema.default;\n            }\n        }\n\n        this.lang = I18n.getLanguage();\n    }\n\n    componentDidMount(): void {\n        if (this.props.oContext.registerOnForceUpdate) {\n            this.props.oContext.registerOnForceUpdate(this.props.attr, this.onUpdate);\n        }\n        const LIKE_SELECT = ['select', 'autocomplete', 'autocompleteSendTo'];\n        // init default value\n        if (this.defaultValue !== undefined) {\n            const value = ConfigGeneric.getValue(this.props.data, this.props.attr);\n            if (\n                value === undefined ||\n                (LIKE_SELECT.includes(this.props.schema.type) && (value === '' || value === null))\n            ) {\n                setTimeout(() => {\n                    if (this.props.custom) {\n                        this.props.onChange(this.props.attr, this.defaultValue, () =>\n                            setTimeout(() => this.props.oContext.forceUpdate([this.props.attr], this.props.data), 100),\n                        );\n                    } else {\n                        ConfigGeneric.setValue(this.props.data, this.props.attr, this.defaultValue);\n                        this.props.onChange(this.props.data, undefined, () =>\n                            this.props.oContext.forceUpdate([this.props.attr], this.props.data),\n                        );\n                    }\n                }, 100);\n            }\n        } else if (this.props.schema.defaultSendTo) {\n            this.sendTo();\n        }\n    }\n\n    sendTo(): void {\n        if (this.props.alive) {\n            this.defaultSendToDone = true;\n            let data: any = this.props.schema.data;\n            if (data === undefined && this.props.schema.jsonData) {\n                const dataStr = this.getPattern(this.props.schema.jsonData, null, true);\n                try {\n                    data = JSON.parse(dataStr);\n                } catch {\n                    console.error(`Cannot parse json data: ${dataStr}`);\n                }\n            } else {\n                data = {\n                    attr: this.props.attr,\n                    value: ConfigGeneric.getValue(this.props.data, this.props.attr),\n                };\n            }\n\n            if (data === undefined) {\n                data = null;\n            }\n\n            void this.props.oContext.socket\n                .sendTo(\n                    `${this.props.oContext.adapterName}.${this.props.oContext.instance}`,\n                    this.props.schema.defaultSendTo,\n                    data,\n                )\n                .then((value: any) => {\n                    if (value !== null && value !== undefined) {\n                        if (this.props.custom) {\n                            this.props.onChange(this.props.attr, value, () =>\n                                this.props.oContext.forceUpdate([this.props.attr], this.props.data),\n                            );\n                        } else {\n                            ConfigGeneric.setValue(this.props.data, this.props.attr, value);\n                            this.props.onChange(this.props.data, undefined, () =>\n                                this.props.oContext.forceUpdate([this.props.attr], this.props.data),\n                            );\n                        }\n                    }\n                });\n        } else {\n            this.defaultSendToDone = false;\n            if (!this.props.schema.allowSaveWithError) {\n                // show error, that instance did not start\n                this.onError(\n                    this.props.attr,\n                    I18n.t('ra_Instance %s is not alive', this.props.oContext.instance.toString()),\n                );\n            }\n        }\n    }\n\n    componentWillUnmount(): void {\n        if (this.props.oContext.registerOnForceUpdate) {\n            this.props.oContext.registerOnForceUpdate(this.props.attr);\n        }\n        if (this.sendToTimeout) {\n            clearTimeout(this.sendToTimeout);\n            this.sendToTimeout = null;\n        }\n    }\n\n    onUpdate = (data: Record<string, any>): void => {\n        const value = ConfigGeneric.getValue(data || this.props.data, this.props.attr) || '';\n        if (this.state.value !== value) {\n            this.setState({ value });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    /**\n     * Extract attribute out of data\n     */\n    static getValue(data: Record<string, any>, attr: string | string[]): any {\n        if (typeof attr === 'string') {\n            return ConfigGeneric.getValue(data, attr.split('.'));\n        }\n        if (attr.length === 1) {\n            return data[attr[0]];\n        }\n        const part = attr.shift();\n\n        if (typeof part === 'string' && typeof data[part] === 'object') {\n            return ConfigGeneric.getValue(data[part], attr);\n        }\n        return undefined;\n    }\n\n    static setValue(data: Record<string, any>, attr: string | string[], value: any): void {\n        if (typeof attr === 'string') {\n            ConfigGeneric.setValue(data, attr.split('.'), value);\n            return;\n        }\n        if (attr.length === 1) {\n            if (value === null) {\n                delete data[attr[0]];\n            } else {\n                data[attr[0]] = value;\n            }\n        } else {\n            const part = attr.shift();\n\n            if (typeof part !== 'string') {\n                return;\n            }\n\n            if (!data[part] || typeof data[part] === 'object') {\n                data[part] = data[part] || {};\n            }\n            ConfigGeneric.setValue(data[part], attr, value);\n        }\n    }\n\n    getText(text: ioBroker.StringOrTranslated, noTranslation?: boolean): string {\n        if (!text) {\n            return '';\n        }\n\n        if (typeof text === 'string') {\n            const strText = noTranslation ? text : I18n.t(text);\n            if (strText.includes('${')) {\n                return this.getPattern(strText, null, noTranslation);\n            }\n            return strText;\n        }\n\n        if (isObject(text)) {\n            // todo\n            if ((text as any).func) {\n                // calculate pattern\n                if (typeof (text as any).func === 'object') {\n                    return this.getPattern((text as any).func[this.lang] || (text as any).func.en || '', null, true);\n                }\n                return this.getPattern((text as any).func, null, noTranslation);\n            }\n\n            return text[this.lang] || text.en || '';\n        }\n\n        return (text as any).toString();\n    }\n\n    renderDialogConfirm(): JSX.Element | null {\n        if (!this.state.confirmDialog) {\n            return null;\n        }\n        const confirm = this.state.confirmData || this.props.schema.confirm;\n        let icon: null | JSX.Element = null;\n        if (confirm.type === 'warning') {\n            icon = <IconWarning />;\n        } else if (confirm.type === 'error') {\n            icon = <IconError />;\n        } else if (confirm.type === 'info') {\n            icon = <IconInfo />;\n        }\n\n        return (\n            <DialogConfirm\n                title={this.getText(confirm.title) || I18n.t('ra_Please confirm')}\n                text={this.getText(confirm.text)}\n                ok={this.getText(confirm.ok) || I18n.t('ra_Ok')}\n                cancel={this.getText(confirm.cancel) || I18n.t('ra_Cancel')}\n                icon={icon || undefined}\n                onClose={isOk =>\n                    this.setState({ confirmDialog: false }, () => {\n                        if (isOk) {\n                            if (this.state.confirmCallback) {\n                                const callback = this.state.confirmCallback;\n                                this.setState({ confirmCallback: null }, () => callback(true));\n                                return;\n                            }\n\n                            const data = JSON.parse(JSON.stringify(this.props.data));\n                            if (this.state.confirmDepAttr) {\n                                ConfigGeneric.setValue(data, this.state.confirmDepAttr, this.state.confirmDepNewValue);\n                            }\n\n                            ConfigGeneric.setValue(data, this.state.confirmAttr, this.state.confirmNewValue);\n                            this.setState(\n                                {\n                                    confirmDialog: false,\n                                    confirmDepAttr: null,\n                                    confirmDepNewValue: null,\n                                    confirmNewValue: null,\n                                    confirmAttr: null,\n                                    confirmData: null,\n                                },\n                                () => this.props.onChange(data),\n                            );\n                        } else {\n                            const callback = this.state.confirmCallback;\n                            this.setState(\n                                {\n                                    confirmDialog: false,\n                                    confirmDepAttr: null,\n                                    confirmDepNewValue: null,\n                                    confirmNewValue: null,\n                                    confirmAttr: null,\n                                    confirmData: null,\n                                    confirmCallback: null,\n                                },\n                                () => {\n                                    if (callback) {\n                                        callback(false);\n                                    }\n                                },\n                            );\n                        }\n                    })\n                }\n            />\n        );\n    }\n\n    // eslint-disable-next-line react/no-unused-class-component-methods\n    getIcon(iconSettings?: ConfigIconType | null): JSX.Element | null {\n        iconSettings = iconSettings || this.props.schema.icon;\n        let icon = null;\n        if (iconSettings === 'auth') {\n            icon = <IconAuth />;\n        } else if (iconSettings === 'send') {\n            icon = <IconSend />;\n        } else if (iconSettings === 'web') {\n            icon = <IconWeb />;\n        } else if (iconSettings === 'warning') {\n            icon = <IconWarning />;\n        } else if (iconSettings === 'error') {\n            icon = <IconError />;\n        } else if (iconSettings === 'info') {\n            icon = <IconInfo />;\n        } else if (iconSettings === 'search') {\n            icon = <IconSearch />;\n        } else if (iconSettings === 'book') {\n            icon = <IconMenuBook />;\n        } else if (iconSettings === 'help') {\n            icon = <IconHelp />;\n        } else if (iconSettings === 'upload') {\n            icon = <IconUploadFile />;\n        } else if (iconSettings === 'edit') {\n            icon = <IconEdit />;\n        } else if (iconSettings === 'user') {\n            icon = <IconPerson />;\n        } else if (iconSettings === 'group') {\n            icon = <IconGroup />;\n        } else if (iconSettings === 'delete') {\n            icon = <IconDelete />;\n        } else if (iconSettings === 'refresh') {\n            icon = <IconRefresh />;\n        } else if (iconSettings === 'add') {\n            icon = <IconAdd />;\n        } else if (iconSettings === 'unpair') {\n            icon = <IconLinkOff />;\n        } else if (iconSettings === 'pair') {\n            icon = <LinkIcon />;\n        } else if (iconSettings === 'save') {\n            icon = <Save />;\n        } else if (iconSettings === 'open') {\n            icon = <OpenInNew />;\n        } else if (iconSettings) {\n            if (iconSettings.endsWith('.png') || iconSettings.endsWith('.svg') || iconSettings.endsWith('.jpg')) {\n                // this path is relative to ./adapter/NAME\n                if (!iconSettings.startsWith('http://') && !iconSettings.startsWith('https://')) {\n                    iconSettings = `./adapter/${this.props.oContext.adapterName}/${iconSettings}`;\n                }\n            }\n\n            icon = (\n                <Icon\n                    src={iconSettings}\n                    style={{ width: 22, height: 22 }}\n                />\n            );\n        }\n\n        return icon;\n    }\n\n    /**\n     * Trigger onChange, to activate save button on change\n     *\n     * @param attr the changed attribute\n     * @param newValue new value of the attribute\n     */\n    // eslint-disable-next-line react/no-unused-class-component-methods\n    onChangeAsync(attr: string, newValue: unknown): Promise<void> {\n        return new Promise(resolve => {\n            const mayBePromise = this.onChange(attr, newValue, resolve);\n            if (mayBePromise instanceof Promise) {\n                mayBePromise.catch(e => console.error(`Cannot set value: ${e}`));\n            }\n        });\n    }\n\n    /**\n     * Trigger onChange, to activate save button on change\n     *\n     * @param attr the changed attribute\n     * @param newValue new value of the attribute\n     * @param cb optional callback function, else returns a Promise\n     */\n    onChange(attr: string, newValue: unknown, cb?: () => void): Promise<void> {\n        // Do not use here deep copy, as it is not JsonConfig\n        const data = JSON.parse(JSON.stringify(this.props.data));\n        ConfigGeneric.setValue(data, attr, newValue);\n\n        if (\n            this.props.schema.confirm &&\n            this.execute(this.props.schema.confirm.condition, false, data, this.props.arrayIndex, this.props.globalData)\n        ) {\n            return new Promise<void>(resolve => {\n                this.setState(\n                    {\n                        confirmDialog: true,\n                        confirmNewValue: newValue,\n                        confirmAttr: attr,\n                        confirmData: null,\n                    },\n                    () => {\n                        if (typeof cb === 'function') {\n                            cb();\n                        } else {\n                            resolve();\n                        }\n                    },\n                );\n            });\n        }\n        // find any inputs with confirmation\n        if (this.props.schema.confirmDependsOn) {\n            for (let z = 0; z < this.props.schema.confirmDependsOn.length; z++) {\n                const dep = this.props.schema.confirmDependsOn[z];\n                if (dep.confirm) {\n                    const val = ConfigGeneric.getValue(data, dep.attr);\n\n                    if (\n                        this.execute(dep.confirm.condition, false, data, this.props.arrayIndex, this.props.globalData)\n                    ) {\n                        return new Promise<void>(resolve => {\n                            this.setState(\n                                {\n                                    confirmDialog: true,\n                                    confirmNewValue: newValue,\n                                    confirmAttr: attr,\n                                    confirmDepNewValue: val,\n                                    confirmDepAttr: dep.attr,\n                                    confirmData: dep.confirm,\n                                },\n                                () => {\n                                    if (typeof cb === 'function') {\n                                        cb();\n                                    } else {\n                                        resolve();\n                                    }\n                                },\n                            );\n                        });\n                    }\n                }\n            }\n        }\n\n        const changed: string[] = [];\n        if (this.props.schema.onChangeDependsOn) {\n            for (let z = 0; z < this.props.schema.onChangeDependsOn.length; z++) {\n                const dep = this.props.schema.onChangeDependsOn[z];\n                if (dep.onChange) {\n                    const val = ConfigGeneric.getValue(data, dep.attr);\n\n                    let _newValue;\n                    if (this.props.custom) {\n                        _newValue = this.executeCustom(\n                            dep.onChange.calculateFunc,\n                            data,\n                            this.props.customObj,\n                            this.props.oContext.instanceObj,\n                            this.props.arrayIndex,\n                            this.props.globalData,\n                        );\n                    } else {\n                        _newValue = this.execute(\n                            dep.onChange.calculateFunc,\n                            val,\n                            data,\n                            this.props.arrayIndex,\n                            this.props.globalData,\n                        );\n                    }\n\n                    if (_newValue !== val) {\n                        ConfigGeneric.setValue(data, dep.attr, _newValue);\n                        changed.push(dep.attr);\n                    }\n                }\n            }\n        }\n\n        if (this.props.schema.hiddenDependsOn) {\n            for (let z = 0; z < this.props.schema.hiddenDependsOn.length; z++) {\n                const dep = this.props.schema.hiddenDependsOn[z];\n                if (dep.hidden) {\n                    changed.push(dep.attr);\n                }\n            }\n        }\n\n        if (this.props.schema.labelDependsOn) {\n            for (let z = 0; z < this.props.schema.labelDependsOn.length; z++) {\n                const dep = this.props.schema.labelDependsOn[z];\n                if (dep.hidden) {\n                    changed.push(dep.attr);\n                }\n            }\n        }\n\n        if (this.props.schema.helpDependsOn) {\n            for (let z = 0; z < this.props.schema.helpDependsOn.length; z++) {\n                const dep = this.props.schema.helpDependsOn[z];\n                if (dep.hidden) {\n                    changed.push(dep.attr);\n                }\n            }\n        }\n\n        if (this.props.schema.onChange && !this.props.schema.onChange.ignoreOwnChanges) {\n            const val = ConfigGeneric.getValue(data, this.props.attr);\n\n            const newValue_ = this.props.custom\n                ? this.executeCustom(\n                      this.props.schema.onChange.calculateFunc,\n                      data,\n                      this.props.customObj,\n                      this.props.oContext.instanceObj,\n                      this.props.arrayIndex,\n                      this.props.globalData,\n                  )\n                : this.execute(\n                      this.props.schema.onChange.calculateFunc,\n                      val,\n                      data,\n                      this.props.arrayIndex,\n                      this.props.globalData,\n                  );\n            if (newValue_ !== val) {\n                ConfigGeneric.setValue(data, this.props.attr, newValue_);\n            }\n        }\n\n        if (this.props.custom) {\n            this.props.onChange(attr, newValue, () => cb && cb());\n\n            if (changed?.length) {\n                changed.forEach((_attr, i) =>\n                    setTimeout(() => this.props.onChange(_attr, ConfigGeneric.getValue(data, _attr)), i * 50),\n                );\n            }\n        } else {\n            this.props.onChange(data, undefined, () => {\n                if (changed.length) {\n                    this.props.oContext.forceUpdate(changed, data);\n                }\n                if (cb) {\n                    cb();\n                }\n            });\n        }\n\n        return Promise.resolve();\n    }\n\n    execute(\n        func: string | boolean | Record<string, string>,\n        defaultValue: string | number | boolean,\n        data: Record<string, any>,\n        arrayIndex: number,\n        globalData: Record<string, any>,\n    ): string | number | boolean {\n        let fun: string;\n\n        if (isObject(func)) {\n            fun = func.func;\n        } else if (typeof func === 'string') {\n            fun = func;\n        } else {\n            return func;\n        }\n\n        if (!fun) {\n            return defaultValue;\n        }\n        try {\n            const f = new Function(\n                'data',\n                'originalData',\n                '_system',\n                '_alive',\n                '_common',\n                '_socket',\n                '_instance',\n                'arrayIndex',\n                'globalData',\n                '_changed',\n                fun.includes('return') ? fun : `return ${fun}`,\n            );\n            return f(\n                data || this.props.data,\n                this.props.originalData,\n                this.props.oContext.systemConfig,\n                this.props.alive,\n                this.props.common,\n                this.props.oContext.socket,\n                this.props.oContext.instance,\n                arrayIndex,\n                globalData,\n                this.props.changed,\n            );\n        } catch (e) {\n            console.error(`Cannot execute ${JSON.stringify(func)}: ${e}`);\n            return defaultValue;\n        }\n    }\n\n    executeCustom(\n        func: string | boolean | Record<string, string>,\n        data: Record<string, any>,\n        customObj: Record<string, any>,\n        instanceObj: ioBroker.InstanceObject,\n        arrayIndex: number,\n        globalData: Record<string, any>,\n    ): string | boolean | number | null {\n        let fun: string;\n\n        if (isObject(func)) {\n            fun = func.func;\n        } else if (typeof func === 'string') {\n            fun = func;\n        } else {\n            return func;\n        }\n\n        if (!fun) {\n            return null;\n        }\n        try {\n            const f = new Function(\n                'data',\n                'originalData',\n                '_system',\n                'instanceObj',\n                'customObj',\n                '_socket',\n                'arrayIndex',\n                'globalData',\n                '_changed',\n                fun.includes('return') ? fun : `return ${fun}`,\n            );\n            return f(\n                data || this.props.data,\n                this.props.originalData,\n                this.props.oContext.systemConfig,\n                instanceObj,\n                customObj,\n                this.props.oContext.socket,\n                arrayIndex,\n                globalData,\n                this.props.changed,\n            );\n        } catch (e) {\n            console.error(`Cannot execute ${fun}: ${e}`);\n            return null;\n        }\n    }\n\n    calculate(schema: Record<string, any>): {\n        error: boolean;\n        disabled: boolean;\n        hidden: boolean;\n        defaultValue: null | string | number | boolean;\n    } {\n        let error: boolean;\n        let disabled: boolean;\n        let hidden: boolean;\n        let defaultValue: null | string | number | boolean;\n\n        if (this.props.custom) {\n            error = schema.validator\n                ? !this.executeCustom(\n                      schema.validator,\n                      this.props.data,\n                      this.props.customObj,\n                      this.props.oContext.instanceObj,\n                      this.props.arrayIndex,\n                      this.props.globalData,\n                  )\n                : false;\n            if (schema.disabled === true) {\n                disabled = true;\n            } else {\n                disabled = schema.disabled\n                    ? (this.executeCustom(\n                          schema.disabled,\n                          this.props.data,\n                          this.props.customObj,\n                          this.props.oContext.instanceObj,\n                          this.props.arrayIndex,\n                          this.props.globalData,\n                      ) as boolean)\n                    : false;\n            }\n            if (schema.hidden === true) {\n                hidden = true;\n            } else {\n                hidden = schema.hidden\n                    ? (this.executeCustom(\n                          schema.hidden,\n                          this.props.data,\n                          this.props.customObj,\n                          this.props.oContext.instanceObj,\n                          this.props.arrayIndex,\n                          this.props.globalData,\n                      ) as boolean)\n                    : false;\n            }\n            defaultValue = schema.defaultFunc\n                ? this.executeCustom(\n                      schema.defaultFunc,\n                      this.props.data,\n                      this.props.customObj,\n                      this.props.oContext.instanceObj,\n                      this.props.arrayIndex,\n                      this.props.globalData,\n                  )\n                : schema.default;\n        } else {\n            error = schema.validator\n                ? !this.execute(schema.validator, false, this.props.data, this.props.arrayIndex, this.props.globalData)\n                : false;\n            if (schema.disabled === true) {\n                disabled = true;\n            } else {\n                disabled = schema.disabled\n                    ? (this.execute(\n                          schema.disabled,\n                          false,\n                          this.props.data,\n                          this.props.arrayIndex,\n                          this.props.globalData,\n                      ) as boolean)\n                    : false;\n            }\n            if (schema.hidden === true) {\n                hidden = true;\n            } else {\n                hidden = schema.hidden\n                    ? (this.execute(\n                          schema.hidden,\n                          false,\n                          this.props.data,\n                          this.props.arrayIndex,\n                          this.props.globalData,\n                      ) as boolean)\n                    : false;\n            }\n            defaultValue = schema.defaultFunc\n                ? this.execute(\n                      schema.defaultFunc,\n                      schema.default,\n                      this.props.data,\n                      this.props.arrayIndex,\n                      this.props.globalData,\n                  )\n                : schema.default;\n        }\n\n        return {\n            error,\n            disabled,\n            hidden,\n            defaultValue,\n        };\n    }\n\n    onError(attr: string, error?: string): void {\n        if (!error) {\n            delete this.isError[attr];\n        } else {\n            this.isError[attr] = error;\n        }\n\n        if (this.props.onError) {\n            this.props.onError(attr, error);\n        }\n    }\n\n    renderItem(_error: unknown, _disabled: boolean, _defaultValue?: unknown): JSX.Element | string | null {\n        return this.getText(this.props.schema.label) || this.getText(this.props.schema.text);\n    }\n\n    // eslint-disable-next-line react/no-unused-class-component-methods\n    renderHelp(\n        text: ioBroker.StringOrTranslated,\n        link: string,\n        noTranslation: boolean,\n    ): JSX.Element | JSX.Element[] | string {\n        if (!link) {\n            text = this.getText(text, noTranslation) || '';\n            if (\n                text &&\n                (text.includes('<a ') || text.includes('<br') || text.includes('<b>') || text.includes('<i>'))\n            ) {\n                return Utils.renderTextWithA(text);\n            }\n            return text;\n        }\n        return (\n            <a\n                href={link}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                style={{\n                    color: this.props.oContext.themeType === 'dark' ? '#a147ff' : '#5b238f',\n                    textDecoration: 'underline',\n                }}\n            >\n                {this.getText(text, noTranslation)}\n            </a>\n        );\n    }\n\n    // we have a problem that a string '{\"password\": \"${password}\"}' cannot contain a double quota inside the string\n    // escape it with \\\"\n    static escapeString(str: string, data: Record<string, any>): string {\n        if (typeof str !== 'string') {\n            return '';\n        }\n        str = str.replace(/`/g, '\\\\`');\n        // extract all tokes with ${data.token}\n        str = str.replace(/\\${([^}]+)}/g, (_match: string, p1: any) => {\n            if (p1 && typeof p1 === 'string' && p1.startsWith('data.')) {\n                const value = ConfigGeneric.getValue(data, p1.replace(/^data\\./, ''));\n\n                if (typeof value === 'string' && value.includes('\"')) {\n                    return `\\${${p1}.replace(/\"/g, '\\\\\\\\\"')}`;\n                }\n            }\n            return _match;\n        });\n\n        return str;\n    }\n\n    getPattern(pattern: string | { func: string }, data?: Record<string, any>, noTranslation?: boolean): string {\n        data = data || this.props.data;\n        if (!pattern) {\n            return '';\n        }\n        let patternStr: string;\n        if (typeof pattern === 'object') {\n            if (pattern.func) {\n                patternStr = (pattern as { func: string }).func;\n            } else {\n                console.log(`Object must be stringified: ${JSON.stringify(pattern)}`);\n                patternStr = JSON.stringify(pattern);\n            }\n        } else {\n            patternStr = pattern;\n        }\n\n        try {\n            if (this.props.custom) {\n                const f = new Function(\n                    'data',\n                    'originalData',\n                    'arrayIndex',\n                    'globalData',\n                    '_system',\n                    'instanceObj',\n                    'customObj',\n                    '_socket',\n                    '_changed',\n                    `return \\`${ConfigGeneric.escapeString(patternStr, data)}\\``,\n                );\n                return f(\n                    data,\n                    this.props.originalData,\n                    this.props.arrayIndex,\n                    this.props.globalData,\n                    this.props.oContext.systemConfig,\n                    this.props.oContext.instanceObj,\n                    this.props.customObj,\n                    this.props.oContext.socket,\n                    this.props.changed,\n                );\n            }\n\n            const f = new Function(\n                'data',\n                'originalData',\n                'arrayIndex',\n                'globalData',\n                '_system',\n                '_alive',\n                '_common',\n                '_socket',\n                '_changed',\n                `return \\`${ConfigGeneric.escapeString(patternStr, data)}\\``,\n            );\n            const text = f(\n                data,\n                this.props.originalData,\n                this.props.arrayIndex,\n                this.props.globalData,\n                this.props.oContext.systemConfig,\n                this.props.alive,\n                this.props.common,\n                this.props.oContext.socket,\n                this.props.changed,\n            );\n            if (noTranslation) {\n                return text;\n            }\n            return I18n.t(text);\n        } catch (e) {\n            console.error(`Cannot execute ${patternStr}: ${e}`);\n            return patternStr;\n        }\n    }\n\n    render(): string | JSX.Element | null {\n        const schema = this.props.schema;\n\n        if (!schema) {\n            return null;\n        }\n\n        // Do not show this component if expert mode is false\n        if (this.props.oContext.expertMode === false && schema.expertMode) {\n            return null;\n        }\n\n        if (this.props.alive && this.defaultSendToDone === false) {\n            this.sendToTimeout = setTimeout(() => {\n                this.sendToTimeout = null;\n                this.sendTo();\n            }, 200);\n        }\n\n        const { error, disabled, hidden, defaultValue } = this.calculate(schema);\n\n        if (hidden) {\n            // Remove all errors if element is hidden\n            if (Object.keys(this.isError).length) {\n                setTimeout(\n                    isError => Object.keys(isError).forEach(attr => this.props.onError(attr)),\n                    100,\n                    JSON.parse(JSON.stringify(this.isError)),\n                );\n                this.isError = {};\n            }\n\n            if (schema.hideOnlyControl) {\n                const item = (\n                    <Grid2\n                        size={{\n                            xs: schema.xs || DEFAULT_SM_SIZE, // if xs is not defined, take the full width\n                            sm: schema.sm || undefined,\n                            md: schema.md || undefined,\n                            lg: schema.lg || undefined,\n                            xl: schema.xl || undefined,\n                        }}\n                        style={{\n                            marginBottom: 0 /* marginRight: 8, */,\n                            textAlign: 'left',\n                            ...schema.style,\n                            ...(this.props.oContext.themeType === 'dark' ? schema.darkStyle : {}),\n                        }}\n                    />\n                );\n\n                if (schema.newLine) {\n                    return (\n                        <>\n                            <div style={{ flexBasis: '100%', height: 0 }} />\n                            {item}\n                        </>\n                    );\n                }\n                return item;\n            }\n            return null;\n        }\n        // Add error\n        if (schema.validatorNoSaveOnError) {\n            if (error && !Object.keys(this.isError).length) {\n                this.isError = {\n                    [this.props.attr]: schema.validatorErrorText ? I18n.t(schema.validatorErrorText) : true,\n                };\n                setTimeout(\n                    isError => Object.keys(isError).forEach(attr => this.props.onError(attr, isError[attr])),\n                    100,\n                    JSON.parse(JSON.stringify(this.isError)),\n                );\n            } else if (!error && Object.keys(this.isError).length) {\n                setTimeout(\n                    isError => Object.keys(isError).forEach(attr => this.props.onError(attr)),\n                    100,\n                    JSON.parse(JSON.stringify(this.isError)),\n                );\n                this.isError = {};\n            }\n        }\n\n        const renderedItem = this.renderItem(\n            error,\n            disabled || this.props.commandRunning || this.props.disabled,\n            defaultValue,\n        );\n\n        if (this.noPlaceRequired) {\n            return renderedItem;\n        }\n\n        const item = (\n            <Grid2\n                title={this.getText(schema.tooltip)}\n                size={{\n                    xs: schema.xs || 12, // if xs is not defined, take the full width\n                    sm: schema.sm || undefined,\n                    md: schema.md || undefined,\n                    lg: schema.lg || undefined,\n                    xl: schema.xl || undefined,\n                }}\n                style={{\n                    marginBottom: 0,\n                    // marginRight: 8,\n                    textAlign: 'left',\n                    width: schema.type === 'divider' || schema.type === 'header' ? schema.width || '100%' : undefined,\n                    ...schema.style,\n                    ...(this.props.oContext.themeType === 'dark' ? schema.darkStyle : {}),\n                }}\n            >\n                {this.props.schema.defaultSendTo && this.props.schema.button ? (\n                    <Grid2\n                        container\n                        style={{ width: '100%' }}\n                    >\n                        <Grid2 flex={1}>{renderedItem}</Grid2>\n                        <Grid2>\n                            <Button\n                                disabled={disabled}\n                                variant=\"outlined\"\n                                onClick={() => this.sendTo()}\n                                title={\n                                    this.props.schema.buttonTooltip\n                                        ? this.getText(\n                                              this.props.schema.buttonTooltip,\n                                              this.props.schema.buttonTooltipNoTranslation,\n                                          )\n                                        : I18n.t('ra_Request data by instance')\n                                }\n                            >\n                                {this.getText(this.props.schema.button as ioBroker.StringOrTranslated)}\n                            </Button>\n                        </Grid2>\n                    </Grid2>\n                ) : (\n                    renderedItem\n                )}\n            </Grid2>\n        );\n\n        if (schema.newLine) {\n            return (\n                <>\n                    <div style={{ flexBasis: '100%', height: 0 }} />\n                    {this.renderDialogConfirm()}\n                    {item}\n                </>\n            );\n        }\n        if (this.state.confirmDialog) {\n            return (\n                <>\n                    {this.renderDialogConfirm()}\n                    {item}\n                </>\n            );\n        }\n        return item;\n    }\n}\n","import React, { type JSX } from 'react';\n\nimport {\n    FormHelperText,\n    Accordion,\n    AccordionSummary,\n    AccordionDetails,\n    IconButton,\n    Paper,\n    Toolbar,\n    Tooltip,\n    Typography,\n} from '@mui/material';\n\nimport {\n    Add as AddIcon,\n    Delete as DeleteIcon,\n    ArrowUpward as UpIcon,\n    ArrowDownward as DownIcon,\n    ContentCopy as CopyContentIcon,\n    ExpandMore as ExpandMoreIcon,\n} from '@mui/icons-material';\n\nimport { I18n, type IobTheme, Utils } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemAccordion, ConfigItemAny, ConfigItemIndexed, ConfigItemPanel } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\nimport ConfigPanel from './ConfigPanel';\n\nconst styles: Record<string, any> = {\n    fullWidth: {\n        width: '100%',\n    },\n    accordionSummary: (theme: IobTheme): React.CSSProperties => ({\n        backgroundColor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.08)' : 'rgba(0, 0, 0, 0.08)',\n    }),\n    accordionTitle: {\n        // fontWeight: 'bold',\n    },\n    toolbar: (theme: IobTheme): React.CSSProperties => ({\n        backgroundColor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.08)' : 'rgba(0, 0, 0, 0.08)',\n        borderRadius: '3px',\n    }),\n    tooltip: {\n        pointerEvents: 'none',\n    },\n};\n\ninterface ConfigAccordionProps extends ConfigGenericProps {\n    schema: ConfigItemAccordion;\n}\n\ninterface ConfigAccordionState extends ConfigGenericState {\n    value: Record<string, any>[];\n    activeIndex: number;\n    iteration: number;\n}\n\nclass ConfigAccordion extends ConfigGeneric<ConfigAccordionProps, ConfigAccordionState> {\n    private typingTimer: ReturnType<typeof setTimeout> | null = null;\n\n    constructor(props: ConfigAccordionProps) {\n        super(props);\n        this.props.schema.items = this.props.schema.items || [];\n    }\n\n    componentDidMount(): void {\n        super.componentDidMount();\n\n        let value = ConfigGeneric.getValue(this.props.data, this.props.attr) || [];\n\n        if (!Array.isArray(value)) {\n            value = [];\n        }\n\n        this.setState({\n            value,\n            activeIndex: -1,\n            iteration: 0,\n        });\n    }\n\n    componentWillUnmount(): void {\n        if (this.typingTimer) {\n            clearTimeout(this.typingTimer);\n            this.typingTimer = null;\n        }\n        super.componentWillUnmount();\n    }\n\n    itemAccordion(data: Record<string, any>, idx: number): JSX.Element {\n        const { value } = this.state;\n        const { schema } = this.props;\n\n        const schemaItem: ConfigItemPanel = {\n            type: 'panel',\n            items: schema.items.reduce(\n                (accumulator: Record<string, ConfigItemIndexed>, currentValue: ConfigItemIndexed) => {\n                    accumulator[currentValue.attr] = currentValue;\n                    return accumulator;\n                },\n                {},\n            ) as Record<string, ConfigItemAny>,\n            style: { marginLeft: '-8px', marginTop: '10px', marginBottom: '10px' },\n        };\n\n        return (\n            <ConfigPanel\n                oContext={this.props.oContext}\n                index={idx + this.state.iteration}\n                arrayIndex={idx}\n                changed={this.props.changed}\n                globalData={this.props.data}\n                common={this.props.common}\n                alive={this.props.alive}\n                themeName={this.props.themeName}\n                data={data}\n                custom\n                schema={schemaItem}\n                originalData={this.props.originalData}\n                onChange={(attr: string, valueChange: any): void => {\n                    const newObj: Record<string, any> = JSON.parse(JSON.stringify(value));\n                    newObj[idx][attr] = valueChange;\n                    this.setState({ value: newObj } as ConfigAccordionState, () => this.onChangeWrapper(newObj));\n                }}\n                onError={(error, attr) => this.onError(error, attr)}\n                table={this.props.table}\n            />\n        );\n    }\n\n    onDelete = (index: number) => (): void => {\n        const newValue = JSON.parse(JSON.stringify(this.state.value));\n        newValue.splice(index, 1);\n\n        this.setState({ value: newValue, iteration: this.state.iteration + 10000 }, () =>\n            this.onChangeWrapper(newValue),\n        );\n    };\n\n    onClone = (index: number) => (): void => {\n        const newValue = JSON.parse(JSON.stringify(this.state.value)) as Record<string, any>[];\n        const cloned = JSON.parse(JSON.stringify(newValue[index]));\n        if (typeof this.props.schema.clone === 'string' && typeof cloned[this.props.schema.clone] === 'string') {\n            let i = 1;\n            let text = cloned[this.props.schema.clone];\n            const pattern = text.match(/(\\d+)$/);\n            if (pattern) {\n                text = text.replace(pattern[0], '');\n                i = parseInt(pattern[0], 10) + 1;\n            } else {\n                text += '_';\n            }\n            while (newValue.find(it => it[this.props.schema.clone as string] === text + i.toString())) {\n                i++;\n            }\n            cloned[this.props.schema.clone] = `${cloned[this.props.schema.clone]}_${i}`;\n        }\n\n        newValue.splice(index, 0, cloned);\n\n        this.setState(\n            {\n                value: newValue,\n                activeIndex: -1,\n                iteration: this.state.iteration + 10000,\n            },\n            () => this.onChangeWrapper(newValue),\n        );\n    };\n\n    onChangeWrapper = (newValue: any): void => {\n        if (this.typingTimer) {\n            clearTimeout(this.typingTimer);\n        }\n\n        this.typingTimer = setTimeout(\n            value => {\n                this.typingTimer = null;\n\n                const mayByPromise = this.onChange(this.props.attr, value);\n                if (mayByPromise instanceof Promise) {\n                    void mayByPromise.catch(e => this.onError(e));\n                }\n            },\n            300,\n            newValue,\n        );\n    };\n\n    onAdd = (): void => {\n        const { schema } = this.props;\n        const newValue = JSON.parse(JSON.stringify(this.state.value));\n        const newItem: Record<string, any> =\n            schema.items &&\n            schema.items.reduce((accumulator: Record<string, any>, currentValue: ConfigItemIndexed) => {\n                let defaultValue;\n                if (currentValue.defaultFunc) {\n                    if (this.props.custom) {\n                        defaultValue = currentValue.defaultFunc\n                            ? this.executeCustom(\n                                  currentValue.defaultFunc,\n                                  this.props.data,\n                                  this.props.customObj,\n                                  this.props.oContext.instanceObj,\n                                  newValue.length,\n                                  this.props.data,\n                              )\n                            : this.props.schema.default;\n                    } else {\n                        defaultValue = currentValue.defaultFunc\n                            ? this.execute(\n                                  currentValue.defaultFunc,\n                                  this.props.schema.default,\n                                  this.props.data,\n                                  newValue.length,\n                                  this.props.data,\n                              )\n                            : this.props.schema.default;\n                    }\n                } else {\n                    defaultValue = currentValue.default === undefined ? null : currentValue.default;\n                }\n\n                accumulator[currentValue.attr] = defaultValue;\n                return accumulator;\n            }, {});\n\n        newValue.push(newItem);\n\n        this.setState({ value: newValue, activeIndex: newValue.length - 1 }, () => this.onChangeWrapper(newValue));\n    };\n\n    onMoveUp(idx: number): void {\n        const newValue = JSON.parse(JSON.stringify(this.state.value));\n        const item = newValue[idx];\n        newValue.splice(idx, 1);\n        newValue.splice(idx - 1, 0, item);\n\n        const newIndex = this.state.activeIndex - 1;\n        this.setState({ value: newValue, activeIndex: newIndex, iteration: this.state.iteration + 10000 }, () =>\n            this.onChangeWrapper(newValue),\n        );\n    }\n\n    onMoveDown(idx: number): void {\n        const newValue = JSON.parse(JSON.stringify(this.state.value));\n        const item = newValue[idx];\n        newValue.splice(idx, 1);\n        newValue.splice(idx + 1, 0, item);\n\n        const newIndex = this.state.activeIndex + 1;\n        this.setState({ value: newValue, activeIndex: newIndex, iteration: this.state.iteration + 10000 }, () =>\n            this.onChangeWrapper(newValue),\n        );\n    }\n\n    renderItem(/* error, disabled, defaultValue */): JSX.Element | null {\n        const { schema } = this.props;\n        const { value } = this.state;\n\n        if (!value) {\n            return null;\n        }\n\n        return (\n            <Paper>\n                {schema.label || !schema.noDelete ? (\n                    <Toolbar variant=\"dense\">\n                        {schema.label ? (\n                            <Typography\n                                variant=\"h6\"\n                                id=\"tableTitle\"\n                                component=\"div\"\n                            >\n                                {this.getText(schema.label)}\n                            </Typography>\n                        ) : null}\n                        {!schema.noDelete ? (\n                            <IconButton\n                                size=\"small\"\n                                color=\"primary\"\n                                onClick={this.onAdd}\n                            >\n                                <AddIcon />\n                            </IconButton>\n                        ) : null}\n                    </Toolbar>\n                ) : null}\n                {value.map((idx, i) => (\n                    <Accordion\n                        key={`${idx as unknown as string}_${i}`}\n                        expanded={this.state.activeIndex === i}\n                        onChange={(_e, expanded) => this.setState({ activeIndex: expanded ? i : -1 })}\n                    >\n                        <AccordionSummary\n                            expandIcon={<ExpandMoreIcon />}\n                            sx={Utils.getStyle(this.props.oContext.theme, styles.fullWidth, styles.accordionSummary)}\n                        >\n                            <Typography style={styles.accordionTitle}>{idx[schema.titleAttr]}</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails\n                            style={{\n                                ...schema.style,\n                                ...(this.props.oContext.themeType ? schema.darkStyle : undefined),\n                            }}\n                        >\n                            {this.itemAccordion(value[i], i)}\n                            <Toolbar sx={styles.toolbar}>\n                                {i ? (\n                                    <Tooltip\n                                        title={I18n.t('ra_Move up')}\n                                        slotProps={{ popper: { sx: styles.tooltip } }}\n                                    >\n                                        <IconButton\n                                            size=\"small\"\n                                            onClick={() => this.onMoveUp(i)}\n                                        >\n                                            <UpIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                ) : (\n                                    <div style={styles.buttonEmpty} />\n                                )}\n                                {i < value.length - 1 ? (\n                                    <Tooltip\n                                        title={I18n.t('ra_Move down')}\n                                        slotProps={{ popper: { sx: styles.tooltip } }}\n                                    >\n                                        <IconButton\n                                            size=\"small\"\n                                            onClick={() => this.onMoveDown(i)}\n                                        >\n                                            <DownIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                ) : (\n                                    <div style={styles.buttonEmpty} />\n                                )}\n                                {!schema.noDelete ? (\n                                    <Tooltip\n                                        title={I18n.t('ra_Delete current row')}\n                                        slotProps={{ popper: { sx: styles.tooltip } }}\n                                    >\n                                        <IconButton\n                                            size=\"small\"\n                                            onClick={this.onDelete(i)}\n                                        >\n                                            <DeleteIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                ) : null}\n                                {schema.clone ? (\n                                    <Tooltip\n                                        title={I18n.t('ra_Clone current row')}\n                                        slotProps={{ popper: { sx: styles.tooltip } }}\n                                    >\n                                        <IconButton\n                                            size=\"small\"\n                                            onClick={this.onClone(i)}\n                                        >\n                                            <CopyContentIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                ) : null}\n                            </Toolbar>\n                        </AccordionDetails>\n                    </Accordion>\n                ))}\n                {!schema.noDelete && value.length > 0 ? (\n                    <Toolbar\n                        variant=\"dense\"\n                        sx={styles.rootTool}\n                    >\n                        <IconButton\n                            size=\"small\"\n                            color=\"primary\"\n                            onClick={this.onAdd}\n                        >\n                            <AddIcon />\n                        </IconButton>\n                    </Toolbar>\n                ) : null}\n                {schema.help ? (\n                    <FormHelperText>\n                        {this.renderHelp(\n                            this.props.schema.help,\n                            this.props.schema.helpLink,\n                            this.props.schema.noTranslation,\n                        )}\n                    </FormHelperText>\n                ) : null}\n            </Paper>\n        );\n    }\n}\n\nexport default ConfigAccordion;\n","import React, { type JSX } from 'react';\n\nimport { I18n } from '@iobroker/adapter-react-v5';\nimport type { ConfigItemAlive } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\nconst styles: Record<string, React.CSSProperties> = {\n    root: {\n        width: '100%',\n    },\n    notAlive: {\n        color: '#a30000',\n    },\n};\n\ninterface ConfigAliveProps extends ConfigGenericProps {\n    schema: ConfigItemAlive;\n}\n\ninterface ConfigAliveState extends ConfigGenericState {\n    alive?: boolean | null;\n    instance?: string;\n}\n\nclass ConfigAlive extends ConfigGeneric<ConfigAliveProps, ConfigAliveState> {\n    componentDidMount(): void {\n        super.componentDidMount();\n\n        const instance = this.getInstance();\n\n        void this.props.oContext.socket\n            .getState(`${instance}.alive`)\n            .then(state => this.setState({ alive: !!(state && state.val), instance }));\n    }\n\n    getInstance(): string {\n        let instance =\n            this.props.schema.instance || `${this.props.oContext.adapterName}.${this.props.oContext.instance}`;\n        if (instance.includes('${')) {\n            instance = this.getPattern(instance, null, true);\n        }\n        if (instance && !instance.startsWith('system.adapter.')) {\n            instance = `system.adapter.${instance}`;\n        }\n        return instance;\n    }\n\n    renderItem(): JSX.Element | null {\n        if (this.getInstance() !== this.state.instance) {\n            setTimeout(() => {\n                const instance = this.getInstance();\n                if (instance) {\n                    void this.props.oContext.socket\n                        .getState(`${instance}.alive`)\n                        .then(state => this.setState({ alive: !!(state && state.val), instance }));\n                } else {\n                    this.setState({ alive: null, instance });\n                }\n            }, 200);\n        }\n\n        if (this.state.alive !== false && this.state.alive !== true) {\n            return null;\n        }\n\n        const instance = this.state.instance.replace(/^system.adapter./, '');\n        return (\n            <div style={{ ...styles.root, ...(!this.state.alive ? styles.notAlive : undefined) }}>\n                {this.state.alive\n                    ? this.props.schema.textAlive !== undefined\n                        ? this.props.schema.textAlive\n                            ? I18n.t(this.props.schema.textAlive, instance)\n                            : ''\n                        : I18n.t('ra_Instance %s is alive', instance)\n                    : this.props.schema.textNotAlive !== undefined\n                      ? this.props.schema.textNotAlive\n                          ? I18n.t(this.props.schema.textNotAlive, instance)\n                          : ''\n                      : I18n.t('ra_Instance %s is not alive', instance)}\n            </div>\n        );\n    }\n}\n\nexport default ConfigAlive;\n","import React, { type JSX } from 'react';\n\nimport { Autocomplete, TextField } from '@mui/material';\n\nimport { I18n } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemAutocomplete, ConfigItemSelectOption } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericState, type ConfigGenericProps } from './ConfigGeneric';\n\nexport interface ConfigAutocompleteProps extends ConfigGenericProps {\n    schema: ConfigItemAutocomplete;\n}\n\nexport interface ConfigAutocompleteState extends ConfigGenericState {\n    selectOptions: { value: string; label: string }[];\n}\n\nclass ConfigAutocomplete extends ConfigGeneric<ConfigAutocompleteProps, ConfigAutocompleteState> {\n    componentDidMount(): void {\n        super.componentDidMount();\n        const value = ConfigGeneric.getValue(this.props.data, this.props.attr);\n\n        const selectOptions: { label: string; value: string }[] = this.props.schema.options.map(\n            (item: { label: string; value: string } | string) =>\n                typeof item === 'string' ? { label: item, value: item } : JSON.parse(JSON.stringify(item)),\n        );\n\n        // if __different\n        if (Array.isArray(value)) {\n            selectOptions.unshift({\n                label: I18n.t(ConfigGeneric.DIFFERENT_LABEL),\n                value: ConfigGeneric.DIFFERENT_VALUE,\n            });\n            this.setState({ value: ConfigGeneric.DIFFERENT_VALUE, selectOptions });\n        } else {\n            this.setState({ value, selectOptions });\n        }\n    }\n\n    renderItem(error: unknown, disabled: boolean): JSX.Element | null {\n        if (!this.state.selectOptions) {\n            return null;\n        }\n\n        let item;\n        const options: ConfigItemSelectOption[] = JSON.parse(JSON.stringify(this.state.selectOptions));\n        const isIndeterminate = Array.isArray(this.state.value) || this.state.value === ConfigGeneric.DIFFERENT_VALUE;\n\n        if (isIndeterminate) {\n            [...this.state.value]\n                .filter(val => !options.find(it => (typeof it === 'object' ? it.value === val : it === val)))\n                .forEach(it => options.push({ label: it.toString(), value: it }));\n\n            item = { label: I18n.t(ConfigGeneric.DIFFERENT_LABEL), value: ConfigGeneric.DIFFERENT_VALUE };\n            options.unshift(item);\n        } else {\n            item =\n                this.state.value !== null &&\n                this.state.value !== undefined &&\n                options.find(_item =>\n                    typeof _item === 'object' ? _item.value == this.state.value : _item == this.state.value,\n                ); // let \"==\" be and not ===\n\n            if (this.state.value !== null && this.state.value !== undefined && !item && this.props.schema.freeSolo) {\n                item = { value: this.state.value, label: this.state.value };\n                options.push(item);\n            }\n        }\n\n        return (\n            <Autocomplete\n                fullWidth\n                freeSolo={!!this.props.schema.freeSolo}\n                value={item}\n                options={options}\n                isOptionEqualToValue={(option, value) => option.value === value.value}\n                filterOptions={(options: { value: string; label: string }[], params) => {\n                    const filtered = options.filter(option => {\n                        if (params.inputValue === '') {\n                            return true;\n                        }\n                        return (\n                            option.label.toLowerCase().includes(params.inputValue.toLowerCase()) ||\n                            option.value.toLowerCase().includes(params.inputValue.toLowerCase())\n                        );\n                    });\n\n                    if (this.props.schema.freeSolo && params.inputValue !== '') {\n                        filtered.push({\n                            label: params.inputValue,\n                            value: params.inputValue,\n                        });\n                    }\n\n                    return filtered;\n                }}\n                // autoComplete\n                onInputChange={e => {\n                    if (!e || !this.props.schema.freeSolo) {\n                        return;\n                    }\n\n                    const val = (e.target as HTMLInputElement).value;\n                    if (val !== this.state.value) {\n                        this.setState({ value: val }, () => this.onChange(this.props.attr, val));\n                    }\n                }}\n                onChange={(_, value) => {\n                    const val = typeof value === 'object' ? (value ? value.value : '') : value;\n                    if (val !== this.state.value) {\n                        this.setState({ value: val }, () => this.onChange(this.props.attr, val));\n                    }\n                }}\n                getOptionLabel={option => (typeof option === 'object' ? (option?.label ?? '') : '')}\n                renderInput={params => (\n                    <TextField\n                        variant=\"standard\"\n                        {...params}\n                        error={!!error}\n                        // inputProps are important and will be given in params\n                        // inputProps={{maxLength: this.props.schema.maxLength || this.props.schema.max || undefined}}\n                        placeholder={this.getText(this.props.schema.placeholder)}\n                        label={this.getText(this.props.schema.label)}\n                        helperText={this.renderHelp(\n                            this.props.schema.help,\n                            this.props.schema.helpLink,\n                            this.props.schema.noTranslation,\n                        )}\n                        disabled={disabled}\n                    />\n                )}\n            />\n        );\n    }\n}\n\nexport default ConfigAutocomplete;\n","import React, { type JSX } from 'react';\n\nimport { Autocomplete, TextField } from '@mui/material';\n\nimport { I18n } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemAutocompleteSendTo } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps } from './ConfigGeneric';\nimport type { ConfigAutocompleteState } from './ConfigAutocomplete';\n\ninterface ConfigAutocompleteSendToProps extends ConfigGenericProps {\n    schema: ConfigItemAutocompleteSendTo;\n}\n\nclass ConfigAutocompleteSendTo extends ConfigGeneric<ConfigAutocompleteSendToProps, ConfigAutocompleteState> {\n    private initialized = false;\n\n    private localContext: string | undefined;\n\n    askInstance(): void {\n        const value = ConfigGeneric.getValue(this.props.data, this.props.attr);\n        const selectOptions = this.props.schema.options\n            ? this.props.schema.options.map((item: any) =>\n                  typeof item === 'string' ? { label: item, value: item } : JSON.parse(JSON.stringify(item)),\n              )\n            : [];\n\n        if (this.props.alive) {\n            let data = this.props.schema.data;\n            if (data === undefined && this.props.schema.jsonData) {\n                const dataStr: string = this.getPattern(this.props.schema.jsonData, null, true);\n                try {\n                    if (typeof dataStr === 'string') {\n                        data = JSON.parse(dataStr);\n                    }\n                } catch {\n                    console.error(`Cannot parse json data: ${JSON.stringify(data)}`);\n                }\n            }\n\n            if (data === undefined) {\n                data = null;\n            }\n\n            void this.props.oContext.socket\n                .sendTo(\n                    `${this.props.oContext.adapterName}.${this.props.oContext.instance}`,\n                    this.props.schema.command || 'send',\n                    data,\n                )\n                .then((list: unknown) => {\n                    if (list && Array.isArray(list)) {\n                        list.forEach(item =>\n                            selectOptions.push(\n                                typeof item === 'string'\n                                    ? { label: item, value: item }\n                                    : JSON.parse(JSON.stringify(item)),\n                            ),\n                        );\n                    }\n\n                    // if __different\n                    if (Array.isArray(value)) {\n                        selectOptions.unshift({\n                            label: I18n.t(ConfigGeneric.DIFFERENT_LABEL),\n                            value: ConfigGeneric.DIFFERENT_VALUE,\n                        });\n                        this.setState({ value: ConfigGeneric.DIFFERENT_VALUE, selectOptions });\n                    } else {\n                        this.setState({ value, selectOptions });\n                    }\n                });\n        } else if (Array.isArray(value)) {\n            // if __different\n            selectOptions.unshift({\n                label: I18n.t(ConfigGeneric.DIFFERENT_LABEL),\n                value: ConfigGeneric.DIFFERENT_VALUE,\n            });\n            this.setState({ value: ConfigGeneric.DIFFERENT_VALUE, selectOptions });\n        } else {\n            this.setState({ value, selectOptions });\n        }\n    }\n\n    getContext(): string {\n        const localContext: Record<string, any> = {};\n        if (Array.isArray(this.props.schema.alsoDependsOn)) {\n            this.props.schema.alsoDependsOn.forEach(\n                attr => (localContext[attr] = ConfigGeneric.getValue(this.props.data, attr)),\n            );\n        }\n        return JSON.stringify(localContext);\n    }\n\n    renderItem(error: unknown, disabled: boolean): JSX.Element | null {\n        if (this.props.alive) {\n            const localContext = this.getContext();\n            if (localContext !== this.localContext || !this.initialized) {\n                this.localContext = localContext;\n                setTimeout(() => this.askInstance(), this.initialized ? 300 : 50);\n                this.initialized = true;\n            }\n        }\n\n        let item;\n        const options: { value: string; label: string }[] = this.state.selectOptions\n            ? JSON.parse(JSON.stringify(this.state.selectOptions))\n            : [];\n        const isIndeterminate = Array.isArray(this.state.value) || this.state.value === ConfigGeneric.DIFFERENT_LABEL;\n\n        if (isIndeterminate) {\n            [...this.state.value]\n                .filter(val => !options.find((it: any) => it.value === val))\n                .forEach(it => options.push({ label: it.toString(), value: it }));\n\n            item = { label: I18n.t(ConfigGeneric.DIFFERENT_LABEL), value: ConfigGeneric.DIFFERENT_VALUE };\n            options.unshift(item);\n        } else {\n            item =\n                this.state.value !== null &&\n                this.state.value !== undefined &&\n                options.find((item: any) => item.value == this.state.value); // let \"==\" be and not ===\n\n            if (this.state.value !== null && this.state.value !== undefined && !item && this.props.schema.freeSolo) {\n                item = { value: this.state.value, label: this.state.value };\n                options.push(item);\n            }\n            item = item || null;\n        }\n\n        if (!options.length) {\n            return (\n                <TextField\n                    variant=\"standard\"\n                    fullWidth\n                    value={this.state.value === null || this.state.value === undefined ? '' : this.state.value}\n                    error={!!error}\n                    disabled={disabled}\n                    slotProps={{\n                        htmlInput: {\n                            maxLength: this.props.schema.maxLength || this.props.schema.max || undefined,\n                        },\n                    }}\n                    onChange={e => {\n                        const value = e.target.value;\n                        this.setState({ value }, () => this.onChange(this.props.attr, (value || '').trim()));\n                    }}\n                    placeholder={this.getText(this.props.schema.placeholder)}\n                    label={this.getText(this.props.schema.label)}\n                    helperText={this.renderHelp(\n                        this.props.schema.help,\n                        this.props.schema.helpLink,\n                        this.props.schema.noTranslation,\n                    )}\n                />\n            );\n        }\n        return (\n            <Autocomplete\n                value={item}\n                fullWidth\n                freeSolo={!!this.props.schema.freeSolo}\n                options={options}\n                isOptionEqualToValue={(option, value) => option.value === value.value}\n                filterOptions={(options: { value: string; label: string }[], params) => {\n                    const filtered = options.filter(option => {\n                        if (params.inputValue === '') {\n                            return true;\n                        }\n                        return (\n                            option.label.toLowerCase().includes(params.inputValue.toLowerCase()) ||\n                            option.value.toLowerCase().includes(params.inputValue.toLowerCase())\n                        );\n                    });\n\n                    if (this.props.schema.freeSolo && params.inputValue !== '') {\n                        filtered.push({\n                            label: params.inputValue,\n                            value: params.inputValue,\n                        });\n                    }\n\n                    return filtered;\n                }}\n                getOptionLabel={(option: { value: string; label: string }): string => option?.label ?? ''}\n                onInputChange={e => {\n                    if (!e || !this.props.schema.freeSolo) {\n                        return;\n                    }\n\n                    const val = (e.target as HTMLInputElement).value;\n                    if (val !== this.state.value) {\n                        this.setState({ value: val }, () => this.onChange(this.props.attr, val));\n                    }\n                }}\n                onChange={(_, value) => {\n                    const val = typeof value === 'object' ? (value ? value.value : '') : value;\n                    if (val !== this.state.value) {\n                        this.setState({ value: val }, () => this.onChange(this.props.attr, val));\n                    }\n                }}\n                renderInput={params => (\n                    <TextField\n                        variant=\"standard\"\n                        {...params}\n                        // inputProps are important and will be given in params\n                        // inputProps={{maxLength: this.props.schema.maxLength || this.props.schema.max || undefined}}\n                        error={!!error}\n                        placeholder={this.getText(this.props.schema.placeholder)}\n                        label={this.getText(this.props.schema.label)}\n                        helperText={this.renderHelp(\n                            this.props.schema.help,\n                            this.props.schema.helpLink,\n                            this.props.schema.noTranslation,\n                        )}\n                        disabled={disabled}\n                    />\n                )}\n            />\n        );\n    }\n}\n\nexport default ConfigAutocompleteSendTo;\n","import React, { type JSX } from 'react';\n\nimport { InputLabel, FormControl, Button, TextField } from '@mui/material';\n\nimport { DialogCron, I18n } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemCRON } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\nconst styles: Record<string, React.CSSProperties> = {\n    fullWidth: {\n        width: '100%',\n    },\n    flex: {\n        display: 'flex',\n    },\n    button: {\n        height: 48,\n        marginLeft: 4,\n        minWidth: 48,\n    },\n};\n\ninterface ConfigCRONProps extends ConfigGenericProps {\n    schema: ConfigItemCRON;\n}\n\ninterface ConfigCRONState extends ConfigGenericState {\n    showDialog?: boolean;\n}\n\nclass ConfigCRON extends ConfigGeneric<ConfigCRONProps, ConfigCRONState> {\n    componentDidMount(): void {\n        super.componentDidMount();\n        const { data, attr } = this.props;\n        const value = ConfigGeneric.getValue(data, attr) || '';\n        this.setState({ value, showDialog: false });\n    }\n\n    renderItem(error: string, disabled: boolean /* , defaultValue */): JSX.Element {\n        const { schema, attr } = this.props;\n        const { value, showDialog } = this.state;\n\n        return (\n            <FormControl\n                style={styles.fullWidth}\n                variant=\"standard\"\n            >\n                {schema.label ? <InputLabel shrink>{this.getText(schema.label)}</InputLabel> : null}\n                <div style={styles.flex}>\n                    <TextField\n                        variant=\"standard\"\n                        fullWidth\n                        value={value ?? ''}\n                        error={!!error}\n                        disabled={disabled}\n                        placeholder={this.getText(schema.placeholder)}\n                        label={this.getText(schema.label)}\n                        helperText={this.renderHelp(schema.help, schema.helpLink, schema.noTranslation)}\n                        onChange={e => {\n                            const value_ = e.target.value;\n                            this.setState({ value: value_ }, () => this.onChange(attr, value_));\n                        }}\n                    />\n                    <Button\n                        color=\"grey\"\n                        disabled={disabled}\n                        style={styles.button}\n                        size=\"small\"\n                        variant=\"outlined\"\n                        onClick={() => this.setState({ showDialog: true })}\n                    >\n                        ...\n                    </Button>\n                </div>\n                {showDialog ? (\n                    <DialogCron\n                        title={I18n.t('ra_Define schedule')}\n                        simple={schema.simple}\n                        complex={schema.complex}\n                        cron={value}\n                        onClose={() => this.setState({ showDialog: false })}\n                        cancel={I18n.t('ra_Cancel')}\n                        ok={I18n.t('ra_Ok')}\n                        theme={this.props.oContext.theme}\n                        onOk={value_ =>\n                            this.setState({ showDialog: false, value: value_ }, () => this.onChange(attr, value_))\n                        }\n                    />\n                ) : null}\n            </FormControl>\n        );\n    }\n}\n\nexport default ConfigCRON;\n","import React, { type JSX } from 'react';\n\nimport { InputLabel, MenuItem, FormControl, Select, FormHelperText } from '@mui/material';\n\nimport { I18n } from '@iobroker/adapter-react-v5';\nimport type { ConfigItemCertificateSelect } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\ninterface ConfigCertificateSelectProps extends ConfigGenericProps {\n    schema: ConfigItemCertificateSelect;\n}\n\ninterface ConfigCertificateSelectState extends ConfigGenericState {\n    selectOptions?: { label: string; value: string }[];\n}\n\nclass ConfigCertificateSelect extends ConfigGeneric<ConfigCertificateSelectProps, ConfigCertificateSelectState> {\n    async componentDidMount(): Promise<void> {\n        super.componentDidMount();\n        const value = ConfigGeneric.getValue(this.props.data, this.props.attr);\n        // Important: getCertificates is only available in AdminConnection\n        const certificates = await this.props.oContext.socket.getCertificates();\n\n        const selectOptions: { label: string; value: string }[] = certificates\n            .filter(el => {\n                const name = this.props.attr.toLowerCase();\n\n                if (name.includes(el.type)) {\n                    return true;\n                }\n                if (el.type === 'public' && name.includes('cert')) {\n                    return true;\n                }\n                if (el.type === 'private' && (name.includes('priv') || name.includes('key'))) {\n                    return true;\n                }\n                return !!(el.type === 'chained' && (name.includes('chain') || name.includes('ca')));\n            })\n            .map(el => ({ label: el.name, value: el.name }));\n\n        selectOptions.unshift({ label: I18n.t(ConfigGeneric.NONE_LABEL), value: ConfigGeneric.NONE_VALUE });\n\n        this.setState({ value, selectOptions });\n    }\n\n    renderItem(error: unknown, disabled: boolean /* , defaultValue */): JSX.Element | null {\n        if (!this.state.selectOptions) {\n            return null;\n        }\n\n        const item = this.state.selectOptions?.find(_item => _item.value === this.state.value);\n\n        return (\n            <FormControl\n                style={{ width: '100%' }}\n                variant=\"standard\"\n            >\n                {this.props.schema.label ? (\n                    <InputLabel shrink>{this.getText(this.props.schema.label)}</InputLabel>\n                ) : null}\n                <Select\n                    variant=\"standard\"\n                    error={!!error}\n                    displayEmpty\n                    disabled={!!disabled}\n                    value={this.state.value}\n                    renderValue={() => this.getText(item?.label, this.props.schema.noTranslation !== false)}\n                    onChange={e =>\n                        this.setState({ value: e.target.value }, () => this.onChange(this.props.attr, this.state.value))\n                    }\n                >\n                    {this.state.selectOptions?.map(item_ => (\n                        <MenuItem\n                            key={item_.value}\n                            value={item_.value}\n                            style={item_.value === ConfigGeneric.NONE_VALUE ? { opacity: 0.5 } : {}}\n                        >\n                            {this.getText(item_.label, this.props.schema.noTranslation !== false)}\n                        </MenuItem>\n                    ))}\n                </Select>\n                {this.props.schema.help ? (\n                    <FormHelperText>\n                        {this.renderHelp(\n                            this.props.schema.help,\n                            this.props.schema.helpLink,\n                            this.props.schema.noTranslation,\n                        )}\n                    </FormHelperText>\n                ) : null}\n            </FormControl>\n        );\n    }\n}\n\nexport default ConfigCertificateSelect;\n","import React, { type JSX } from 'react';\n\nimport { InputLabel, MenuItem, FormControl, Select } from '@mui/material';\n\nimport { I18n } from '@iobroker/adapter-react-v5';\nimport type { ConfigItemCertificates } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\nconst styles: Record<string, React.CSSProperties> = {\n    fullWidth: {\n        width: '100%',\n    },\n    leWidth: {\n        width: 620,\n        marginBottom: 10,\n    },\n    certWidth: {\n        width: 200,\n        marginRight: 10,\n    },\n};\n\ninterface ConfigCertificatesProps extends ConfigGenericProps {\n    schema: ConfigItemCertificates;\n}\n\ninterface ConfigCertificatesState extends ConfigGenericState {\n    certsPublicOptions?: { label: string; value: string }[];\n    certsChainOptions?: { label: string; value: string }[];\n    certsPrivateOptions?: { label: string; value: string }[];\n    collectionsOptions?: string[];\n}\n\nclass ConfigCertificates extends ConfigGeneric<ConfigCertificatesProps, ConfigCertificatesState> {\n    async componentDidMount(): Promise<void> {\n        super.componentDidMount();\n        // Important: getCertificates is only available in AdminConnection\n        const certificates = await this.props.oContext.socket.getCertificates();\n        const certsPublicOptions: { label: string; value: string }[] = [];\n        const certsPrivateOptions: { label: string; value: string }[] = [];\n        const certsChainOptions: { label: string; value: string }[] = [];\n\n        let collectionsOptions: string[] | null = [];\n        const collectionsOptionsObj = await this.props.oContext.socket.getObject('system.certificates');\n        if (collectionsOptionsObj?.native?.collections) {\n            collectionsOptions = Object.keys(collectionsOptionsObj.native.collections);\n        } else {\n            collectionsOptions = null;\n        }\n\n        certificates.forEach(el => {\n            if (el.type === 'public') {\n                certsPublicOptions.push({ label: el.name, value: el.name });\n            } else if (el.type === 'private') {\n                certsPrivateOptions.push({ label: el.name, value: el.name });\n            } else if (el.type === 'chained') {\n                certsChainOptions.push({ label: el.name, value: el.name });\n            } else {\n                certsPublicOptions.push({ label: el.name, value: el.name });\n                certsPrivateOptions.push({ label: el.name, value: el.name });\n                certsChainOptions.push({ label: el.name, value: el.name });\n            }\n        });\n\n        certsPublicOptions.unshift({ label: I18n.t(ConfigGeneric.NONE_LABEL), value: ConfigGeneric.NONE_VALUE });\n        certsPrivateOptions.unshift({ label: I18n.t(ConfigGeneric.NONE_LABEL), value: ConfigGeneric.NONE_VALUE });\n        certsChainOptions.unshift({ label: I18n.t(ConfigGeneric.NONE_LABEL), value: ConfigGeneric.NONE_VALUE });\n\n        this.setState({\n            certsPublicOptions,\n            certsChainOptions,\n            certsPrivateOptions,\n            collectionsOptions,\n        });\n    }\n\n    renderItem(error: unknown, disabled: boolean /* , defaultValue */): JSX.Element | null {\n        if (!this.state.certsPublicOptions || !this.state.certsPrivateOptions || !this.state.certsChainOptions) {\n            return null;\n        }\n        const leCollection = (\n            ConfigGeneric.getValue(this.props.data, this.props.schema.leCollectionName || 'leCollection') || 'false'\n        ).toString();\n        const certPublic = ConfigGeneric.getValue(this.props.data, this.props.schema.certPublicName || 'certPublic');\n        const certPrivate = ConfigGeneric.getValue(this.props.data, this.props.schema.certPrivateName || 'certPrivate');\n        const certChained = ConfigGeneric.getValue(this.props.data, this.props.schema.certChainedName || 'certChained');\n\n        const itemCertPublic = this.state.certsPublicOptions?.find(item => item.value === certPublic);\n        const itemCertPrivate = this.state.certsPrivateOptions?.find(item => item.value === certPrivate);\n        const itemCertChained = this.state.certsChainOptions?.find(item => item.value === certChained);\n\n        return (\n            <div style={styles.fullWidth}>\n                {this.state.collectionsOptions ? (\n                    <FormControl\n                        style={styles.leWidth}\n                        variant=\"standard\"\n                    >\n                        <InputLabel shrink>Let&apos;s encrypt</InputLabel>\n                        <Select\n                            variant=\"standard\"\n                            error={!!error}\n                            displayEmpty\n                            disabled={!!disabled}\n                            value={leCollection}\n                            onChange={e =>\n                                this.onChange(\n                                    this.props.schema.leCollectionName || 'leCollection',\n                                    e.target.value === 'false'\n                                        ? false\n                                        : e.target.value === 'true'\n                                          ? true\n                                          : e.target.value,\n                                )\n                            }\n                        >\n                            <MenuItem\n                                key=\"_false\"\n                                value=\"false\"\n                                style={{ fontWeight: 'bold' }}\n                            >\n                                {I18n.t(\"ra_Do not use let's encrypt\")}\n                            </MenuItem>\n                            <MenuItem\n                                key=\"_true\"\n                                value=\"true\"\n                                style={{ fontWeight: 'bold' }}\n                            >\n                                {I18n.t(\"ra_Use all available let's encrypt certificates\")}\n                            </MenuItem>\n                            {this.state.collectionsOptions?.map(item => (\n                                <MenuItem\n                                    key={item}\n                                    value={item}\n                                >\n                                    {item}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                ) : null}\n                {this.state.collectionsOptions ? <br /> : null}\n                {this.state.collectionsOptions && leCollection !== 'false' ? (\n                    <div>{I18n.t('ra_Fallback custom certificates')}</div>\n                ) : null}\n                <FormControl\n                    style={styles.certWidth}\n                    variant=\"standard\"\n                >\n                    <InputLabel shrink>{I18n.t('ra_Public certificate')}</InputLabel>\n                    <Select\n                        variant=\"standard\"\n                        error={!!error}\n                        displayEmpty\n                        disabled={!!disabled}\n                        value={certPublic || ''}\n                        renderValue={() => this.getText(itemCertPublic?.label)}\n                        onChange={e => this.onChange(this.props.schema.certPublicName || 'certPublic', e.target.value)}\n                    >\n                        {this.state.certsPublicOptions?.map((item, i) => (\n                            <MenuItem\n                                key={`${item.value}_${i}`}\n                                value={item.value}\n                                style={item.value === ConfigGeneric.NONE_VALUE ? { opacity: 0.5 } : {}}\n                            >\n                                {this.getText(item.label)}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <FormControl\n                    style={styles.certWidth}\n                    variant=\"standard\"\n                >\n                    <InputLabel shrink>{I18n.t('ra_Private certificate')}</InputLabel>\n                    <Select\n                        variant=\"standard\"\n                        error={!!error}\n                        displayEmpty\n                        disabled={!!disabled}\n                        value={certPrivate || ''}\n                        renderValue={() => this.getText(itemCertPrivate?.label)}\n                        onChange={e =>\n                            this.onChange(this.props.schema.certPrivateName || 'certPrivate', e.target.value)\n                        }\n                    >\n                        {this.state.certsPrivateOptions?.map((item, i) => (\n                            <MenuItem\n                                key={`${item.value}_${i}`}\n                                value={item.value}\n                                style={item.value === ConfigGeneric.NONE_VALUE ? { opacity: 0.5 } : {}}\n                            >\n                                {this.getText(item.label)}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <FormControl\n                    style={styles.certWidth}\n                    variant=\"standard\"\n                >\n                    <InputLabel shrink>{I18n.t('ra_Chained certificate')}</InputLabel>\n                    <Select\n                        variant=\"standard\"\n                        error={!!error}\n                        displayEmpty\n                        disabled={!!disabled}\n                        value={certChained || ''}\n                        renderValue={() => this.getText(itemCertChained?.label)}\n                        onChange={e =>\n                            this.onChange(this.props.schema.certChainedName || 'certChained', e.target.value)\n                        }\n                    >\n                        {this.state.certsChainOptions?.map((item, i) => (\n                            <MenuItem\n                                key={`${item.value}_${i}`}\n                                value={item.value}\n                                style={item.value === ConfigGeneric.NONE_VALUE ? { opacity: 0.5 } : {}}\n                            >\n                                {this.getText(item.label)}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nexport default ConfigCertificates;\n","import React, { type JSX } from 'react';\n\nimport { InputLabel, MenuItem, FormControl, Select, FormHelperText } from '@mui/material';\n\nimport { I18n } from '@iobroker/adapter-react-v5';\nimport type { ConfigItemCertCollection } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\ninterface ConfigCertCollectionProps extends ConfigGenericProps {\n    schema: ConfigItemCertCollection;\n}\n\ninterface ConfigCertCollectionState extends ConfigGenericState {\n    collectionsOptions?: string[];\n}\n\ninterface CertCollection {\n    /** Source of the certificate */\n    from: string;\n    key: string;\n    cert: string;\n    chain: string[];\n    domains: string[];\n    staging?: boolean;\n    tsExpires?: number;\n}\n\nclass ConfigCertCollection extends ConfigGeneric<ConfigCertCollectionProps, ConfigCertCollectionState> {\n    async componentDidMount(): Promise<void> {\n        super.componentDidMount();\n\n        let collectionsOptions: string[];\n        const collectionsOptionsObj = await this.props.oContext.socket.getObject('system.certificates');\n        if (collectionsOptionsObj?.native?.collections) {\n            collectionsOptions = Object.keys(\n                collectionsOptionsObj.native.collections as Record<string, CertCollection>,\n            );\n        } else {\n            collectionsOptions = [];\n        }\n        this.setState({ collectionsOptions });\n    }\n\n    renderItem(error: unknown, disabled: boolean /* , defaultValue */): JSX.Element {\n        if (!this.state.collectionsOptions) {\n            return null;\n        }\n        const leCollection = (\n            ConfigGeneric.getValue(this.props.data, this.props.schema.leCollectionName || 'leCollection') || 'false'\n        ).toString();\n\n        return (\n            <FormControl\n                style={{ width: '100%' }}\n                variant=\"standard\"\n            >\n                {this.props.schema.label ? (\n                    <InputLabel shrink>{this.getText(this.props.schema.label)}</InputLabel>\n                ) : null}\n                <Select\n                    variant=\"standard\"\n                    error={!!error}\n                    displayEmpty\n                    disabled={!!disabled}\n                    value={leCollection}\n                    onChange={e =>\n                        this.onChange(\n                            this.props.schema.leCollectionName || 'leCollection',\n                            e.target.value === 'false' ? false : e.target.value === 'true' ? true : e.target.value,\n                        )\n                    }\n                >\n                    <MenuItem\n                        key=\"_false\"\n                        value=\"false\"\n                        style={{ fontWeight: 'bold' }}\n                    >\n                        {I18n.t(\"ra_Do not use let's encrypt\")}\n                    </MenuItem>\n                    <MenuItem\n                        key=\"_true\"\n                        value=\"true\"\n                        style={{ fontWeight: 'bold' }}\n                    >\n                        {I18n.t(\"ra_Use all available let's encrypt certificates\")}\n                    </MenuItem>\n                    {this.state.collectionsOptions?.map(item => (\n                        <MenuItem\n                            key={item}\n                            value={item}\n                        >\n                            {item}\n                        </MenuItem>\n                    ))}\n                </Select>\n                {this.props.schema.help ? (\n                    <FormHelperText>\n                        {this.renderHelp(\n                            this.props.schema.help,\n                            this.props.schema.helpLink,\n                            this.props.schema.noTranslation,\n                        )}\n                    </FormHelperText>\n                ) : null}\n            </FormControl>\n        );\n    }\n}\n\nexport default ConfigCertCollection;\n","import React, { type JSX } from 'react';\n\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogContent,\n    DialogActions,\n    DialogTitle,\n    Table,\n    TableHead,\n    TableCell,\n    TableRow,\n    TableBody,\n    DialogContentText,\n    TableContainer,\n    Box,\n} from '@mui/material';\n\nimport { Check as IconCheck, Send as IconSend } from '@mui/icons-material';\n\nimport { DialogConfirm, I18n, type IobTheme } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemCheckLicense } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\nconst styles: Record<string, any> = {\n    fullWidth: {\n        width: '100%',\n    },\n    icon: {\n        width: 24,\n        height: 24,\n        marginRight: 4,\n    },\n    licLabel: {\n        fontWeight: 'bold',\n        minWidth: 100,\n        marginRight: 10,\n        textTransform: 'capitalize',\n        display: 'inline-block',\n    },\n    licValue: {\n        fontWeight: 'normal',\n    },\n    errorTitle: (theme: IobTheme): React.CSSProperties => ({\n        color: theme.palette.mode === 'dark' ? '#e39191' : '#b62020',\n    }),\n    okTitle: (theme: IobTheme): React.CSSProperties => ({\n        color: theme.palette.mode === 'dark' ? '#6fd56f' : '#007c00',\n    }),\n    errorText: (theme: IobTheme): any => ({\n        color: theme.palette.mode === 'dark' ? '#e39191' : '#b62020',\n        mb: '30px',\n    }),\n};\n\nexport interface License {\n    id: string;\n    product: string;\n    time: number;\n    uuid: string;\n    validTill: string;\n    version: string;\n    usedBy: string;\n    invoice: string;\n    json: string;\n}\n\ninterface LicenseResult {\n    id: string;\n    validName: boolean;\n    validUuid: boolean;\n    validVersion: boolean;\n    validTill: boolean;\n    license: License;\n    used?: boolean;\n}\n\ninterface ConfigCheckLicenseProps extends ConfigGenericProps {\n    schema: ConfigItemCheckLicense;\n    fullWidth?: boolean;\n}\n\ninterface ConfigCheckLicenseState extends ConfigGenericState {\n    showLicenseData: null | Record<string, any>;\n    _error: string;\n    result: null | boolean;\n    running: boolean;\n    foundSuitableLicense: boolean;\n    licenseOfflineCheck: boolean;\n    showLinkToProfile: boolean;\n    allLicenses: null | LicenseResult[];\n    askForUpdate: boolean;\n}\n\nclass ConfigCheckLicense extends ConfigGeneric<ConfigCheckLicenseProps, ConfigCheckLicenseState> {\n    componentDidMount(): void {\n        super.componentDidMount();\n        this.setState({\n            _error: '',\n            running: false,\n            showLicenseData: null,\n            foundSuitableLicense: false,\n            licenseOfflineCheck: false,\n            result: null,\n            allLicenses: null,\n            askForUpdate: false,\n            showLinkToProfile: false,\n        });\n    }\n\n    renderErrorDialog(): JSX.Element | null {\n        if (this.state._error && !this.state.showLicenseData) {\n            let content: string | JSX.Element[] = this.state._error;\n            if (this.state.allLicenses) {\n                content = [<div key=\"error\">{content}</div>];\n                content.push(\n                    <Button\n                        key=\"button\"\n                        variant=\"contained\"\n                        onClick={() => window.open('https://iobroker.net/www/account/licenses', '_blank')}\n                    >\n                        {I18n.t('iobroker.net')}\n                    </Button>,\n                );\n                if (!this.state.allLicenses.length) {\n                    content.push(<div key=\"text1\">{I18n.t('ra_No one license found in license manager')}</div>);\n                    content.push(<div key=\"text2\">{I18n.t('ra_Please create license')}</div>);\n                } else {\n                    // license.id,\n                    // validName,\n                    // validUuid,\n                    // validTill,\n                    // validVersion,\n                    // license,\n                    content.push(\n                        <TableContainer key=\"table\">\n                            <Table size=\"small\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>{I18n.t('ra_Product')}</TableCell>\n                                        <TableCell>{I18n.t('ra_Version')}</TableCell>\n                                        <TableCell>UUID</TableCell>\n                                        <TableCell>{I18n.t('ra_ValidTill')}</TableCell>\n                                        <TableCell>{I18n.t('ra_Commercial')}</TableCell>\n                                        <TableCell>ID</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.allLicenses.map(license => (\n                                        <TableRow key={license.id}>\n                                            <TableCell sx={license.validName ? null : styles.errorText}>\n                                                {license.license.product}\n                                            </TableCell>\n                                            <TableCell sx={license.validVersion ? null : styles.errorText}>\n                                                {license.license.version}\n                                            </TableCell>\n                                            <TableCell sx={license.validUuid ? null : styles.errorText}>\n                                                {license.license.uuid || '--'}\n                                            </TableCell>\n                                            <TableCell sx={license.validTill ? null : styles.errorText}>\n                                                {license.license.validTill &&\n                                                license.license.validTill !== '0000-00-00 00:00:00'\n                                                    ? new Date(license.license.validTill).toLocaleDateString()\n                                                    : '--'}\n                                            </TableCell>\n                                            <TableCell>\n                                                {license.license.invoice !== 'free'\n                                                    ? license.license.invoice === 'MANUALLY_CREATED'\n                                                        ? '✓'\n                                                        : license.license.invoice\n                                                    : '-'}\n                                            </TableCell>\n                                            <TableCell>{license.id}</TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>,\n                    );\n                }\n            }\n\n            return (\n                <Dialog\n                    open={!0}\n                    maxWidth=\"xl\"\n                    fullWidth={this.props.fullWidth !== undefined ? this.props.fullWidth : true}\n                    onClick={() => this.setState({ _error: '', allLicenses: null })}\n                >\n                    <DialogTitle>{I18n.t('ra_Error')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{content}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button\n                            variant=\"contained\"\n                            onClick={() => this.setState({ _error: '', allLicenses: null })}\n                            color=\"primary\"\n                            autoFocus\n                            startIcon={<IconCheck />}\n                        >\n                            {I18n.t('ra_Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }\n\n        return null;\n    }\n\n    renderMessageDialog(): JSX.Element | null {\n        if (this.state.showLicenseData) {\n            const pre = [];\n            const data = this.state.showLicenseData;\n            Object.keys(data).forEach(key => {\n                if (data[key] === null || data[key] === undefined) {\n                    return;\n                }\n                if (typeof data[key] === 'object') {\n                    const obj = data[key];\n                    Object.keys(obj).forEach(key1 => {\n                        if (obj[key1] !== null && obj[key1] !== undefined) {\n                            if (typeof obj[key1] === 'object') {\n                                pre.push(\n                                    <div key={key1}>\n                                        <div style={styles.licLabel}>{key1}:</div>\n                                        {JSON.stringify(obj[key1], null, 2)}\n                                    </div>,\n                                );\n                            } else {\n                                pre.push(\n                                    <div key={key1}>\n                                        <div style={styles.licLabel}>\n                                            {key} -{key1}:\n                                        </div>\n                                        {obj[key1].toString()}\n                                    </div>,\n                                );\n                            }\n                        }\n                    });\n                } else {\n                    pre.push(\n                        <div key={key}>\n                            <div style={styles.licLabel}>{key.replace(/_/g, ' ')}:</div>\n                            {data[key].toString()}\n                        </div>,\n                    );\n                }\n            });\n            pre.push(\n                <div key=\"checked\">\n                    <div style={styles.licLabel}>{I18n.t('ra_Checked')}:</div>\n                    {this.state.licenseOfflineCheck ? I18n.t('ra_locally') : I18n.t('ra_via internet')}\n                </div>,\n            );\n\n            return (\n                <Dialog\n                    open={!0}\n                    onClose={() => this.setState({ showLicenseData: null })}\n                >\n                    <DialogTitle>\n                        <Box\n                            component=\"span\"\n                            sx={this.state.result ? styles.okTitle : styles.errorTitle}\n                        >\n                            {I18n.t('ra_License %s', this.state.result ? 'OK' : 'INVALID')}\n                        </Box>\n                    </DialogTitle>\n                    <DialogContent>\n                        {this.state.showLinkToProfile ? (\n                            <Button\n                                variant=\"contained\"\n                                onClick={() => window.open('https://iobroker.net/www/account/licenses', '_blank')}\n                            >\n                                https://iobroker.net\n                            </Button>\n                        ) : null}\n                        {this.state._error ? (\n                            <Box\n                                component=\"div\"\n                                sx={styles.errorText}\n                            >\n                                {this.state._error}\n                            </Box>\n                        ) : null}\n                        {pre}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button\n                            onClick={() => this.setState({ showLicenseData: null, _error: '' })}\n                            color=\"primary\"\n                            variant=\"contained\"\n                        >\n                            {I18n.t('ra_Close')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }\n        return null;\n    }\n\n    static parseJwt(token: string): {\n        exp: number;\n        iat: number;\n        name: string;\n        email: string;\n        uuid: string;\n        version: string;\n        invoice: string;\n        /** @deprecated use validTill */\n        valid_till: string;\n        validTill: string;\n        [key: string]: string | number;\n    } | null {\n        const base64Url = token.split('.')[1];\n        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        const jsonPayload = decodeURIComponent(\n            atob(base64)\n                .split('')\n                .map(c => `%${`00${c.charCodeAt(0).toString(16)}`.slice(-2)}`)\n                .join(''),\n        );\n        try {\n            return JSON.parse(jsonPayload);\n        } catch {\n            return null;\n        }\n    }\n\n    static isVersionValid(version: string, rule: string, invoice: string, adapterName: string): boolean {\n        if (!rule || !version) {\n            return true;\n        }\n        let result = true;\n        const [major] = version.split('.');\n        if (rule.startsWith('>=')) {\n            result = parseInt(major, 10) >= parseInt(rule.substring(2, 10));\n        } else if (rule.startsWith('<=')) {\n            result = parseInt(major, 10) <= parseInt(rule.substring(2, 10));\n        } else if (rule.startsWith('>')) {\n            result = parseInt(major, 10) > parseInt(rule.substring(1, 10));\n        } else if (rule.startsWith('<')) {\n            result = parseInt(major, 10) < parseInt(rule.substring(1, 10));\n        } else if (rule.startsWith('=')) {\n            result = parseInt(major, 10) === parseInt(rule.substring(1, 10));\n        } else if (rule.startsWith('==')) {\n            result = parseInt(major, 10) === parseInt(rule.substring(2, 10));\n        } else if (rule.startsWith('===')) {\n            result = parseInt(major, 10) === parseInt(rule.substring(3, 10));\n        }\n\n        if (!result && invoice && adapterName) {\n            // all commercial licenses are valid for all versions\n            if (invoice !== 'free') {\n                return true;\n            }\n        }\n\n        return true;\n    }\n\n    async findInLicenseManager(adapterName: string): Promise<LicenseResult[]> {\n        // read if the license manager is supported\n        const licenses = await this.props.oContext.socket.getObject('system.licenses');\n        const errors: LicenseResult[] = [];\n        if (licenses?.native?.licenses?.length) {\n            // enable license manager\n            let useLicense: License | null = null;\n            const now = Date.now();\n\n            let uuid: string;\n            if (this.props.schema.uuid) {\n                const uuidObj = await this.props.oContext.socket.getObject('system.meta.uuid');\n                uuid = uuidObj?.native?.uuid;\n            }\n            let version: string;\n            if (this.props.schema.version) {\n                const aObj = await this.props.oContext.socket.getObject(`system.adapter.${adapterName}`);\n                version = aObj?.common?.version;\n            }\n\n            // find license for vis\n            licenses.native.licenses.forEach((license: License) => {\n                const validTill =\n                    !license.validTill ||\n                    license.validTill === '0000-00-00 00:00:00' ||\n                    new Date(license.validTill).getTime() > now;\n                const parts = (license.product || '').split('.');\n                const validName = parts[1] === adapterName || (adapterName === 'vis-2' && parts[1] === 'vis');\n                const validUuid = !uuid || !license.uuid || license.uuid === uuid;\n                const validVersion = ConfigCheckLicense.isVersionValid(\n                    version,\n                    license.version,\n                    license.invoice,\n                    adapterName,\n                );\n                // commercial license has priority over free license\n                if (\n                    (!useLicense || license.invoice !== 'free') &&\n                    validTill &&\n                    validName &&\n                    validUuid &&\n                    validVersion\n                ) {\n                    useLicense = license;\n                }\n                errors.push({\n                    id: license.id,\n                    validName,\n                    validUuid,\n                    validVersion,\n                    validTill,\n                    license,\n                });\n            });\n\n            if (useLicense) {\n                errors.find(e => e.id === useLicense.id).used = true;\n            }\n        }\n\n        return errors;\n    }\n\n    async checkLicense(license: string, adapterName: string): Promise<void> {\n        let uuid;\n        if (this.props.schema.uuid) {\n            const uuidObj = await this.props.oContext.socket.getObject('system.meta.uuid');\n            uuid = uuidObj?.native?.uuid;\n        }\n        let version;\n        if (this.props.schema.version) {\n            const aObj = await this.props.oContext.socket.getObject(`system.adapter.${adapterName}`);\n            version = aObj?.common?.version;\n        }\n\n        const controller = new AbortController();\n        let timeout = setTimeout(() => {\n            timeout = null;\n            controller.abort();\n        }, 5000);\n\n        try {\n            const response = await window.fetch('https://iobroker.net/api/v1/public/cert/', {\n                method: 'POST',\n                body: JSON.stringify({ json: license, uuid }),\n                headers: {\n                    'Content-Type': 'text/plain',\n                },\n                signal: controller.signal,\n            });\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n            const dataStr = await response.text();\n            let data: {\n                error?: string;\n                validTill?: string;\n                /** @deprecated use validTill */\n                valid_till?: string;\n                name?: string;\n                version?: string;\n                uuid?: string;\n                invoice?: string;\n            };\n            try {\n                data = JSON.parse(dataStr);\n            } catch {\n                // ignore\n            }\n\n            if (data?.error) {\n                try {\n                    const data_ = ConfigCheckLicense.parseJwt(license);\n                    const _error = I18n.t(`ra_${data_.error || data.error || 'Unknown error'}`).replace(/^ra_/, '');\n\n                    return this.setState({\n                        _error,\n                        licenseOfflineCheck: false,\n                        showLicenseData: data_,\n                        result: false,\n                        running: false,\n                    });\n                } catch {\n                    console.log('Cannot parse license');\n                    return this.setState({ _error: data.error, result: false, running: false });\n                }\n            } else {\n                let showLicenseData = null;\n                try {\n                    showLicenseData = ConfigCheckLicense.parseJwt(license);\n                } catch {\n                    // ignore\n                }\n                if (data) {\n                    const validTill = data.validTill || data.valid_till;\n                    if (\n                        validTill &&\n                        validTill !== '0000-00-00 00:00:00' &&\n                        new Date(validTill).getTime() < Date.now()\n                    ) {\n                        return this.setState({\n                            _error: I18n.t('ra_License expired on %s', new Date(validTill).toLocaleString()),\n                            licenseOfflineCheck: false,\n                            showLicenseData,\n                            result: false,\n                            running: false,\n                        });\n                    }\n                    const parts = (data.name || '').split('.');\n                    if (parts[1] === adapterName || (parts[1] === 'vis' && adapterName === 'vis-2')) {\n                        // check UUID\n                        if (uuid && !data.uuid && adapterName === 'vis-2') {\n                            return this.setState({\n                                _error: I18n.t('ra_License must be converted', data.uuid),\n                                showLinkToProfile: true,\n                                licenseOfflineCheck: false,\n                                showLicenseData,\n                                result: false,\n                                running: false,\n                            });\n                        }\n\n                        if (uuid && data.uuid && data.uuid !== uuid) {\n                            return this.setState({\n                                _error: I18n.t(\n                                    'ra_Serial number (UUID) \"%s\" in license is for other device.',\n                                    data.uuid,\n                                ),\n                                licenseOfflineCheck: false,\n                                showLicenseData,\n                                result: false,\n                                running: false,\n                            });\n                        }\n\n                        if (!ConfigCheckLicense.isVersionValid(version, data.version, data.invoice, adapterName)) {\n                            return this.setState({\n                                _error: I18n.t(\n                                    'ra_License is for version %s, but required version is %s',\n                                    data.version,\n                                    this.props.schema.version,\n                                ),\n                                licenseOfflineCheck: false,\n                                showLicenseData,\n                                result: false,\n                                running: false,\n                            });\n                        }\n\n                        return this.setState({\n                            licenseOfflineCheck: false,\n                            showLicenseData,\n                            result: true,\n                            running: false,\n                        });\n                    }\n                    return this.setState({\n                        _error: I18n.t('ra_License for other product \"%s\"', data.name),\n                        licenseOfflineCheck: false,\n                        showLicenseData,\n                        result: false,\n                        running: false,\n                    });\n                }\n                throw new Error('ra_Invalid answer from server');\n            }\n        } catch (error) {\n            if (error?.response?.status === 404) {\n                return this.setState({ _error: I18n.t('ra_License does not exist'), result: false, running: false });\n            }\n            // check offline\n            try {\n                const data = ConfigCheckLicense.parseJwt(license);\n                const parts = (data.name || '').split('.');\n\n                if (\n                    data.valid_till &&\n                    data.valid_till !== '0000-00-00 00:00:00' &&\n                    new Date(data.valid_till).getTime() < Date.now()\n                ) {\n                    return this.setState({\n                        _error: I18n.t('ra_License expired on %s', new Date(data.valid_till).toLocaleString()),\n                        showLicenseData: data,\n                        licenseOfflineCheck: true,\n                        running: false,\n                        result: false,\n                    });\n                }\n                if (parts[1] === adapterName) {\n                    // check UUID\n                    if (uuid && data.uuid && data.uuid !== uuid) {\n                        return this.setState({\n                            _error: I18n.t('ra_Serial number (UUID) \"%s\" in license is for other device.', data.uuid),\n                            showLicenseData: data,\n                            licenseOfflineCheck: true,\n                            result: false,\n                            running: false,\n                        });\n                    }\n\n                    if (!ConfigCheckLicense.isVersionValid(version, data.version, data.invoice, adapterName)) {\n                        return this.setState({\n                            _error: I18n.t(\n                                'ra_License is for version %s, but required version is %s',\n                                data.version,\n                                this.props.schema.version,\n                            ),\n                            licenseOfflineCheck: true,\n                            showLicenseData: data,\n                            result: false,\n                            running: false,\n                        });\n                    }\n\n                    return this.setState({\n                        running: false,\n                        result: true,\n                        licenseOfflineCheck: true,\n                        showLicenseData: data,\n                    });\n                }\n                return this.setState({\n                    _error: I18n.t('ra_License for other product \"%s\"', data.name),\n                    licenseOfflineCheck: true,\n                    showLicenseData: data,\n                    result: false,\n                    running: false,\n                });\n            } catch {\n                return this.setState({\n                    _error: I18n.t('ra_Cannot decode license'),\n                    result: false,\n                    licenseOfflineCheck: true,\n                    running: false,\n                });\n            }\n        }\n    }\n\n    renderAskForUpdate(): JSX.Element | null {\n        if (!this.state.askForUpdate) {\n            return null;\n        }\n        return (\n            <DialogConfirm\n                text={I18n.t(\n                    'ra_License not found in license manager. Do you want to read licenses from iobroker.net?',\n                )}\n                ok={I18n.t('ra_Yes')}\n                onClose={async isYes => {\n                    if (isYes) {\n                        this.setState({ askForUpdate: false });\n                        try {\n                            // updateLicense is available only in AdminConnection\n                            await this.props.oContext.socket.updateLicenses(null, null);\n                        } catch (e) {\n                            window.alert(I18n.t('ra_Cannot read licenses: %s', e));\n                            return;\n                        }\n                        await this._onClick(true);\n                    } else {\n                        this.setState({ askForUpdate: false, running: false });\n                    }\n                }}\n            />\n        );\n    }\n\n    async _onClick(secondRun?: boolean): Promise<void> {\n        const adapterName = this.props.oContext.adapterName === 'vis-2' ? 'vis' : this.props.oContext.adapterName;\n        this.setState({ running: true });\n        let license;\n        let licenses;\n        if (this.props.data.useLicenseManager) {\n            licenses = await this.findInLicenseManager(adapterName);\n            license = licenses.find(li => li.used);\n            if (license) {\n                license = license.license.json;\n            }\n            if (!license && !secondRun) {\n                // no suitable license found in the license manager\n                // should we read all licenses again?\n                this.setState({ askForUpdate: true });\n                return;\n            }\n        } else {\n            license = this.props.data.license;\n        }\n        if (license) {\n            await this.checkLicense(license, adapterName);\n        } else if (this.props.data.useLicenseManager) {\n            this.setState({\n                _error: I18n.t('ra_Suitable license not found in license manager'),\n                result: false,\n                running: false,\n                allLicenses: licenses,\n            });\n        } else {\n            // this case could not happen\n            this.setState({\n                _error: I18n.t('ra_Please enter the license'),\n                result: false,\n                running: false,\n            });\n        }\n    }\n\n    renderItem(/* error, disabled, defaultValue */): JSX.Element {\n        return (\n            <div style={styles.fullWidth}>\n                <Button\n                    variant={this.props.schema.variant || 'outlined'}\n                    color={this.props.schema.color || 'primary'}\n                    style={styles.fullWidth}\n                    disabled={(!this.props.data.license && !this.props.data.useLicenseManager) || this.state.running}\n                    startIcon={<IconSend />}\n                    onClick={() => this._onClick()}\n                >\n                    {this.state.running ? (\n                        <CircularProgress\n                            size={20}\n                            style={{ marginRight: 8 }}\n                        />\n                    ) : null}\n                    {this.getText(this.props.schema.label || 'ra_Check license', this.props.schema.noTranslation)}\n                </Button>\n                {this.renderMessageDialog()}\n                {this.renderErrorDialog()}\n                {this.renderAskForUpdate()}\n            </div>\n        );\n    }\n}\n\nexport default ConfigCheckLicense;\n","import React, { type JSX } from 'react';\n\nimport { FormControlLabel, Checkbox, FormHelperText, FormControl } from '@mui/material';\n\nimport { I18n } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemCheckbox } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\ninterface ConfigCheckboxProps extends ConfigGenericProps {\n    schema: ConfigItemCheckbox;\n}\n\nclass ConfigCheckbox extends ConfigGeneric<ConfigCheckboxProps, ConfigGenericState> {\n    renderItem(error: unknown, disabled: boolean): JSX.Element {\n        const value = ConfigGeneric.getValue(this.props.data, this.props.attr);\n        const isIndeterminate = Array.isArray(value);\n\n        return (\n            <FormControl\n                style={{ width: '100%' }}\n                variant=\"standard\"\n            >\n                <FormControlLabel\n                    onClick={e => {\n                        e.preventDefault();\n                        e.stopPropagation();\n\n                        if (!disabled) {\n                            const mayByPromise = this.onChange(this.props.attr, !value);\n                            if (mayByPromise instanceof Promise) {\n                                void mayByPromise.catch(e => console.error(`Cannot set value: ${e}`));\n                            }\n                        }\n                    }}\n                    control={\n                        <Checkbox\n                            indeterminate={isIndeterminate}\n                            checked={!!value}\n                            onChange={e => {\n                                let mayBePromise: void | Promise<void>;\n                                if (isIndeterminate) {\n                                    mayBePromise = this.onChange(this.props.attr, true);\n                                } else {\n                                    mayBePromise = this.onChange(this.props.attr, e.target.checked);\n                                }\n                                if (mayBePromise instanceof Promise) {\n                                    void mayBePromise.catch(e => console.error(`Cannot set value: ${e}`));\n                                }\n                            }}\n                            disabled={disabled || this.props.schema.readOnly}\n                        />\n                    }\n                    label={this.getText(this.props.schema.label)}\n                />\n                <FormHelperText style={{ color: 'red' }}>\n                    {error\n                        ? this.props.schema.validatorErrorText\n                            ? I18n.t(this.props.schema.validatorErrorText)\n                            : I18n.t('ra_Error')\n                        : null}\n                </FormHelperText>\n                {this.props.schema.help ? (\n                    <FormHelperText>\n                        {this.renderHelp(\n                            this.props.schema.help,\n                            this.props.schema.helpLink,\n                            this.props.schema.noTranslation,\n                        )}\n                    </FormHelperText>\n                ) : null}\n            </FormControl>\n        );\n    }\n}\n\nexport default ConfigCheckbox;\n","/**\n * Notice: Some code was adapted from Material-UI's text field.\n *         Copyright (c) 2014 Call-Em-All (https://github.com/callemall/material-ui)\n */\nimport React, { type RefObject, type JSX } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Input, OutlinedInput, InputLabel, Chip, FormControl, FormHelperText, Box } from '@mui/material';\nimport FilledInput from '@mui/material/FilledInput/FilledInput';\nimport blue from '@mui/material/colors/blue';\n\nimport { type IobTheme, type ThemeType, Utils } from '@iobroker/adapter-react-v5';\n\nconst variantComponent = {\n    standard: Input,\n    filled: FilledInput,\n    outlined: OutlinedInput,\n};\n\nconst styles: Record<string, any> = (theme: IobTheme): Record<string, any> => {\n    const light = theme.palette.mode === 'light';\n    const bottomLineColor = light ? 'rgba(0, 0, 0, 0.42)' : 'rgba(255, 255, 255, 0.7)';\n\n    return {\n        root: {},\n        inputRoot: {\n            display: 'inline-flex',\n            flexWrap: 'wrap',\n            flex: 1,\n            marginTop: 0,\n            minWidth: 70,\n            '&.mui-variant-outlined,&.mui-variant-filled': {\n                boxSizing: 'border-box',\n            },\n            '&.mui-variant-outlined': {\n                paddingTop: '14px',\n            },\n            '&.mui-variant-filled': {\n                paddingTop: '28px',\n            },\n        },\n        input: {\n            display: 'inline-block',\n            textOverflow: 'ellipsis',\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            appearance: 'none', // Remove border in Safari, doesn't seem to break anything in other browsers\n            WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated style).\n            float: 'left',\n            flex: 1,\n        },\n        chipContainer: {\n            display: 'flex',\n            flexFlow: 'row wrap',\n            alignItems: 'center',\n            cursor: 'text',\n            marginBottom: '-2px',\n            minHeight: 40,\n        },\n        outlined: {\n            '& input': {\n                height: 16,\n                paddingTop: '4px',\n                paddingBottom: '12px',\n                marginTop: '4px',\n                marginBottom: '4px',\n            },\n        },\n        standard: {\n            marginTop: '18px',\n        },\n        filled: {\n            '& input': {\n                height: 22,\n                marginBottom: '4px',\n                marginTop: '4px',\n                paddingTop: 0,\n            },\n            '$marginDense & input': {\n                height: 26,\n            },\n        },\n        labeled: {},\n        label: {\n            top: 4,\n            '&$outlined&:not($labelShrink)': {\n                top: 2,\n                '$marginDense &': {\n                    top: 5,\n                },\n            },\n            '&$filled&:not($labelShrink)': {\n                top: 15,\n                '$marginDense &': {\n                    top: 20,\n                },\n            },\n        },\n        labelShrink: {\n            top: 0,\n        },\n        helperText: {\n            marginBottom: -20,\n        },\n        focused: {},\n        disabled: {},\n        underline: {\n            '&:after': {\n                borderBottom: `2px solid ${theme.palette.primary[light ? 'dark' : 'light']}`,\n                left: 0,\n                bottom: 0,\n                // Doing the other way around a crash on IE 11 \"''\" https://github.com/cssinjs/jss/issues/242\n                content: '\"\"',\n                position: 'absolute',\n                right: 0,\n                transform: 'scaleX(0)',\n                transition: theme.transitions.create('transform', {\n                    duration: theme.transitions.duration.shorter,\n                    easing: theme.transitions.easing.easeOut,\n                }),\n                pointerEvents: 'none', // Transparent to the hover style.\n            },\n            '&$focused:after': {\n                transform: 'scaleX(1)',\n            },\n            '&$error:after': {\n                borderBottomColor: theme.palette.error.main,\n                transform: 'scaleX(1)', // error is always underlined in red\n            },\n            '&:before': {\n                borderBottom: `1px solid ${bottomLineColor}`,\n                left: 0,\n                bottom: 0,\n                // Doing the other way around a crash on IE 11 \"''\" https://github.com/cssinjs/jss/issues/242\n                content: '\"\\\\00a0\"',\n                position: 'absolute',\n                right: 0,\n                transition: theme.transitions.create('border-bottom-color', {\n                    duration: theme.transitions.duration.shorter,\n                }),\n                pointerEvents: 'none', // Transparent to the hover style.\n            },\n            '&:hover:not($disabled):not($focused):not($error):before': {\n                borderBottom: `2px solid ${theme.palette.text.primary}`,\n                // Reset on touch devices, it doesn't add specificity\n                '@media (hover: none)': {\n                    borderBottom: `1px solid ${bottomLineColor}`,\n                },\n            },\n            '&$disabled:before': {\n                borderBottomStyle: 'dotted',\n            },\n        },\n        error: {\n            '&:after': {\n                backgroundColor: theme.palette.error.main,\n                transform: 'scaleX(1)', // error is always underlined in red\n            },\n        },\n        chip: {\n            margin: '0 8px 8px 0',\n            float: 'left',\n        },\n        marginDense: {},\n    };\n};\n\nconst keyCodes = {\n    BACKSPACE: 8,\n    DELETE: 46,\n    LEFT_ARROW: 37,\n    RIGHT_ARROW: 39,\n};\n\ninterface ChipRendererProps {\n    value: string;\n    isFocused: boolean;\n    isDisabled: boolean;\n    isReadOnly: boolean;\n    handleClick: () => void;\n    handleDelete: () => void;\n    style: React.CSSProperties;\n}\n\nexport const defaultChipRenderer = (\n    { value, isFocused, isDisabled, isReadOnly, handleClick, handleDelete, style }: ChipRendererProps,\n    key: string,\n): JSX.Element => (\n    <Chip\n        key={key}\n        style={{\n            ...style,\n            pointerEvents: isDisabled || isReadOnly ? 'none' : undefined,\n            backgroundColor: isFocused ? blue[300] : undefined,\n        }}\n        onClick={handleClick}\n        onDelete={handleDelete}\n        label={value}\n    />\n);\n\ninterface ChipInputProps {\n    /** Allows duplicate chips if set to true. */\n    allowDuplicates?: boolean;\n    /** If true, the placeholder will always be visible. */\n    alwaysShowPlaceholder?: boolean;\n    /** Behavior when the chip input is blurred: `'clear'` clears the input, `'add'` creates a chip and `'ignore'` keeps the input. */\n    blurBehavior?: 'clear' | 'add' | 'add-or-clear' | 'ignore';\n    /** A function of the type `({ value, text, chip, isFocused, isDisabled, isReadOnly, handleClick, handleDelete, className }, key) => node` that returns a chip based on the given properties. This can be used to customize chip styles.  Each item in the `dataSource` array will be passed to `chipRenderer` as arguments `chip`, `value` and `text`. If `dataSource` is an array of objects and `dataSourceConfig` is present, then `value` and `text` will instead correspond to the object values defined in `dataSourceConfig`. If `dataSourceConfig` is not set and `dataSource` is an array of objects, then a custom `chipRenderer` must be set. `chip` is always the raw value from `dataSource`, either an object or a string. */\n    chipRenderer?: (props: ChipRendererProps) => JSX.Element;\n    /** Whether the input value should be cleared if the `value` prop is changed. */\n    clearInputValueOnChange?: boolean;\n    /** Data source for auto complete. This should be an array of strings or objects. */\n    dataSource?: string[];\n    /** The chips to display by default (for uncontrolled mode). */\n    defaultValue?: string[];\n    /** Whether to use `setTimeout` to delay adding chips in case other input events like `onSelection` need to fire first */\n    delayBeforeAdd?: boolean;\n    /** Disables the chip input if set to true. */\n    disabled?: boolean;\n    /** Disable the input underline. Only valid for 'standard' variant */\n    disableUnderline?: boolean;\n    /** Props to pass through to the `FormHelperText` component. */\n    FormHelperTextProps?: Record<string, any>;\n    /** If true, the chip input will fill the available width. */\n    fullWidth?: boolean;\n    /** If true, the input field will always be below the chips and fill the available space. By default, it will try to be beside the chips. */\n    fullWidthInput?: boolean;\n    /** Helper text that is displayed below the input. */\n    helperText?: string | JSX.Element;\n    /** Props to pass through to the `InputLabel`. */\n    InputLabelProps?: Record<string, any>;\n    /** Props to pass through to the `Input`. */\n    InputProps?: Record<string, any>;\n    /** Use this property to pass a ref callback to the native input component. */\n    inputRef?: (el: HTMLInputElement) => void;\n    /** The input value (enables controlled mode for the text input if set). */\n    inputValue?: string;\n    /* The content of the floating label. */\n    label?: string | JSX.Element;\n    /** The key codes (`KeyboardEvent.keyCode`) used to determine when to create a new chip. */\n    newChipKeyCodes?: number[];\n    /** The keys (`KeyboardEvent.key`) used to determine when to create a new chip. */\n    newChipKeys?: string[];\n    /** Callback function that is called when a new chip was added (in controlled mode). */\n    onAdd?: (chip: string) => void;\n    /** Callback function that is called with the chip to be added and should return true to add the chip or false to prevent the chip from being added without clearing the text input. */\n    onBeforeAdd?: (chip: string) => boolean;\n    onBlur?: (event: React.FocusEvent<HTMLInputElement>) => void;\n    onFocus?: (event: React.FocusEvent<HTMLInputElement>) => void;\n    onKeyDown?: (event: React.KeyboardEvent<HTMLInputElement>) => void;\n    onKeyUp?: (event: React.KeyboardEvent<HTMLInputElement>) => void;\n    // onKeyPress?: (event: React.KeyboardEvent<HTMLInputElement>) => void;\n    /** Callback function that is called when the chips change (in uncontrolled mode). */\n    onChange?: (chips: string[]) => void;\n    /** Callback function that is called when a new chip was removed (in controlled mode). */\n    onDelete: (chip: string, i: number) => void;\n    /** Callback function that is called when the input changes. */\n    onUpdateInput?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n    /** A placeholder that is displayed if the input has no values. */\n    placeholder?: string;\n    /** Makes the chip input read-only if set to true. */\n    readOnly?: boolean;\n    /** The chips to display (enables controlled mode if set). */\n    value?: string[];\n    /** The variant of the Input component */\n    variant?: 'outlined' | 'standard' | 'filled';\n    className?: string;\n    error?: boolean;\n    id?: string;\n    required?: boolean;\n    rootRef?: RefObject<HTMLDivElement>;\n    margin?: 'dense' | 'normal' | 'none';\n    theme: IobTheme;\n}\n\ninterface ChipInputState {\n    chips: string[];\n    focusedChip: number | null;\n    inputValue: string;\n    isFocused: boolean;\n    chipsUpdated: boolean;\n    prevPropsValue: string[];\n    variant: 'outlined' | 'standard' | 'filled';\n}\n\nclass ChipInput extends React.Component<ChipInputProps, ChipInputState> {\n    private readonly labelRef: React.RefObject<HTMLLabelElement>;\n\n    private labelNode: HTMLLabelElement | null = null;\n\n    private readonly input: React.RefObject<HTMLInputElement>;\n\n    private readonly newChipKeyCodes: number[];\n\n    private readonly newChipKeys: string[];\n\n    private actualInput: HTMLInputElement | null = null;\n\n    private inputBlurTimeout: ReturnType<typeof setTimeout> | null = null;\n\n    private _keyPressed: boolean;\n\n    private _preventChipCreation: boolean;\n\n    private styles: Record<string, any> = {};\n\n    private styleTheme: ThemeType | null = null;\n\n    constructor(props: ChipInputProps) {\n        super(props);\n        this.state = {\n            chips: props.defaultValue || [],\n            focusedChip: null,\n            inputValue: '',\n            isFocused: false,\n            chipsUpdated: false,\n            prevPropsValue: [],\n            variant: this.props.variant || 'standard',\n        };\n        this.newChipKeyCodes = props.newChipKeyCodes || [13];\n        this.newChipKeys = props.newChipKeys || ['Enter'];\n\n        this.labelRef = React.createRef();\n        this.input = React.createRef();\n    }\n\n    componentDidMount(): void {\n        if (this.state.variant === 'outlined') {\n            // eslint-disable-next-line react/no-find-dom-node\n            this.labelNode = ReactDOM.findDOMNode(this.labelRef.current) as HTMLLabelElement;\n            this.forceUpdate();\n        }\n    }\n\n    componentWillUnmount(): void {\n        if (this.inputBlurTimeout) {\n            clearTimeout(this.inputBlurTimeout);\n        }\n    }\n\n    static getDerivedStateFromProps(props: ChipInputProps, state: ChipInputState): Partial<ChipInputState> | null {\n        let newState: Partial<ChipInputState> | null = null;\n\n        if (props.value && props.value.length !== state.prevPropsValue.length) {\n            newState = { prevPropsValue: props.value };\n            if (props.clearInputValueOnChange) {\n                newState.inputValue = '';\n            }\n        }\n\n        // if change detection is only necessary for clearInputValueOnChange\n        if (props.clearInputValueOnChange && props.value && props.value.length !== state.prevPropsValue.length) {\n            newState = { prevPropsValue: props.value, inputValue: '' };\n        }\n\n        if (props.disabled) {\n            newState = { ...newState, focusedChip: null };\n        }\n\n        if (!state.chipsUpdated && props.defaultValue) {\n            newState = { ...newState, chips: props.defaultValue };\n        }\n\n        return newState;\n    }\n\n    /**\n     * Blurs this component.\n     */\n    // blur() {\n    //     if (this.input) {\n    //         this.actualInput.blur();\n    //     }\n    // }\n\n    /**\n     * Focuses this component.\n     */\n    focus = (): void => {\n        this.actualInput?.focus();\n        if (this.state.focusedChip) {\n            this.setState({ focusedChip: null });\n        }\n    };\n\n    handleInputBlur = (event: React.FocusEvent<HTMLInputElement>): void => {\n        if (this.props.onBlur) {\n            this.props.onBlur(event);\n        }\n        this.setState({ isFocused: false });\n        if (this.state.focusedChip) {\n            this.setState({ focusedChip: null });\n        }\n        const value = event.target.value;\n        let addChipOptions: { clearInputOnFail: boolean };\n        switch (this.props.blurBehavior || 'clear') {\n            case 'add-or-clear':\n                addChipOptions = { clearInputOnFail: true };\n            // falls through\n            case 'add':\n                if (this.props.delayBeforeAdd) {\n                    // Let's assume that we only want to add the existing content as chip, when\n                    // another event has not added a chip within 200ms.\n                    // e.g., onSelection Callback in Autocomplete case\n                    const numChipsBefore = (this.props.value || this.state.chips).length;\n                    this.inputBlurTimeout = setTimeout(() => {\n                        const numChipsAfter = (this.props.value || this.state.chips).length;\n                        if (numChipsBefore === numChipsAfter) {\n                            this.handleAddChip(value, addChipOptions);\n                        } else {\n                            this.clearInput();\n                        }\n                    }, 150);\n                } else {\n                    this.handleAddChip(value, addChipOptions);\n                }\n                break;\n\n            case 'clear':\n                this.clearInput();\n                break;\n\n            default:\n                break;\n        }\n    };\n\n    handleInputFocus = (event: React.FocusEvent<HTMLInputElement>): void => {\n        this.setState({ isFocused: true });\n        if (this.props.onFocus) {\n            this.props.onFocus(event);\n        }\n    };\n\n    handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>): void => {\n        const { focusedChip } = this.state;\n        this._keyPressed = false;\n        this._preventChipCreation = false;\n\n        if (this.props.onKeyDown) {\n            // Needed for arrow controls on a menu in autocomplete scenario\n            this.props.onKeyDown(event);\n            // Check if the callback marked the event as isDefaultPrevented() and skip further actions\n            // enter key, for example, should not always add the current value of the inputField\n            if (event.isDefaultPrevented()) {\n                return;\n            }\n        }\n        const chips = this.props.value || this.state.chips;\n        if (this.newChipKeyCodes.includes(event.keyCode) || this.newChipKeys.includes(event.key)) {\n            const result = this.handleAddChip((event.target as HTMLInputElement).value);\n            if (result !== false) {\n                event.preventDefault();\n            }\n            return;\n        }\n\n        switch (event.keyCode) {\n            case keyCodes.BACKSPACE:\n                if ((event.target as HTMLInputElement).value === '') {\n                    if (focusedChip) {\n                        this.handleDeleteChip(chips[focusedChip], focusedChip);\n                        if (focusedChip) {\n                            this.setState({ focusedChip: focusedChip - 1 });\n                        }\n                    } else {\n                        this.setState({ focusedChip: chips.length - 1 });\n                    }\n                }\n                break;\n            case keyCodes.DELETE:\n                if ((event.target as HTMLInputElement).value === '' && focusedChip) {\n                    this.handleDeleteChip(chips[focusedChip], focusedChip);\n                    if (focusedChip <= chips.length - 1) {\n                        this.setState({ focusedChip });\n                    }\n                }\n                break;\n            case keyCodes.LEFT_ARROW:\n                if (focusedChip === null && (event.target as HTMLInputElement).value === '' && chips.length) {\n                    this.setState({ focusedChip: chips.length - 1 });\n                } else if (focusedChip !== null && focusedChip > 0) {\n                    this.setState({ focusedChip: focusedChip - 1 });\n                }\n                break;\n            case keyCodes.RIGHT_ARROW:\n                if (focusedChip !== null && focusedChip < chips.length - 1) {\n                    this.setState({ focusedChip: focusedChip + 1 });\n                } else {\n                    this.setState({ focusedChip: null });\n                }\n                break;\n            default:\n                this.setState({ focusedChip: null });\n                break;\n        }\n    };\n\n    handleKeyUp = (event: React.KeyboardEvent<HTMLInputElement>): void => {\n        if (\n            !this._preventChipCreation &&\n            (this.newChipKeyCodes.includes(event.keyCode) || this.newChipKeys.includes(event.key)) &&\n            this._keyPressed\n        ) {\n            this.clearInput();\n        } else {\n            this.updateInput((event.target as HTMLInputElement).value);\n        }\n        if (this.props.onKeyUp) {\n            this.props.onKeyUp(event);\n        }\n    };\n\n    // handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    //     this._keyPressed = true;\n    //     if (this.props.onKeyPress) {\n    //         this.props.onKeyPress(event);\n    //     }\n    // };\n\n    handleUpdateInput = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        if (this.props.inputValue === null || this.props.inputValue === undefined) {\n            this.updateInput(e.target.value);\n        }\n\n        if (this.props.onUpdateInput) {\n            this.props.onUpdateInput(e);\n        }\n    };\n\n    /**\n     * Handles adding a chip.\n     *\n     * @param chip Value of the chip, either a string or an object (if dataSourceConfig is set)\n     * @param options Additional options\n     * @param options.clearInputOnFail If `true`, and `onBeforeAdd` returns `false`, clear the input\n     * @returns True if the chip was added (or at least `onAdd` was called), false if adding the chip was prevented\n     */\n    handleAddChip(chip: string, options?: { clearInputOnFail: boolean }): boolean {\n        if (this.props.onBeforeAdd && !this.props.onBeforeAdd(chip)) {\n            this._preventChipCreation = true;\n            if (options && options.clearInputOnFail) {\n                this.clearInput();\n            }\n            return false;\n        }\n        this.clearInput();\n        const chips = this.props.value || this.state.chips;\n\n        if (chip.trim().length) {\n            if (this.props.allowDuplicates || !chips.includes(chip)) {\n                if (this.props.value && this.props.onAdd) {\n                    this.props.onAdd(chip);\n                } else {\n                    this.updateChips([...this.state.chips, chip]);\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    handleDeleteChip(chip: string, i: number): void {\n        if (!this.props.value) {\n            const chips = this.state.chips.slice();\n            const changed = chips.splice(i, 1); // remove the chip at index i\n            if (changed) {\n                let focusedChip = this.state.focusedChip;\n                if (this.state.focusedChip === i) {\n                    focusedChip = null;\n                } else if (this.state.focusedChip > i) {\n                    focusedChip = this.state.focusedChip - 1;\n                }\n                this.updateChips(chips, { focusedChip });\n            }\n        } else if (this.props.onDelete) {\n            this.props.onDelete(chip, i);\n        }\n    }\n\n    updateChips(chips: string[], additionalUpdates = {}): void {\n        this.setState({ chips, chipsUpdated: true, ...additionalUpdates });\n        if (this.props.onChange) {\n            this.props.onChange(chips);\n        }\n    }\n\n    /**\n     * Clears the text field for adding new chips.\n     * This only works in uncontrolled input mode, i.e., if the inputValue prop is not used.\n     */\n    clearInput(): void {\n        this.updateInput('');\n    }\n\n    updateInput(value: string): void {\n        this.setState({ inputValue: value });\n    }\n\n    /**\n     * Set the reference to the actual input, that is the input of the Input.\n     *\n     * @param ref - The reference\n     */\n    setActualInputRef = (ref: HTMLInputElement): void => {\n        this.actualInput = ref;\n        if (this.props.inputRef) {\n            this.props.inputRef(ref);\n        }\n    };\n\n    render(): JSX.Element {\n        const {\n            alwaysShowPlaceholder,\n            chipRenderer = defaultChipRenderer,\n            className,\n            disabled,\n            disableUnderline,\n            error,\n            FormHelperTextProps,\n            fullWidth,\n            fullWidthInput,\n            helperText,\n            id,\n            InputProps = {},\n            InputLabelProps = {},\n            inputValue,\n            label,\n            placeholder,\n            readOnly,\n            required,\n            rootRef,\n            value,\n            margin,\n        } = this.props;\n        const variant = this.state.variant;\n\n        if (this.styleTheme !== this.props.theme.palette.mode) {\n            this.styleTheme = this.props.theme.palette.mode;\n            this.styles = Utils.getStyle(this.props.theme, styles);\n        }\n\n        let chips = value || this.state.chips || [];\n        if (!Array.isArray(chips)) {\n            chips = ((chips as string) || '')\n                .toString()\n                .split(/[,\\s]+/)\n                .map((c: string) => c.trim());\n        }\n        const actualInputValue = inputValue ?? this.state.inputValue;\n\n        const hasInput = (this.props.value || actualInputValue).length || actualInputValue.length;\n        const shrinkFloatingLabel =\n            typeof InputLabelProps.shrink === 'boolean'\n                ? InputLabelProps.shrink\n                : label !== null && (hasInput || this.state.isFocused || chips.length);\n\n        const chipComponents = chips.map((chip, i) =>\n            chipRenderer(\n                {\n                    value: chip,\n                    isDisabled: !!disabled,\n                    isReadOnly: readOnly,\n                    isFocused: this.state.focusedChip === i,\n                    handleClick: () => this.setState({ focusedChip: i }),\n                    handleDelete: () => this.handleDeleteChip(chip, i),\n                    style: this.styles.chip,\n                },\n                i.toString(),\n            ),\n        );\n\n        const InputMore: { notched?: boolean; labelWidth?: number; startAdornment?: JSX.Element[] } = {};\n        if (variant === 'outlined') {\n            InputMore.notched = !!shrinkFloatingLabel;\n            InputMore.labelWidth = (shrinkFloatingLabel && this.labelNode && this.labelNode.offsetWidth) || 0;\n        }\n\n        if (variant !== 'standard') {\n            InputMore.startAdornment = chipComponents;\n        } else {\n            InputProps.disableUnderline = true;\n        }\n\n        const InputComponent = variantComponent[variant];\n\n        return (\n            <FormControl\n                ref={rootRef}\n                fullWidth={fullWidth}\n                className={className}\n                sx={{ ...this.styles.root, ...(margin === 'dense' ? this.styles.marginDense : {}) }}\n                error={error}\n                required={chips.length > 0 ? undefined : required}\n                onClick={this.focus}\n                disabled={disabled}\n                variant={variant}\n                component=\"div\"\n                margin={margin}\n            >\n                {label && (\n                    <InputLabel\n                        htmlFor={id}\n                        sx={{\n                            '&.MuiInputLabel-root': this.styles.label,\n                            '&.MuiInputLabel-shrink': this.styles.labelShrink,\n                        }}\n                        shrink={!!shrinkFloatingLabel}\n                        focused={this.state.isFocused}\n                        variant={variant}\n                        ref={this.labelRef}\n                        required={required}\n                        component=\"label\"\n                        {...InputLabelProps}\n                    >\n                        {label}\n                    </InputLabel>\n                )}\n                <Box\n                    component=\"div\"\n                    id=\"input-chip-container\"\n                    sx={{\n                        ...this.styles[variant],\n                        ...this.styles.chipContainer,\n                        ...(this.state.isFocused ? this.styles.focused : undefined),\n                        ...(!disableUnderline && variant === 'standard' ? this.styles.underline : undefined),\n                        ...(disabled ? this.styles.disabled : undefined),\n                        ...(label ? this.styles.labeled : undefined),\n                        ...(error ? this.styles.error : undefined),\n                    }}\n                >\n                    {variant === 'standard' && chipComponents}\n                    <InputComponent\n                        ref={this.input}\n                        className={`mui-variant-${this.styles[variant]} ${label ? 'mui-chip-with-label' : 'mui-chip-no-label'}`}\n                        sx={{\n                            '&.MuiInputBase-input': { ...this.styles.input, ...this.styles[variant] },\n                            '&.MuiInputBase-root': { ...this.styles.inputRoot },\n                        }}\n                        id={id}\n                        value={actualInputValue}\n                        onChange={this.handleUpdateInput}\n                        onKeyDown={this.handleKeyDown}\n                        // onKeyPress={this.handleKeyPress}\n                        onKeyUp={this.handleKeyUp}\n                        onFocus={this.handleInputFocus}\n                        onBlur={this.handleInputBlur}\n                        inputRef={this.setActualInputRef}\n                        disabled={disabled}\n                        fullWidth={fullWidthInput}\n                        placeholder={\n                            (!hasInput && (shrinkFloatingLabel || label === null || label === undefined)) ||\n                            alwaysShowPlaceholder\n                                ? placeholder\n                                : null\n                        }\n                        readOnly={readOnly}\n                        {...InputProps}\n                        {...InputMore}\n                    />\n                </Box>\n                {helperText && (\n                    <FormHelperText\n                        {...FormHelperTextProps}\n                        className={FormHelperTextProps?.className}\n                        style={this.styles.helperText}\n                    >\n                        {helperText}\n                    </FormHelperText>\n                )}\n            </FormControl>\n        );\n    }\n}\n\nexport default ChipInput;\n","import React, { type JSX } from 'react';\n\nimport { FormHelperText, FormControl } from '@mui/material';\n\nimport type { ConfigItemChip } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\nimport ChipInput from './ChipInput';\n\ninterface ConfigChipProps extends ConfigGenericProps {\n    schema: ConfigItemChip;\n}\n\nclass ConfigChip extends ConfigGeneric<ConfigChipProps, ConfigGenericState> {\n    componentDidMount(): void {\n        super.componentDidMount();\n        const { data, attr } = this.props;\n        const value = ConfigGeneric.getValue(data, attr);\n        if (this.props.schema.delimiter && typeof value === 'string') {\n            const parts = value\n                .split(this.props.schema.delimiter)\n                .map(a => a.trim())\n                .filter(a => a);\n            this.setState({ value: parts });\n        } else {\n            this.setState({ value: value || [] });\n        }\n    }\n\n    renderItem(error: string, disabled: boolean): JSX.Element | null {\n        const { attr, schema } = this.props;\n        const { value } = this.state;\n        return (\n            <FormControl\n                fullWidth\n                variant=\"standard\"\n            >\n                <ChipInput\n                    value={value}\n                    disabled={!!disabled}\n                    label={this.getText(schema.label)}\n                    error={!!error}\n                    onAdd={chip => {\n                        const newValue = JSON.parse(JSON.stringify(value));\n                        newValue.push(chip);\n                        this.setState({ value: newValue }, () => {\n                            let mayBePromise: void | Promise<void>;\n                            if (this.props.schema.delimiter) {\n                                mayBePromise = this.onChange(attr, newValue.join(`${this.props.schema.delimiter} `));\n                            } else {\n                                mayBePromise = this.onChange(attr, newValue);\n                            }\n                            if (mayBePromise instanceof Promise) {\n                                mayBePromise.catch(e => console.error(e));\n                            }\n                        });\n                    }}\n                    theme={this.props.oContext.theme}\n                    onDelete={(_chip, index) => {\n                        const newValue = JSON.parse(JSON.stringify(value));\n                        newValue.splice(index, 1);\n                        this.setState({ value: newValue }, () => {\n                            let mayBePromise: void | Promise<void>;\n                            if (this.props.schema.delimiter) {\n                                mayBePromise = this.onChange(attr, newValue.join(`${this.props.schema.delimiter} `));\n                            } else {\n                                mayBePromise = this.onChange(attr, newValue);\n                            }\n                            if (mayBePromise instanceof Promise) {\n                                mayBePromise.catch(e => console.error(e));\n                            }\n                        });\n                    }}\n                />\n                {this.props.schema.help ? (\n                    <FormHelperText>\n                        {this.renderHelp(\n                            this.props.schema.help,\n                            this.props.schema.helpLink,\n                            this.props.schema.noTranslation,\n                        )}\n                    </FormHelperText>\n                ) : null}\n            </FormControl>\n        );\n    }\n}\n\nexport default ConfigChip;\n","import React, { type JSX } from 'react';\nimport { ChromePicker, type ColorResult } from 'react-color';\n\nimport { IconButton, TextField, Dialog } from '@mui/material';\n\nimport { Close as ClearIcon } from '@mui/icons-material';\n\nimport { Utils } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemText } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\ninterface ConfigColorProps extends ConfigGenericProps {\n    schema: ConfigItemText;\n}\n\ninterface ConfigColorState extends ConfigGenericState {\n    showColorDialog?: boolean;\n    colorDialogValue?: string;\n}\n\nclass ConfigColor extends ConfigGeneric<ConfigColorProps, ConfigColorState> {\n    renderColorDialog(): JSX.Element | null {\n        return (\n            !!this.state.showColorDialog && (\n                <Dialog\n                    onClose={() => this.setState({ showColorDialog: false })}\n                    open={this.state.showColorDialog}\n                >\n                    <ChromePicker\n                        color={this.state.colorDialogValue}\n                        onChange={(color: ColorResult) =>\n                            this.setState({ colorDialogValue: color.hex }, () =>\n                                this.onChange(this.props.attr, this.state.colorDialogValue),\n                            )\n                        }\n                    />\n                </Dialog>\n            )\n        );\n    }\n\n    renderItem(_error: unknown, disabled: boolean /* , defaultValue */): JSX.Element {\n        const value = ConfigGeneric.getValue(this.props.data, this.props.attr);\n        let textColor = Utils.isUseBright(value, null);\n        if (textColor === null) {\n            textColor = undefined;\n        }\n        return (\n            <>\n                {this.renderColorDialog()}\n                <TextField\n                    variant=\"standard\"\n                    disabled={!!disabled}\n                    style={{ minWidth: 100, width: 'calc(100% - 8px)' }}\n                    label={this.getText(this.props.schema.label)}\n                    value={value || ''}\n                    onClick={() =>\n                        !this.props.schema.readOnly &&\n                        this.setState({ showColorDialog: true, colorDialogValue: value || '' })\n                    }\n                    onChange={e => {\n                        const color = e.target.value;\n                        const mayBePromise = this.onChange(this.props.attr, color);\n                        if (mayBePromise instanceof Promise) {\n                            void mayBePromise.catch(e => console.error(`Cannot set value: ${e}`));\n                        }\n                    }}\n                    slotProps={{\n                        htmlInput: {\n                            style: {\n                                // paddingLeft: noPadding ? 0 : 8,\n                                backgroundColor: value,\n                                color: textColor ? '#FFF' : '#000',\n                            },\n                            readOnly: this.props.schema.readOnly || false,\n                        },\n                        input: {\n                            endAdornment:\n                                !this.props.schema.readOnly && value && !this.props.schema.noClearButton ? (\n                                    <IconButton\n                                        size=\"small\"\n                                        onClick={e => {\n                                            e.stopPropagation();\n                                            const mayBePromise = this.onChange(this.props.attr, '');\n                                            if (mayBePromise instanceof Promise) {\n                                                void mayBePromise.catch(e => console.error(`Cannot set value: ${e}`));\n                                            }\n                                        }}\n                                    >\n                                        <ClearIcon />\n                                    </IconButton>\n                                ) : undefined,\n                        },\n                        inputLabel: {\n                            shrink: true,\n                        },\n                    }}\n                />\n            </>\n        );\n    }\n}\n\nexport default ConfigColor;\n","import React, { type JSX } from 'react';\n\nimport { TextField, Fab, FormControlLabel, Checkbox } from '@mui/material';\n\nimport { GpsFixed as IconGpsFixed, LocationOn as IconLocationOn } from '@mui/icons-material';\n\nimport { I18n } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemCoordinates } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\nconst styles: Record<string, React.CSSProperties> = {\n    width: {\n        width: 'calc(100% - 85px)',\n    },\n    width50: {\n        width: 120,\n        marginRight: 5,\n    },\n};\n\ninterface ConfigCoordinatesProps extends ConfigGenericProps {\n    schema: ConfigItemCoordinates;\n}\n\ninterface ConfigCoordinatesState extends ConfigGenericState {\n    useSystem?: boolean;\n    longitude?: string | number;\n    latitude?: string | number;\n}\n\nclass ConfigCoordinates extends ConfigGeneric<ConfigCoordinatesProps, ConfigCoordinatesState> {\n    componentDidMount(): void {\n        super.componentDidMount();\n\n        const value = ConfigGeneric.getValue(this.props.data, this.props.attr);\n        this.setState({ value });\n\n        const newState: Partial<ConfigCoordinatesState> = {};\n        if (this.props.schema.useSystemName) {\n            newState.useSystem = !!ConfigGeneric.getValue(this.props.data, this.props.schema.useSystemName);\n        }\n        if (this.props.schema.longitudeName && this.props.schema.latitudeName) {\n            newState.longitude = ConfigGeneric.getValue(this.props.data, this.props.schema.longitudeName);\n            newState.latitude = ConfigGeneric.getValue(this.props.data, this.props.schema.latitudeName);\n            if (!newState.longitude && !newState.latitude && this.props.schema.autoInit) {\n                setTimeout(() => this.getCoordinates(), 300);\n            }\n        } else {\n            const value_ = ConfigGeneric.getValue(this.props.data, this.props.attr);\n            if (!value_ && this.props.schema.autoInit) {\n                setTimeout(() => this.getCoordinates(), 300);\n            }\n        }\n        if (Object.keys(newState).length) {\n            setTimeout(() => this.setState(newState as ConfigCoordinatesState), 50);\n        }\n    }\n\n    async getSystemCoordinates(): Promise<void> {\n        const obj = await this.props.oContext.socket.getCompactSystemConfig();\n        if (obj?.common && (obj.common.longitude || obj.common.latitude)) {\n            window.alert(I18n.t('ra_Used system settings'));\n            if (this.props.schema.longitudeName && this.props.schema.latitudeName) {\n                this.setState(\n                    {\n                        longitude: obj.common.longitude,\n                        latitude: obj.common.latitude,\n                    },\n                    async () => {\n                        await this.onChange(this.props.schema.longitudeName, obj.common.longitude);\n                        await this.onChange(this.props.schema.latitudeName, obj.common.latitude);\n                    },\n                );\n            } else {\n                const value = obj.common.latitude + (this.props.schema.divider || ',') + obj.common.longitude;\n                this.setState(\n                    {\n                        value,\n                    },\n                    () => {\n                        const mayByPromise = this.onChange(this.props.attr, value);\n                        if (mayByPromise instanceof Promise) {\n                            mayByPromise.catch(e => console.error(`Cannot set value: ${e}`));\n                        }\n                    },\n                );\n            }\n        } else {\n            window.alert(\n                I18n.t(\n                    'ra_Cannot determine position: System settings are empty and GPS detection is disabled in browser',\n                ),\n            );\n        }\n    }\n\n    getCoordinates(): void {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n                async (position: GeolocationPosition): Promise<void> => {\n                    if (position?.coords) {\n                        if (this.props.schema.longitudeName && this.props.schema.latitudeName) {\n                            this.setState(\n                                {\n                                    longitude: position.coords.longitude,\n                                    latitude: position.coords.latitude,\n                                },\n                                async () => {\n                                    await this.onChange(\n                                        this.props.schema.longitudeName,\n                                        position.coords.longitude || '',\n                                    );\n                                    await this.onChange(this.props.schema.latitudeName, position.coords.latitude || '');\n                                },\n                            );\n                        } else {\n                            const value =\n                                position.coords.latitude +\n                                (this.props.schema.divider || ',') +\n                                position.coords.longitude;\n                            this.setState({ value }, () => {\n                                const mayByPromise = this.onChange(this.props.attr, value);\n                                if (mayByPromise instanceof Promise) {\n                                    mayByPromise.catch(e => console.error(`Cannot set value: ${e}`));\n                                }\n                            });\n                        }\n                    } else {\n                        await this.getSystemCoordinates();\n                    }\n                },\n                async (error: GeolocationPositionError): Promise<void> => {\n                    console.error(`Cannot determine coordinates from browser: ${error.message}`);\n                    await this.getSystemCoordinates();\n                },\n            );\n        } else {\n            void this.getSystemCoordinates().catch(e => {\n                console.error(`Cannot determine coordinates: ${e}`);\n            });\n        }\n    }\n\n    renderItem(error: string, disabled: boolean /* , defaultValue */): JSX.Element {\n        return (\n            <>\n                {this.props.schema.useSystemName ? (\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={!!this.state.useSystem}\n                                onChange={e => {\n                                    const useSystem = e.target.checked;\n                                    if (useSystem) {\n                                        void this.getSystemCoordinates().catch(e =>\n                                            console.error(`Cannot determine coordinates: ${e}`),\n                                        );\n                                    }\n                                    this.setState({ useSystem }, () =>\n                                        this.onChange(this.props.schema.useSystemName, useSystem),\n                                    );\n                                }}\n                            />\n                        }\n                        label={I18n.t('ra_Use system settings for position')}\n                    />\n                ) : null}\n                {this.props.schema.longitudeName && this.props.schema.latitudeName ? (\n                    <TextField\n                        variant=\"standard\"\n                        style={styles.width50}\n                        value={this.state.longitude ?? ''}\n                        error={!!error}\n                        disabled={this.state.useSystem || !!disabled}\n                        onChange={e => {\n                            const longitude = e.target.value;\n                            this.setState({ longitude }, () => {\n                                const mayBePromise = this.onChange(\n                                    this.props.schema.longitudeName,\n                                    (longitude || '').trim(),\n                                );\n                                if (mayBePromise instanceof Promise) {\n                                    mayBePromise.catch(e => console.error(`Cannot set value: ${e}`));\n                                }\n                            });\n                        }}\n                        label={I18n.t('ra_Longitude')}\n                    />\n                ) : null}\n                {this.props.schema.longitudeName && this.props.schema.latitudeName ? (\n                    <TextField\n                        variant=\"standard\"\n                        style={styles.width50}\n                        value={this.state.latitude ?? ''}\n                        error={!!error}\n                        disabled={this.state.useSystem || !!disabled}\n                        onChange={e => {\n                            const latitude = e.target.value;\n                            this.setState({ latitude }, () =>\n                                this.onChange(this.props.schema.latitudeName, (latitude || '').trim()),\n                            );\n                        }}\n                        label={I18n.t('ra_Latitude')}\n                    />\n                ) : null}\n                {!this.props.schema.longitudeName || !this.props.schema.latitudeName ? (\n                    <TextField\n                        variant=\"standard\"\n                        style={styles.width}\n                        value={this.state.value === null || this.state.value === undefined ? '' : this.state.value}\n                        error={!!error}\n                        disabled={!!disabled}\n                        slotProps={{\n                            htmlInput: {\n                                maxLength: this.props.schema.maxLength || this.props.schema.max || undefined,\n                                readOnly: this.state.useSystem,\n                            },\n                        }}\n                        onChange={e => {\n                            const value = e.target.value;\n                            this.setState({ value }, () => this.onChange(this.props.attr, (value || '').trim()));\n                        }}\n                        placeholder={this.getText(this.props.schema.placeholder)}\n                        label={this.getText(this.props.schema.label)}\n                        helperText={this.renderHelp(\n                            this.props.schema.help,\n                            this.props.schema.helpLink,\n                            this.props.schema.noTranslation,\n                        )}\n                    />\n                ) : null}\n                {!this.state.useSystem ? (\n                    <Fab\n                        size=\"small\"\n                        onClick={() => this.getCoordinates()}\n                        title={I18n.t('ra_Take browser position')}\n                        style={{ marginRight: 4 }}\n                    >\n                        <IconLocationOn />\n                    </Fab>\n                ) : null}\n                {!this.state.useSystem ? (\n                    <Fab\n                        size=\"small\"\n                        onClick={() => this.getSystemCoordinates()}\n                        title={I18n.t('ra_Take position from system settings')}\n                    >\n                        <IconGpsFixed />\n                    </Fab>\n                ) : null}\n            </>\n        );\n    }\n}\n\nexport default ConfigCoordinates;\n","import React, { type JSX } from 'react';\nimport { Grid2, LinearProgress } from '@mui/material';\n\nimport { I18n } from '@iobroker/adapter-react-v5';\nimport type { ConfigItemCustom } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from '#JC/JsonConfigComponent/ConfigGeneric';\n\nconst getOrLoadRemote = (\n    remote: string,\n    shareScope: string,\n    remoteFallbackUrl?: string,\n): Promise<{ get: (module: string) => () => Promise<{ default: Record<string, React.FC<ConfigGenericProps>> }> }> =>\n    new Promise((resolve, reject) => {\n        // check if remote exists on the global `window`object\n        if (!(window as any)[remote]) {\n            // search dom to see if remote tag exists, but might still be loading (async)\n            const existingRemote: HTMLScriptElement = document.querySelector(`script[data-webpack=\"${remote}\"]`);\n            // when remote is loaded.\n            const onload = async (): Promise<void> => {\n                // check if it was initialized\n                if ((window as any)[remote]) {\n                    if (!(window as any)[remote].__initialized) {\n                        // if share scope doesn't exist (like in webpack 4) then expect shareScope to be a manual object\n                        // @ts-expect-error it is a trick and must be so\n                        if (typeof __webpack_share_scopes__ === 'undefined') {\n                            // use a default share scope object passed in manually\n                            await (window as any)[remote].init(shareScope);\n                        } else {\n                            // otherwise, init share scope as usual\n                            // @ts-expect-error it is a trick and must be so\n                            await (window as any)[remote].init((__webpack_share_scopes__ as any)[shareScope]);\n                        }\n                        // mark remote as initialized\n                        (window as any)[remote].__initialized = true;\n                    }\n                } else {\n                    console.error(`Cannot load ${remote}`);\n                    reject(new Error(`Cannot load ${remote}`));\n                    return;\n                }\n                // resolve promise so marking remote as loaded\n                resolve((window as any)[remote]);\n            };\n\n            if (existingRemote) {\n                // if existing remote but not loaded, hook into its onload and wait for it to be ready\n                existingRemote.onload = onload;\n                existingRemote.onerror = reject;\n                // check if remote fallback exists as param passed to function\n                // TODO: should scan public config for a matching key if no override exists\n            } else if (remoteFallbackUrl) {\n                // inject remote if a fallback exists and call the same onload function\n                const d = document;\n                const script = d.createElement('script');\n                script.type = 'text/javascript';\n                // mark as data-webpack so runtime can track it internally\n                script.setAttribute('data-webpack', `${remote}`);\n                script.async = true;\n                script.onerror = reject;\n                script.onload = onload;\n                script.src = remoteFallbackUrl;\n                d.getElementsByTagName('head')[0].appendChild(script);\n            } else {\n                // no remote and no fallback exist, reject\n                reject(new Error(`Cannot Find Remote ${remote} to inject`));\n            }\n        } else {\n            // remote already instantiated, resolve\n            resolve((window as any)[remote]);\n        }\n    });\n\nfunction loadComponent(\n    remote: string,\n    sharedScope: string,\n    module: string,\n    url: string,\n): () => Promise<{ default: Record<string, React.FC<ConfigGenericProps>> }> {\n    return async (): Promise<{ default: Record<string, React.FC<ConfigGenericProps>> }> => {\n        const container = await getOrLoadRemote(remote, sharedScope, url);\n        // eslint-disable-next-line @typescript-eslint/await-thenable\n        const factory = await container.get(module);\n        return factory();\n    };\n}\n\ninterface ConfigCustomProps extends ConfigGenericProps {\n    schema: ConfigItemCustom;\n}\n\ninterface ConfigCustomState extends ConfigGenericState {\n    Component: React.FC<ConfigGenericProps> | null;\n    error: string;\n}\n\nexport default class ConfigCustom extends ConfigGeneric<ConfigCustomProps, ConfigCustomState> {\n    static runningLoads: Record<string, Promise<{ default: Record<string, React.FC<ConfigGenericProps>> }>> = {};\n\n    constructor(props: ConfigCustomProps) {\n        super(props);\n        // schema.url - location of Widget\n        // schema.name - Component name\n        // schema.i18n - i18n\n\n        Object.assign(this.state, {\n            Component: null,\n            error: '',\n        });\n    }\n\n    // load component dynamically\n    async componentDidMount(): Promise<void> {\n        if (!this.props.schema.url) {\n            console.error('URL is empty. Cannot load custom component!');\n            this.setState({ error: 'URL is empty. Cannot load custom component!' });\n            return;\n        }\n\n        let url;\n        /*\n        if (this.props.schema.url.startsWith('http:') || this.props.schema.url.startsWith('https:')) {\n            url = this.props.schema.url;\n        } else\n        */\n        if (this.props.schema.url.startsWith('./')) {\n            url = `${window.location.protocol}//${window.location.host}${this.props.schema.url.replace(/^\\./, '')}`;\n        } else {\n            url = `${window.location.protocol}//${window.location.host}/adapter/${this.props.oContext.adapterName}/${this.props.schema.url}`;\n        }\n        const [uniqueName, fileToLoad, ...componentNameParts] = this.props.schema.name.split('/');\n        const componentName = componentNameParts.join('/');\n        if (!url) {\n            console.error(\n                'Cannot find URL for custom component! Please define \"url\" as \"custom/customComponents.js\" in the schema',\n            );\n            return;\n        }\n        if (!uniqueName || !fileToLoad || !componentName) {\n            console.error(\n                'Invalid format of \"name\"! Please define \"name\" as \"ConfigCustomBackItUpSet/Components/AdapterExist\" in the schema',\n            );\n            return;\n        }\n        let setPromise: Promise<{ default: Record<string, React.FC<ConfigGenericProps>> }> | undefined =\n            ConfigCustom.runningLoads[`${url}!${fileToLoad}`];\n\n        if (!(setPromise instanceof Promise)) {\n            let i18nPromise: Promise<void> | undefined;\n            if (this.props.schema.i18n === true) {\n                // load i18n from files\n                const pos = url.lastIndexOf('/');\n                let i18nURL: string;\n                if (pos !== -1) {\n                    i18nURL = url.substring(0, pos);\n                } else {\n                    i18nURL = url;\n                }\n                const lang = I18n.getLanguage();\n                const file = `${i18nURL}/i18n/${lang}.json`;\n\n                i18nPromise = fetch(file)\n                    .then(data => data.json())\n                    .then(json => I18n.extendTranslations(json, lang))\n                    .catch(error => {\n                        if (lang !== 'en') {\n                            // try to load English\n                            fetch(`${i18nURL}/i18n/en.json`)\n                                .then(data => data.json())\n                                .then(json => I18n.extendTranslations(json, lang))\n                                .catch(err => console.log(`Cannot load i18n \"${file}\": ${err}`));\n                            return;\n                        }\n                        console.log(`Cannot load i18n \"${file}\": ${error}`);\n                    });\n            } else if (this.props.schema.i18n && typeof this.props.schema.i18n === 'object') {\n                try {\n                    I18n.extendTranslations(this.props.schema.i18n);\n                } catch (error) {\n                    console.error(`Cannot import i18n: ${error}`);\n                }\n            }\n            try {\n                console.log(uniqueName, fileToLoad, componentName);\n                setPromise = loadComponent(uniqueName, 'default', `./${fileToLoad}`, url)();\n                if (i18nPromise instanceof Promise) {\n                    setPromise = Promise.all([setPromise, i18nPromise]).then(result => result[0]);\n                }\n                // remember promise\n                ConfigCustom.runningLoads[`${url}!${fileToLoad}`] = setPromise;\n            } catch (error) {\n                this.setState({ error: `Cannot import from ${this.props.schema.url}: ${error}` });\n            }\n        }\n\n        try {\n            const component: Record<string, React.FC<ConfigGenericProps>> = (await setPromise).default;\n\n            if (!component?.[componentName]) {\n                const keys = Object.keys(component || {});\n                console.error('URL is empty. Cannot load custom component!');\n                this.setState({\n                    error: `Component ${this.props.schema.name} not found in ${this.props.schema.url}. Found: ${keys.join(', ')}`,\n                });\n            } else {\n                this.setState({ Component: component[componentName] });\n            }\n        } catch (error) {\n            this.setState({ error: `Cannot import from ${this.props.schema.url}: ${error}` });\n        }\n    }\n\n    render(): JSX.Element {\n        const CustomComponent: React.FC<ConfigGenericProps> = this.state.Component;\n\n        // render temporary placeholder\n        if (!CustomComponent) {\n            const schema = this.props.schema || ({} as ConfigItemCustom);\n\n            const item = (\n                <Grid2\n                    size={{\n                        xs: schema.xs || undefined,\n                        sm: schema.sm || undefined,\n                        md: schema.md || undefined,\n                        lg: schema.lg || undefined,\n                        xl: schema.xl || undefined,\n                    }}\n                    style={{\n                        marginBottom: 0,\n                        // marginRight: 8,\n                        textAlign: 'left',\n                        ...schema.style,\n                        ...(this.props.oContext.themeType === 'dark' ? schema.darkStyle : {}),\n                    }}\n                >\n                    {this.state.error ? <div>{this.state.error}</div> : <LinearProgress />}\n                </Grid2>\n            );\n\n            if (schema.newLine) {\n                return (\n                    <>\n                        <div style={{ flexBasis: '100%', height: 0 }} />\n                        {item}\n                    </>\n                );\n            }\n            return item;\n        }\n\n        return <CustomComponent {...this.props} />;\n    }\n}\n","import React, { type JSX } from 'react';\n\nimport type { ConfigItemDeviceManager } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\ninterface ConfigDeviceManagerProps extends ConfigGenericProps {\n    schema: ConfigItemDeviceManager;\n}\n\nclass ConfigDeviceManager extends ConfigGeneric<ConfigDeviceManagerProps, ConfigGenericState> {\n    renderItem(): JSX.Element | null {\n        const schema = this.props.schema;\n\n        if (!schema) {\n            return null;\n        }\n\n        if (this.props.oContext.DeviceManager) {\n            const DeviceManager = this.props.oContext.DeviceManager;\n            return (\n                <DeviceManager\n                    uploadImagesToInstance={`${this.props.oContext.adapterName}.${this.props.oContext.instance}`}\n                    title={this.getText(this.props.schema.label)}\n                    socket={this.props.oContext.socket}\n                    selectedInstance={`${this.props.oContext.adapterName}.${this.props.oContext.instance}`}\n                    themeName={this.props.themeName}\n                    themeType={this.props.oContext.themeType}\n                    isFloatComma={this.props.oContext.isFloatComma}\n                    dateFormat={this.props.oContext.dateFormat}\n                />\n            );\n        }\n\n        return <div>DeviceManager not found</div>;\n    }\n}\n\nexport default ConfigDeviceManager;\n","import React, { type JSX } from 'react';\nimport Dropzone, { type DropzoneRef } from 'react-dropzone';\n\nimport {\n    InputLabel,\n    MenuItem,\n    FormHelperText,\n    FormControl,\n    Select,\n    IconButton,\n    ListItemText,\n    ListItemIcon,\n} from '@mui/material';\n\nimport {\n    Refresh as IconRefresh,\n    UploadFile as IconUpload,\n    Delete as IconDelete,\n    PlayArrow as IconPlay,\n    MusicNote as IconAudio,\n    Videocam as IconVideo,\n    Article as IconText,\n    Code as IconCode,\n} from '@mui/icons-material';\nimport { UploadFile as UploadIcon } from '@mui/icons-material';\n\nimport { DialogConfirm, Utils, I18n } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemFileSelector } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\nconst styles: Record<string, React.CSSProperties> = {\n    fullWidth: {\n        width: '100%',\n    },\n    fullWidthOneButton: {\n        width: 'calc(100% - 42px)',\n    },\n    fullWidthTwoButtons: {\n        width: 'calc(100% - 84px)',\n    },\n    fullWidthThreeButtons: {\n        width: 'calc(100% - 126x)',\n    },\n    dropZone: {\n        width: '100%',\n        height: '100%',\n        position: 'absolute',\n    },\n    dropZoneEmpty: {},\n    image: {\n        objectFit: 'contain',\n        margin: 'auto',\n        display: 'flex',\n        width: '100%',\n        height: '100%',\n    },\n    uploadDiv: {\n        position: 'relative',\n        width: '100%',\n    },\n    uploadDivDragging: {\n        opacity: 1,\n        background: 'rgba(128,255,128,0.1)',\n    },\n    uploadCenterDiv: {\n        margin: 5,\n        border: '3px dashed grey',\n        borderRadius: 5,\n        width: '100%',\n        height: '100%',\n        position: 'absolute',\n        display: 'flex',\n    },\n    uploadCenterIcon: {\n        paddingTop: 10,\n        width: 48,\n        height: 48,\n    },\n    uploadCenterText: {\n        fontSize: 16,\n    },\n    uploadCenterTextAndIcon: {\n        textAlign: 'center',\n        position: 'absolute',\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    disabledOpacity: {\n        opacity: 0.3,\n        cursor: 'default',\n    },\n    error: {\n        border: '2px solid red',\n    },\n    deleteButton: {},\n    selectedImage: {\n        height: 40,\n        width: 40,\n        display: 'inline-block',\n        marginRight: 8,\n    },\n};\n\nconst IMAGE_EXT = ['jpg', 'jpeg', 'svg', 'png', 'webp', 'gif', 'apng', 'avif', 'webp'];\nconst AUDIO_EXT = ['mp3', 'ogg', 'wav', 'aac'];\nconst VIDEO_EXT = ['avi', 'mp4', 'mov'];\nconst DOC_EXT = ['txt', 'log', 'html', 'htm'];\nconst JS_EXT = ['json', 'js', 'ts'];\n\ninterface ConfigFileSelectorProps extends ConfigGenericProps {\n    schema: ConfigItemFileSelector;\n}\n\ninterface ConfigFileSelectorState extends ConfigGenericState {\n    uploadFile?: boolean | 'dragging';\n    uploadError?: boolean;\n    files?: { name: string; size: string }[];\n    deleteFile?: string;\n}\n\nclass ConfigFileSelector extends ConfigGeneric<ConfigFileSelectorProps, ConfigFileSelectorState> {\n    private readonly dropzoneRef: React.RefObject<DropzoneRef>;\n\n    private readonly imagePrefix: string;\n\n    private objectID: string;\n\n    private path: string;\n\n    constructor(props: ConfigFileSelectorProps) {\n        super(props);\n        this.dropzoneRef = React.createRef();\n        this.imagePrefix = this.props.oContext.imagePrefix === undefined ? './files' : this.props.oContext.imagePrefix;\n    }\n\n    componentDidMount(): void {\n        super.componentDidMount();\n\n        this.objectID = (this.props.schema.objectID || '0_userdata.0').replace(\n            '%INSTANCE%',\n            (this.props.oContext.instance || 0).toString(),\n        );\n        this.path = this.props.schema.upload;\n        if (this.path) {\n            if (this.path === '/') {\n                this.path = '';\n            } else if (!this.path.endsWith('/')) {\n                this.path = `${this.path}/`;\n            }\n        }\n\n        // read files\n        void this.updateFiles().then(() => {\n            const value = ConfigGeneric.getValue(this.props.data, this.props.attr);\n            this.setState({ value });\n        });\n    }\n\n    updateFiles(): Promise<void> {\n        return this.readFiles(this.props.schema.pattern).then(files => this.setState({ files }));\n    }\n\n    async readFolder(\n        folderName: string,\n        files: { name: string; size: string }[],\n        filter: string,\n    ): Promise<{ name: string; size: string }[]> {\n        try {\n            const dirFiles = await this.props.oContext.socket.readDir(\n                this.objectID,\n                folderName.replace(/^\\//, '') || null,\n            );\n            for (let f = 0; f < dirFiles.length; f++) {\n                const file = dirFiles[f];\n                if (file.isDir) {\n                    // read it\n                    await this.readFolder(`${folderName + file.file}/`, files, filter);\n                } else {\n                    let ok = false;\n                    if (filter === '*.*' && file.file.includes('.')) {\n                        ok = true;\n                    } else if (!filter || filter === '*') {\n                        ok = true;\n                    } else if (filter === '.*' && file.file.startsWith('.')) {\n                        ok = true;\n                    } else {\n                        const regExp = new RegExp(`^${filter.replace(/\\./g, '\\\\.').replace(/\\*/g, '.*')}$`);\n                        ok = regExp.test(file.file);\n                    }\n\n                    if (ok) {\n                        files.push({\n                            name: folderName + file.file,\n                            size: file.stats ? Utils.formatBytes(file.stats.size) : '--',\n                        });\n                    }\n                }\n            }\n        } catch (e) {\n            console.error(`Cannot read \"${folderName}\": ${e}`);\n        }\n\n        return files;\n    }\n\n    async readFiles(pattern: string): Promise<{ name: string; size: string }[]> {\n        const files: { name: string; size: string }[] = [];\n        pattern = pattern || this.props.schema.pattern;\n        if (!pattern) {\n            pattern = '**/*.*';\n        }\n        let filter;\n        const pos = pattern.lastIndexOf('/');\n        if (pos === -1) {\n            filter = pattern;\n        } else {\n            filter = pattern.substring(pos + 1);\n        }\n\n        if (pattern.startsWith('**')) {\n            // read all folders\n            await this.readFolder('/', files, filter);\n        } else {\n            const pos_ = pattern.lastIndexOf('/');\n            if (pos_ === -1) {\n                await this.readFolder('/', files, filter);\n            } else {\n                const folder = pattern.substring(0, pos_ + 1);\n                await this.readFolder(folder, files, filter);\n            }\n        }\n\n        return files;\n    }\n\n    onDrop(acceptedFiles: File[]): void {\n        const file = acceptedFiles[0];\n        const reader = new FileReader();\n        const maxSize = this.props.schema.maxSize || 2 * 1024 * 1024;\n\n        reader.onabort = () => console.log('file reading was aborted');\n        reader.onerror = () => console.log('file reading has failed');\n        reader.onload = () => {\n            let ext = `image/${file.name.split('.').pop().toLowerCase()}`;\n            if (ext === 'image/jpg') {\n                ext = 'image/jpeg';\n            } else if (ext.includes('svg')) {\n                ext = 'image/svg+xml';\n            }\n            if (file.size > maxSize) {\n                window.alert(I18n.t('File is too big. Max %sk allowed. Try use SVG.', Math.round(maxSize / 1024)));\n                return;\n            }\n            const base64 = `data:${ext};base64,${btoa(\n                new Uint8Array(reader.result as ArrayBufferLike).reduce(\n                    (data, byte) => data + String.fromCharCode(byte),\n                    '',\n                ),\n            )}`;\n\n            this.props.oContext.socket\n                .writeFile64(this.objectID, this.path + file.name, base64)\n                .then(() => this.updateFiles())\n                .catch(e => window.alert(`Cannot upload file: ${e}`));\n        };\n        reader.readAsArrayBuffer(file);\n    }\n\n    renderDeleteDialog(): JSX.Element | null {\n        if (!this.state.deleteFile) {\n            return null;\n        }\n        return (\n            <DialogConfirm\n                title={I18n.t('ra_Are you sure?')}\n                text={I18n.t('ra_File will be deleted')}\n                ok={I18n.t('ra_Delete')}\n                cancel={I18n.t('ra_Cancel')}\n                onClose={isOk => {\n                    const deleteFile = this.state.deleteFile;\n                    this.setState({ deleteFile: '' }, () => {\n                        if (isOk) {\n                            this.props.oContext.socket\n                                .deleteFile(this.objectID, deleteFile)\n                                .then(() => this.updateFiles())\n                                .catch(e => window.alert(`Cannot delete file: ${e}`));\n                        }\n                    });\n                }}\n            />\n        );\n    }\n\n    static base64ToArrayBuffer(base64: string): ArrayBufferLike {\n        const binaryString = window.atob(base64);\n        const len = binaryString.length;\n        const bytes = new Uint8Array(len);\n        for (let i = 0; i < len; i++) {\n            bytes[i] = binaryString.charCodeAt(i);\n        }\n        return bytes.buffer;\n    }\n\n    loadFile(): Promise<{ file: string; mimeType: string }> {\n        return this.props.oContext.socket.readFile(this.objectID, this.state.value, true);\n    }\n\n    play(): void {\n        void this.loadFile().then(data => {\n            if (typeof AudioContext !== 'undefined') {\n                const oContext = new AudioContext();\n                const buf = ConfigFileSelector.base64ToArrayBuffer(data.file);\n                void oContext.decodeAudioData(\n                    buf,\n                    (buffer: AudioBuffer): void => {\n                        const source = oContext.createBufferSource(); // creates a sound source\n                        source.buffer = buffer; // tell the source which sound to play\n                        source.connect(oContext.destination); // connect the source to the oContext's destination (the speakers)\n                        source.start(0);\n                    },\n                    (err: DOMException): void => window.alert(`Cannot play: ${err.message}`),\n                );\n            }\n        });\n    }\n\n    getFileIcon(item: { value: string; label: string; extension?: string }): JSX.Element | null {\n        if (!item?.extension) {\n            return null;\n        }\n        if (IMAGE_EXT.includes(item.extension)) {\n            return (\n                <div\n                    style={{\n                        ...styles.selectedImage,\n                        backgroundImage: `url(${this.imagePrefix}/${this.objectID}/${item.value})`,\n                        backgroundSize: 'contain',\n                        backgroundRepeat: 'no-repeat',\n                    }}\n                />\n            );\n        }\n        if (AUDIO_EXT.includes(item.extension)) {\n            return <IconAudio />;\n        }\n        if (DOC_EXT.includes(item.extension)) {\n            return <IconText />;\n        }\n        if (VIDEO_EXT.includes(item.extension)) {\n            return <IconVideo />;\n        }\n        if (JS_EXT.includes(item.extension)) {\n            return <IconCode />;\n        }\n        return null;\n    }\n\n    renderItem(error: string, disabled: boolean /* , defaultValue */): JSX.Element | null {\n        if (!this.state.files) {\n            return null;\n        }\n        const folders: string[] = [];\n        if (!this.props.schema.withFolder) {\n            this.state.files.forEach(file => {\n                const pos = file.name.lastIndexOf('/');\n                if (pos === -1) {\n                    if (!folders.includes('/')) {\n                        folders.push('/');\n                    }\n                } else {\n                    const folder = file.name.substring(0, pos + 1);\n                    if (!folders.includes(folder)) {\n                        folders.push(folder);\n                    }\n                }\n            });\n        }\n\n        const selectOptions: { value: string; label: string; extension?: string }[] = this.state.files.map(file => ({\n            value: file.name,\n            label:\n                !this.props.schema.withFolder && folders.length === 1\n                    ? `${file.name.substring(folders[0].length)}`\n                    : `${file.name}${this.props.schema.noSize ? '' : `(${file.size})`}`,\n            extension: file.name.toLowerCase().split('.').pop(),\n        }));\n\n        if (!this.props.schema.noNone) {\n            selectOptions.unshift({ label: I18n.t('ra_none'), value: '' });\n        }\n\n        const item: { value: string; label: string; extension?: string } = selectOptions.find(\n            _item => _item.value === this.state.value,\n        );\n\n        let buttons = 0;\n\n        if (this.props.schema.upload) {\n            buttons++;\n        }\n        if (this.props.schema.refresh) {\n            buttons++;\n        }\n        const play =\n            this.state.value &&\n            (this.state.value.endsWith('.mp3') ||\n                this.state.value.endsWith('.ogg') ||\n                this.state.value.endsWith('.wav'));\n        // show play button\n        if (play) {\n            buttons++;\n        }\n\n        const element = (\n            <div style={styles.fullWidth}>\n                <FormControl\n                    variant=\"standard\"\n                    style={{ width: `calc(100% - ${buttons * 42}px)` }}\n                >\n                    {this.props.schema.label ? <InputLabel>{this.getText(this.props.schema.label)}</InputLabel> : null}\n                    <Select\n                        variant=\"standard\"\n                        error={!!error}\n                        disabled={!!disabled}\n                        value={this.state.value || '_'}\n                        renderValue={() => (\n                            <>\n                                {this.getFileIcon(item)}\n                                <span>{item?.label || ''}</span>\n                            </>\n                        )}\n                        onChange={e => {\n                            this.setState({ value: e.target.value === '_' ? '' : e.target.value }, () =>\n                                this.onChange(this.props.attr, this.state.value),\n                            );\n                        }}\n                    >\n                        {selectOptions.map(it => (\n                            <MenuItem\n                                key={it.value}\n                                value={it.value}\n                            >\n                                <ListItemIcon>{this.getFileIcon(it)}</ListItemIcon>\n                                <ListItemText>{it.label}</ListItemText>\n                                {this.props.schema.delete && item.value ? (\n                                    <IconButton\n                                        style={styles.deleteButton}\n                                        size=\"small\"\n                                        onClick={() => this.setState({ deleteFile: item.value })}\n                                    >\n                                        <IconDelete />\n                                    </IconButton>\n                                ) : null}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                    {this.props.schema.help ? (\n                        <FormHelperText>\n                            {this.renderHelp(\n                                this.props.schema.help,\n                                this.props.schema.helpLink,\n                                this.props.schema.noTranslation,\n                            )}\n                        </FormHelperText>\n                    ) : null}\n                </FormControl>\n                {this.props.schema.refresh && (\n                    <IconButton onClick={() => this.updateFiles()}>\n                        <IconRefresh />\n                    </IconButton>\n                )}\n                {this.props.schema.upload && (\n                    <IconButton onClick={() => this.dropzoneRef.current?.open()}>\n                        <IconUpload />\n                    </IconButton>\n                )}\n                {play && (\n                    <IconButton\n                        style={{ color: '#00FF00' }}\n                        onClick={() => this.play()}\n                    >\n                        <IconPlay />\n                    </IconButton>\n                )}\n            </div>\n        );\n\n        if (!this.props.schema.upload) {\n            return (\n                <>\n                    {element}\n                    {this.renderDeleteDialog()}\n                </>\n            );\n        }\n        let accept: Record<string, string[]> = { '*/*': [] };\n        if (this.props.schema.fileTypes === 'image') {\n            accept = {\n                'image/*': ['.png', '.jpg', '.svg', '.gif', '.apng', '.avif', '.webp'],\n            };\n        } else if (this.props.schema.fileTypes === 'audio') {\n            accept = {\n                'audio/*': ['.mp3', '.ogg', '.wav', '.mp4'],\n            };\n        } else if (this.props.schema.fileTypes === 'text') {\n            accept = {\n                'text/plain': ['.txt'],\n            };\n        }\n        if (this.props.schema.pattern) {\n            const last = this.props.schema.pattern.split('/').pop().toLowerCase().replace(/.*\\./, '');\n            if (\n                last === 'png' ||\n                last === 'jpg' ||\n                last === 'svg' ||\n                last === 'gif' ||\n                last === 'apng' ||\n                last === 'avif' ||\n                last === 'webp'\n            ) {\n                accept = {\n                    'image/*': ['.png', '.jpg', '.svg', '.gif', '.apng', '.avif', '.webp'],\n                };\n            } else if (last === 'mp3' || last === 'ogg' || last === 'wav') {\n                accept = {\n                    'audio/*': ['.mp3', '.ogg', '.wav', '.mp4'],\n                };\n            } else if (last === 'ics') {\n                accept = {\n                    'text/calendar': ['.ics'],\n                };\n            } else if (last === 'txt') {\n                accept = {\n                    'text/plain': ['.txt'],\n                };\n            } else if (last === 'pem') {\n                accept = {\n                    'text/plain': ['.pem'],\n                };\n            } else {\n                accept = {\n                    '*/*': [`.${last}`],\n                };\n            }\n        }\n\n        return (\n            <Dropzone\n                ref={this.dropzoneRef}\n                multiple={false}\n                accept={accept}\n                noKeyboard\n                noClick\n                maxSize={this.props.schema.maxSize || 2 * 1024 * 1024}\n                onDragEnter={() => {\n                    this.setState({ uploadFile: 'dragging' });\n                }}\n                onDragLeave={() => this.setState({ uploadFile: true })}\n                onDrop={(acceptedFiles, errors) => {\n                    this.setState({ uploadFile: false });\n                    if (!acceptedFiles.length) {\n                        window.alert(\n                            (errors &&\n                                errors[0] &&\n                                errors[0].errors &&\n                                errors[0].errors[0] &&\n                                errors[0].errors[0].message) ||\n                                I18n.t('Cannot upload'),\n                        );\n                    } else {\n                        this.onDrop(acceptedFiles);\n                    }\n                }}\n            >\n                {({ getRootProps, getInputProps }) => (\n                    <div\n                        style={{\n                            ...styles.uploadDiv,\n                            ...(this.state.uploadFile === 'dragging' ? styles.uploadDivDragging : undefined),\n                            ...(disabled ? styles.disabledOpacity : undefined),\n                        }}\n                        {...getRootProps()}\n                    >\n                        <input {...getInputProps()} />\n                        {this.state.uploadFile === 'dragging' ? (\n                            <div\n                                style={{\n                                    ...styles.uploadCenterDiv,\n                                    ...(this.state.uploadError ? styles.error : undefined),\n                                }}\n                            >\n                                <div style={styles.uploadCenterTextAndIcon}>\n                                    <UploadIcon style={styles.uploadCenterIcon} />\n                                    <div style={styles.uploadCenterText}>\n                                        {this.state.uploadFile === 'dragging'\n                                            ? I18n.t('ra_Drop file here')\n                                            : I18n.t(\n                                                  'ra_Place your files here or click here to open the browse dialog',\n                                              )}\n                                    </div>\n                                </div>\n                            </div>\n                        ) : null}\n                        {element}\n                        {this.renderDeleteDialog()}\n                    </div>\n                )}\n            </Dropzone>\n        );\n    }\n}\n\nexport default ConfigFileSelector;\n","import React, { type JSX } from 'react';\n\nimport { Button, TextField, IconButton } from '@mui/material';\n\nimport {\n    Article as IconText,\n    Code as IconCode,\n    PlayArrow as IconPlay,\n    Videocam as IconVideo,\n} from '@mui/icons-material';\n\nimport { DialogSelectFile } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemFile } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\nimport ConfigFileSelector from './ConfigFileSelector';\n\nconst styles: Record<string, React.CSSProperties> = {\n    fullWidth: {\n        width: '100%',\n    },\n    fullWidthOneButton: {\n        width: 'calc(100% - 69px)',\n        marginRight: 4,\n    },\n    fullWidthIcon: {\n        width: 'calc(100% - 119px)',\n        marginRight: 4,\n    },\n    selectedImage: {\n        height: 40,\n        width: 40,\n        display: 'inline-block',\n        marginRight: 8,\n    },\n};\n\nconst IMAGE_EXT = ['jpg', 'jpeg', 'svg', 'png', 'webp', 'gif', 'apng', 'avif', 'webp'];\nconst AUDIO_EXT = ['mp3', 'ogg', 'wav', 'aac'];\nconst VIDEO_EXT = ['avi', 'mp4', 'mov'];\nconst DOC_EXT = ['txt', 'log', 'html', 'htm'];\nconst JS_EXT = ['json', 'js', 'ts'];\n\ninterface ConfigFileProps extends ConfigGenericProps {\n    schema: ConfigItemFile;\n}\n\ninterface ConfigFileState extends ConfigGenericState {\n    showFileBrowser?: boolean;\n}\n\nclass ConfigFile extends ConfigGeneric<ConfigFileProps, ConfigFileState> {\n    private imagePrefix = '../..';\n\n    componentDidMount(): void {\n        super.componentDidMount();\n        const value = ConfigGeneric.getValue(this.props.data, this.props.attr);\n        this.imagePrefix = this.props.oContext.imagePrefix === undefined ? './files' : this.props.oContext.imagePrefix;\n        this.setState({ value: value ?? '' });\n    }\n\n    static getDerivedStateFromProps(props: ConfigFileProps, state: ConfigFileState): Partial<ConfigFileState> | null {\n        const value = ConfigGeneric.getValue(props.data, props.attr);\n        if (\n            value === null ||\n            value === undefined ||\n            value.toString().trim() !== (state.value || '').toString().trim()\n        ) {\n            return { value: value ?? '' };\n        }\n        return null;\n    }\n\n    loadFile(): Promise<{ file: string; mimeType: string } | null> {\n        const pos = this.state.value.indexOf('/');\n        if (pos !== -1) {\n            const adapter = this.state.value.substring(0, pos);\n            const path = this.state.value.substring(pos + 1);\n            return this.props.oContext.socket.readFile(adapter, path, true);\n        }\n\n        return Promise.resolve(null);\n    }\n\n    play(): void {\n        void this.loadFile().then(data => {\n            if (typeof AudioContext !== 'undefined' && data?.file) {\n                const oContext = new AudioContext();\n                const buf = ConfigFileSelector.base64ToArrayBuffer(data.file);\n                void oContext.decodeAudioData(\n                    buf,\n                    (buffer: AudioBuffer): void => {\n                        const source = oContext.createBufferSource(); // creates a sound source\n                        source.buffer = buffer; // tell the source which sounds to play\n                        source.connect(oContext.destination); // connect the source to the oContext's destination (the speakers)\n                        source.start(0);\n                    },\n                    (err: DOMException): void => window.alert(`Cannot play: ${err.message}`),\n                );\n            }\n        });\n    }\n\n    getIcon(): JSX.Element | null {\n        const extension = this.state.value.split('.').pop().toLowerCase();\n        if (IMAGE_EXT.includes(extension)) {\n            return (\n                <div\n                    style={{\n                        ...styles.selectedImage,\n                        backgroundImage: `url(${this.imagePrefix}/${this.state.value})`,\n                        backgroundSize: 'contain',\n                        backgroundRepeat: 'no-repeat',\n                    }}\n                />\n            );\n        }\n        if (AUDIO_EXT.includes(extension)) {\n            return (\n                <IconButton\n                    style={{ color: '#00FF00' }}\n                    onClick={() => this.play()}\n                >\n                    <IconPlay />\n                </IconButton>\n            );\n        }\n        if (DOC_EXT.includes(extension)) {\n            return <IconText />;\n        }\n        if (VIDEO_EXT.includes(extension)) {\n            return <IconVideo />;\n        }\n        if (JS_EXT.includes(extension)) {\n            return <IconCode />;\n        }\n        return null;\n    }\n\n    renderFileBrowser(): JSX.Element | null {\n        if (!this.state.showFileBrowser) {\n            return null;\n        }\n        return (\n            <DialogSelectFile\n                imagePrefix={this.props.oContext.imagePrefix}\n                socket={this.props.oContext.socket}\n                selected={this.state.value}\n                onClose={() => this.setState({ showFileBrowser: false })}\n                onOk={_value => {\n                    const value = Array.isArray(_value) ? _value[0] : _value;\n                    this.setState({ value }, () =>\n                        this.onChange(this.props.attr, this.props.schema.trim === false ? value : (value || '').trim()),\n                    );\n                }}\n                selectOnlyFolders={this.props.schema.selectOnlyFolders}\n                allowUpload={this.props.schema.allowUpload}\n                allowDownload={this.props.schema.allowDownload}\n                allowCreateFolder={this.props.schema.allowCreateFolder}\n                allowView={this.props.schema.allowView}\n                showToolbar={this.props.schema.showToolbar}\n                limitPath={this.props.schema.limitPath}\n                theme={this.props.oContext.theme}\n            />\n        );\n    }\n\n    renderItem(error: string, disabled: boolean /* , defaultValue */): JSX.Element {\n        const icon = this.getIcon();\n\n        return (\n            <div style={styles.fullWidth}>\n                {icon}\n                <TextField\n                    variant=\"standard\"\n                    style={icon ? styles.fullWidthIcon : styles.fullWidthOneButton}\n                    value={this.state.value === null || this.state.value === undefined ? '' : this.state.value}\n                    error={!!error}\n                    disabled={!!disabled}\n                    slotProps={{\n                        htmlInput: {\n                            maxLength: this.props.schema.maxLength || this.props.schema.max || undefined,\n                            readOnly: !!this.props.schema.disableEdit,\n                        },\n                    }}\n                    onChange={e => {\n                        const value = e.target.value;\n                        this.setState({ value }, () =>\n                            this.onChange(\n                                this.props.attr,\n                                this.props.schema.trim === false ? value : (value || '').trim(),\n                            ),\n                        );\n                    }}\n                    placeholder={this.getText(this.props.schema.placeholder)}\n                    label={this.getText(this.props.schema.label)}\n                    helperText={this.renderHelp(\n                        this.props.schema.help,\n                        this.props.schema.helpLink,\n                        this.props.schema.noTranslation,\n                    )}\n                />\n                <Button\n                    disabled={disabled}\n                    variant=\"outlined\"\n                    onClick={() => this.setState({ showFileBrowser: true })}\n                >\n                    ...\n                </Button>\n                {this.renderFileBrowser()}\n            </div>\n        );\n    }\n}\n\nexport default ConfigFile;\n","import React, { type JSX } from 'react';\n\nimport { InputLabel, MenuItem, FormHelperText, FormControl, Select } from '@mui/material';\n\nimport { TextWithIcon, I18n } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemFunc } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\ninterface ConfigFuncProps extends ConfigGenericProps {\n    schema: ConfigItemFunc;\n}\n\ninterface ConfigFuncState extends ConfigGenericState {\n    selectOptions?: { value: string; label: string; obj?: ioBroker.EnumObject }[];\n}\n\nclass ConfigFunc extends ConfigGeneric<ConfigFuncProps, ConfigFuncState> {\n    componentDidMount(): void {\n        super.componentDidMount();\n        const value = ConfigGeneric.getValue(this.props.data, this.props.attr);\n\n        void this.props.oContext.socket.getEnums('functions').then(enums => {\n            const selectOptions: { value: string; label: string }[] = Object.keys(enums).map(id => ({\n                value: this.props.schema.short ? id.replace('enum.functions.', '') : id,\n                label: this.getText(enums[id].common.name),\n                obj: enums[id],\n            }));\n\n            if (this.props.schema.allowDeactivate !== false) {\n                selectOptions.unshift({ label: I18n.t(ConfigGeneric.NONE_LABEL), value: ConfigGeneric.NONE_VALUE });\n            }\n\n            this.setState({ value, selectOptions });\n        });\n    }\n\n    renderItem(error: string, disabled: boolean /* , defaultValue */): JSX.Element | null {\n        if (!this.state.selectOptions) {\n            return null;\n        }\n\n        const item = this.state.selectOptions.find(it => it.value === this.state.value);\n\n        return (\n            <FormControl\n                variant=\"standard\"\n                fullWidth\n            >\n                {this.props.schema.label ? <InputLabel>{this.getText(this.props.schema.label)}</InputLabel> : null}\n                <Select\n                    variant=\"standard\"\n                    error={!!error}\n                    disabled={!!disabled}\n                    value={this.state.value || '_'}\n                    renderValue={() =>\n                        item ? (\n                            item.obj ? (\n                                <TextWithIcon\n                                    value={item.obj}\n                                    themeType={this.props.oContext.themeType}\n                                    lang={I18n.getLanguage()}\n                                />\n                            ) : (\n                                item.label\n                            )\n                        ) : (\n                            ''\n                        )\n                    }\n                    onChange={e => {\n                        this.setState({ value: e.target.value === '_' ? '' : e.target.value }, () =>\n                            this.onChange(this.props.attr, this.state.value),\n                        );\n                    }}\n                >\n                    {this.state.selectOptions.map(it => (\n                        <MenuItem\n                            key={it.value}\n                            value={it.value}\n                            style={it.value === ConfigGeneric.DIFFERENT_VALUE ? { opacity: 0.5 } : {}}\n                        >\n                            {it.obj ? (\n                                <TextWithIcon\n                                    value={it.obj}\n                                    themeType={this.props.oContext.themeType}\n                                    lang={I18n.getLanguage()}\n                                />\n                            ) : (\n                                it.label\n                            )}\n                        </MenuItem>\n                    ))}\n                </Select>\n                {this.props.schema.help ? (\n                    <FormHelperText>\n                        {this.renderHelp(\n                            this.props.schema.help,\n                            this.props.schema.helpLink,\n                            this.props.schema.noTranslation,\n                        )}\n                    </FormHelperText>\n                ) : null}\n            </FormControl>\n        );\n    }\n}\n\nexport default ConfigFunc;\n","import React, { type JSX } from 'react';\n\nimport { InputLabel, TextField, FormHelperText, MenuItem, FormControl, Select } from '@mui/material';\n\nimport { I18n } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemIP } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\ninterface ConfigIPProps extends ConfigGenericProps {\n    schema: ConfigItemIP;\n}\n\ninterface ConfigIPState extends ConfigGenericState {\n    ips?: { name: string; address: string; family: string; internal?: boolean }[];\n}\n\nclass ConfigIP extends ConfigGeneric<ConfigIPProps, ConfigIPState> {\n    componentDidMount(): void {\n        super.componentDidMount();\n        this.props.oContext.socket\n            .getHostByIp(this.props.common.host)\n            .then(ips => {\n                // [{name, address, family}]\n                if (!this.props.schema.listenOnAllPorts) {\n                    ips = ips.filter(item => item.address !== '0.0.0.0' && item.address !== '::');\n                }\n                if (this.props.schema.onlyIp4) {\n                    ips = ips.filter(item => item.family === 'ipv4');\n                } else if (this.props.schema.onlyIp6) {\n                    ips = ips.filter(item => item.family === 'ipv6');\n                }\n                if (this.props.schema.noInternal) {\n                    ips = ips.filter(item => !item.internal);\n                }\n                ips.forEach(item => {\n                    if (item.address === '0.0.0.0') {\n                        item.name = `[IPv4] 0.0.0.0 - ${I18n.t('ra_Listen on all IPs')}`;\n                    } else if (item.address === '::') {\n                        item.name = `[IPv6] :: - ${I18n.t('ra_Listen on all IPs')}`;\n                    }\n                });\n                this.setState({ ips });\n            })\n            .catch(e => console.error(e));\n    }\n\n    renderItem(error: string, disabled: boolean /* , defaultValue */): JSX.Element {\n        const value = ConfigGeneric.getValue(this.props.data, this.props.attr);\n        const item = this.state.ips?.find(it => it.address === value);\n\n        return (\n            <FormControl\n                fullWidth\n                variant=\"standard\"\n            >\n                {this.state.ips && this.props.schema.label ? (\n                    <InputLabel>{this.getText(this.props.schema.label)}</InputLabel>\n                ) : null}\n                {!this.state.ips ? (\n                    <TextField\n                        fullWidth\n                        variant=\"standard\"\n                        error={!!error}\n                        disabled={!!disabled}\n                        value={value}\n                        onChange={e => this.onChange(this.props.attr, e.target.value)}\n                        label={this.getText(this.props.schema.label)}\n                    />\n                ) : (\n                    <Select\n                        variant=\"standard\"\n                        error={!!error}\n                        disabled={!!disabled}\n                        value={value}\n                        renderValue={val => item?.name || val}\n                        onChange={e => this.onChange(this.props.attr, e.target.value)}\n                    >\n                        {this.state.ips?.map((it, i) => (\n                            <MenuItem\n                                key={i}\n                                value={it.address}\n                            >\n                                {it.name}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                )}\n                {this.props.schema.help ? (\n                    <FormHelperText>\n                        {this.renderHelp(\n                            this.props.schema.help,\n                            this.props.schema.helpLink,\n                            this.props.schema.noTranslation,\n                        )}\n                    </FormHelperText>\n                ) : null}\n            </FormControl>\n        );\n    }\n}\n\nexport default ConfigIP;\n","import React, { type JSX } from 'react';\n\nimport type { ConfigItemImageSendTo } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\ninterface ConfigImageSendToProps extends ConfigGenericProps {\n    schema: ConfigItemImageSendTo;\n}\n\ninterface ConfigImageSendToState extends ConfigGenericState {\n    image?: string;\n}\n\nclass ConfigImageSendTo extends ConfigGeneric<ConfigImageSendToProps, ConfigImageSendToState> {\n    private initialized = false;\n\n    private localContext: string | undefined;\n\n    componentDidMount(): void {\n        super.componentDidMount();\n\n        this.askInstance();\n    }\n\n    askInstance(): void {\n        if (this.props.alive) {\n            let data = this.props.schema.data;\n            if (data === undefined && this.props.schema.jsonData) {\n                const dataStr: string = this.getPattern(this.props.schema.jsonData, null, true);\n                if (dataStr) {\n                    try {\n                        data = JSON.parse(dataStr);\n                    } catch {\n                        console.error(`Cannot parse json data: ${JSON.stringify(data)}`);\n                    }\n                }\n            }\n\n            if (data === undefined) {\n                data = null;\n            }\n\n            void this.props.oContext.socket\n                .sendTo(\n                    `${this.props.oContext.adapterName}.${this.props.oContext.instance}`,\n                    this.props.schema.command || 'send',\n                    data,\n                )\n                .then(image => this.setState({ image: image || '' }));\n        }\n    }\n\n    getContext(): string {\n        const localContext: Record<string, any> = {};\n\n        if (Array.isArray(this.props.schema.alsoDependsOn)) {\n            this.props.schema.alsoDependsOn.forEach(\n                attr => (localContext[attr] = ConfigGeneric.getValue(this.props.data, attr)),\n            );\n        }\n\n        return JSON.stringify(localContext);\n    }\n\n    renderItem(/* error, disabled, defaultValue */): JSX.Element {\n        if (this.props.alive) {\n            const localContext = this.getContext();\n            if (localContext !== this.localContext || !this.initialized) {\n                this.localContext = localContext;\n                setTimeout(() => this.askInstance(), this.initialized ? 300 : 50);\n                this.initialized = true;\n            }\n        }\n\n        if (this.state.image === undefined) {\n            return null;\n        }\n\n        return (\n            <img\n                alt=\"dynamic content\"\n                src={this.state.image}\n                style={{ width: this.props.schema.width || '100%', height: this.props.schema.height }}\n            />\n        );\n    }\n}\n\nexport default ConfigImageSendTo;\n","import React, { type JSX } from 'react';\n\nimport { InputLabel, FormHelperText, FormControl } from '@mui/material';\n\nimport { UploadImage } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemImageUpload } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\ninterface ConfigImageUploadProps extends ConfigGenericProps {\n    schema: ConfigItemImageUpload;\n}\n\ninterface ConfigImageUploadState extends ConfigGenericState {\n    image?: string;\n    oContext?: string;\n}\n\nclass ConfigImageUpload extends ConfigGeneric<ConfigImageUploadProps, ConfigImageUploadState> {\n    private index: number;\n\n    constructor(props: ConfigImageUploadProps) {\n        super(props);\n        this.index = Date.now();\n    }\n\n    componentDidMount(): void {\n        super.componentDidMount();\n\n        if (this.props.schema.base64) {\n            const value = ConfigGeneric.getValue(this.props.data, this.props.attr);\n            this.setState({ value });\n        } else {\n            void this.props.oContext.socket\n                .fileExists(`${this.props.oContext.adapterName}.${this.props.oContext.instance}`, this.props.attr)\n                .then(exist => exist && this.loadImage());\n        }\n    }\n\n    _getUrl(update?: boolean): string {\n        if (update) {\n            this.index = Date.now();\n        }\n        let url = `files/${this.props.oContext.adapterName}.${this.props.oContext.instance}/${this.props.attr}?t=${this.index}`;\n        if (window.location.port === '3000') {\n            url = `${window.location.protocol}//${window.location.hostname}:8081/${url}`;\n        }\n\n        return url;\n    }\n\n    loadImage(): void {\n        void fetch(this._getUrl())\n            .then(res => res.blob())\n            .then(blob => {\n                const reader = new FileReader();\n                reader.onload = () => {\n                    this.setState({ value: reader.result });\n                };\n                reader.readAsDataURL(blob);\n            })\n            .catch(e => console.error(e));\n    }\n\n    renderItem(error: string, disabled: boolean /* , defaultValue */): JSX.Element {\n        return (\n            <FormControl\n                fullWidth\n                variant=\"standard\"\n            >\n                {this.props.schema.label ? (\n                    <InputLabel shrink>{this.getText(this.props.schema.label)}</InputLabel>\n                ) : null}\n                <UploadImage\n                    error={!!error}\n                    disabled={disabled}\n                    accept={this.props.schema.accept}\n                    crop={this.props.schema.crop}\n                    maxSize={this.props.schema.maxSize || 256 * 1024}\n                    icon={this.state.value || undefined}\n                    removeIconFunc={() =>\n                        this.setState({ value: null }, () => {\n                            if (this.props.schema.base64) {\n                                const mayBePromise = this.onChange(this.props.attr, this.state.value);\n                                if (mayBePromise instanceof Promise) {\n                                    void mayBePromise.catch(e => console.error(`Cannot set value: ${e}`));\n                                }\n                            } else {\n                                // delete file to /instance/attr\n                                void this.props.oContext.socket\n                                    .deleteFile(`${this.props.oContext.adapterName}.${this.props.oContext.instance}`, this.props.attr)\n                                    .catch(e => console.error(e));\n                            }\n                        })\n                    }\n                    onChange={base64 =>\n                        this.setState({ value: base64 }, () => {\n                            if (this.props.schema.base64) {\n                                const mayBePromise = this.onChange(this.props.attr, this.state.value);\n                                if (mayBePromise instanceof Promise) {\n                                    void mayBePromise.catch(e => console.error(`Cannot set value: ${e}`));\n                                }\n                            } else if (base64.startsWith('data')) {\n                                base64 = base64.split(',')[1];\n                            }\n                            // upload file to /instance/attr\n                            this.props.oContext.socket\n                                .writeFile64(\n                                    `${this.props.oContext.adapterName}.${this.props.oContext.instance}`,\n                                    this.props.attr,\n                                    base64,\n                                )\n                                .catch(e => console.error(e));\n                        })\n                    }\n                />\n                {this.props.schema.help ? (\n                    <FormHelperText>\n                        {this.renderHelp(\n                            this.props.schema.help,\n                            this.props.schema.helpLink,\n                            this.props.schema.noTranslation,\n                        )}\n                    </FormHelperText>\n                ) : null}\n            </FormControl>\n        );\n    }\n}\n\nexport default ConfigImageUpload;\n","import React, { type JSX } from 'react';\n\nimport { InputLabel, MenuItem, FormHelperText, FormControl, Select } from '@mui/material';\n\nimport { I18n } from '@iobroker/adapter-react-v5';\nimport type { ConfigItemInstanceSelect } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\nconst styles: Record<string, React.CSSProperties> = {\n    icon: {\n        width: 20,\n        height: 20,\n        marginRight: 4,\n    },\n};\n\ninterface ConfigInstanceSelectProps extends ConfigGenericProps {\n    schema: ConfigItemInstanceSelect;\n}\n\ninterface ConfigInstanceSelectState extends ConfigGenericState {\n    selectOptions?: { label: string; value: string; icon?: string }[];\n}\n\nclass ConfigInstanceSelect extends ConfigGeneric<ConfigInstanceSelectProps, ConfigInstanceSelectState> {\n    componentDidMount(): void {\n        super.componentDidMount();\n        const value = ConfigGeneric.getValue(this.props.data, this.props.attr);\n\n        let adapter = this.props.schema.adapter;\n        if (adapter === '_dataSources') {\n            adapter = undefined;\n        }\n\n        void this.props.oContext.socket\n            .getAdapterInstances(adapter, true)\n            .then(async instances => {\n                if (this.props.schema.adapter === '_dataSources') {\n                    // get only \"data-sources\", like history, sql, influx\n                    instances = instances.filter(instance => instance?.common?.getHistory);\n                } else if (this.props.schema.adapter) {\n                    instances = instances.filter(instance =>\n                        instance?._id.startsWith(`system.adapter.${this.props.schema.adapter}.`),\n                    );\n                } else if (this.props.schema.adapters && Array.isArray(this.props.schema.adapters)) {\n                    instances = instances.filter(instance =>\n                        this.props.schema.adapters.includes(instance?.common?.name),\n                    );\n                }\n\n                if (this.props.schema.onlyEnabled) {\n                    instances = instances.filter(instance => instance?.common?.enabled);\n                }\n\n                const selectOptions: { label: string; value: string; icon?: string }[] = instances.map(instance => ({\n                    value: this.props.schema.long\n                        ? instance._id\n                        : this.props.schema.short\n                          ? instance._id.split('.').pop()\n                          : instance._id.replace(/^system\\.adapter\\./, ''),\n                    label: `${instance.common.name} [${instance._id.replace(/^system\\.adapter\\./, '')}]`,\n                    icon: `adapter/${instance.common.name}/${instance.common.icon}`,\n                }));\n\n                selectOptions.sort((a, b) => {\n                    if (a.value > b.value) {\n                        return 1;\n                    }\n                    if (a.value < b.value) {\n                        return -1;\n                    }\n                    return 0;\n                });\n\n                if (this.props.schema.allowDeactivate !== false) {\n                    selectOptions.unshift({ label: I18n.t(ConfigGeneric.NONE_LABEL), value: ConfigGeneric.NONE_VALUE });\n                }\n                if (this.props.schema.all) {\n                    selectOptions.unshift({ label: I18n.t('sch_all'), value: '*' });\n                }\n\n                this.setState({ value: value || '', selectOptions });\n\n                await this.props.oContext.socket.subscribeObject(\n                    `system.adapter.${adapter ? `${adapter}.` : ''}*`,\n                    this.onInstancesUpdate,\n                );\n            })\n            .catch(e => console.error(`Cannot get instances: ${e}`));\n    }\n\n    componentWillUnmount(): void {\n        void this.props.oContext.socket.unsubscribeObject('system.adapter.*', this.onInstancesUpdate).then(() => {});\n        super.componentWillUnmount();\n    }\n\n    onInstancesUpdate = (id: string, obj?: ioBroker.Object | null): void => {\n        if (!id.match(/^system\\.adapter\\.[-_a-z\\d]+\\.\\d+$/)) {\n            return;\n        }\n        const _id = this.props.schema.long\n            ? id\n            : this.props.schema.short\n              ? id.split('.').pop()\n              : id.replace(/^system\\.adapter\\./, '');\n        const index = this.state.selectOptions.findIndex(item => item.value === _id);\n        if (!obj) {\n            // deleted\n            if (index !== -1) {\n                const selectOptions: { label: string; value: string; icon?: string }[] = JSON.parse(\n                    JSON.stringify(this.state.selectOptions),\n                );\n\n                const newState: Partial<ConfigInstanceSelectState> = {};\n                if (this.state.value === selectOptions[index].value) {\n                    newState.value = ConfigGeneric.NONE_VALUE;\n                }\n                selectOptions.splice(index, 1);\n                newState.selectOptions = selectOptions;\n\n                this.setState(newState as ConfigInstanceSelectState);\n            }\n        } else {\n            if (this.props.schema.adapter === '_dataSources' && (!obj.common || !obj.common.getHistory)) {\n                return;\n            }\n\n            if (index === -1) {\n                const selectOptions: { label: string; value: string; icon?: string }[] = JSON.parse(\n                    JSON.stringify(this.state.selectOptions),\n                );\n                const name =\n                    typeof obj.common.name === 'object'\n                        ? obj.common.name[I18n.getLanguage()] || obj.common.name.en\n                        : obj.common.name;\n                selectOptions.push({\n                    value: this.props.schema.long\n                        ? obj._id\n                        : this.props.schema.short\n                          ? obj._id.split('.').pop()\n                          : obj._id.replace(/^system\\.adapter\\./, ''),\n                    label: `${name} [${obj._id.replace(/^system\\.adapter\\./, '')}]`,\n                    icon: `adapter/${name}/${obj.common.icon}`,\n                });\n                selectOptions.sort((a, b) => (a.label > b.label ? 1 : a.label < b.label ? -1 : 0));\n                this.setState({ selectOptions });\n            }\n        }\n    };\n\n    renderItem(error: string, disabled: boolean /* , defaultValue */): JSX.Element {\n        if (!this.state.selectOptions) {\n            return null;\n        }\n\n        const item = this.state.selectOptions?.find(it => it.value === this.state.value);\n\n        return (\n            <FormControl\n                fullWidth\n                key={this.props.attr}\n                variant=\"standard\"\n            >\n                {this.props.schema.label ? (\n                    <InputLabel shrink>{this.getText(this.props.schema.label)}</InputLabel>\n                ) : null}\n                <Select\n                    variant=\"standard\"\n                    error={!!error}\n                    displayEmpty\n                    disabled={!!disabled}\n                    value={this.state.value}\n                    renderValue={() => (\n                        <span style={{ display: 'flex' }}>\n                            {item?.icon ? (\n                                <img\n                                    src={`./${item.icon}`}\n                                    alt={item.value}\n                                    style={styles.icon}\n                                />\n                            ) : null}\n                            {this.getText(item?.label, true)}\n                        </span>\n                    )}\n                    onChange={e =>\n                        this.setState({ value: e.target.value }, () => this.onChange(this.props.attr, this.state.value))\n                    }\n                >\n                    {this.state.selectOptions.map(it => (\n                        <MenuItem\n                            key={it.value}\n                            value={it.value}\n                            style={it.value === ConfigGeneric.NONE_VALUE ? { opacity: 0.5 } : {}}\n                        >\n                            {it.icon ? (\n                                <img\n                                    src={`./${it.icon}`}\n                                    alt={it.value}\n                                    style={styles.icon}\n                                />\n                            ) : null}\n                            {this.getText(it.label, true)}\n                        </MenuItem>\n                    ))}\n                </Select>\n                {this.props.schema.help ? (\n                    <FormHelperText>\n                        {this.renderHelp(\n                            this.props.schema.help,\n                            this.props.schema.helpLink,\n                            this.props.schema.noTranslation,\n                        )}\n                    </FormHelperText>\n                ) : null}\n            </FormControl>\n        );\n    }\n}\n\nexport default ConfigInstanceSelect;\n","import React, { type JSX } from 'react';\n\nimport { InputLabel, TextField, FormHelperText, MenuItem, FormControl, Select } from '@mui/material';\n\nimport type { ConfigItemInterface } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\ninterface NetworkInterfaceBase {\n    address: string;\n    netmask: string;\n    mac: string;\n    internal: boolean;\n    cidr: string | null;\n}\ninterface NetworkInterfaceInfoIPv4 extends NetworkInterfaceBase {\n    family: 'IPv4';\n    scopeid?: undefined;\n}\ninterface NetworkInterfaceInfoIPv6 extends NetworkInterfaceBase {\n    family: 'IPv6';\n    scopeid: number;\n}\ntype NetworkInterfaceInfo = NetworkInterfaceInfoIPv4 | NetworkInterfaceInfoIPv6;\n\nconst styles: Record<string, React.CSSProperties> = {\n    address: {\n        fontSize: 'smaller',\n        opacity: 0.5,\n        marginLeft: 8,\n    },\n};\n\ninterface ConfigInterfaceProps extends ConfigGenericProps {\n    schema: ConfigItemInterface;\n}\n\ninterface ConfigInterfaceState extends ConfigGenericState {\n    interfaces?: { value: string; address: string }[];\n}\n\nclass ConfigInterface extends ConfigGeneric<ConfigInterfaceProps, ConfigInterfaceState> {\n    componentDidMount(): void {\n        super.componentDidMount();\n        this.props.oContext.socket\n            .getObject(`system.host.${this.props.common.host}`)\n            .then(obj => {\n                const interfaces: { value: string; address: string }[] = [];\n                if (obj?.native?.hardware?.networkInterfaces) {\n                    const list = obj.native.hardware.networkInterfaces;\n                    Object.keys(list).forEach(inter => {\n                        if (this.props.schema.ignoreInternal && !list[inter].find(_ip => !_ip.internal)) {\n                            return;\n                        }\n                        if (\n                            this.props.schema.ignoreLoopback &&\n                            list[inter].find(_ip => _ip.address === '127.0.0.1' || _ip.address === '::1')\n                        ) {\n                            return;\n                        }\n\n                        // find ipv4 address\n                        let ip: NetworkInterfaceInfo = list[inter].find(_ip => _ip.family === 'IPv4');\n                        ip = ip || list[inter].find(_ip => _ip.family === 'IPv6');\n                        interfaces.push({ value: inter, address: ip.address });\n                    });\n                }\n\n                this.setState({ interfaces });\n            })\n            .catch(e => window.alert(`Cannot read interfaces: ${e}`));\n    }\n\n    renderItem(error: string, disabled: boolean /* , defaultValue */): JSX.Element {\n        const value = ConfigGeneric.getValue(this.props.data, this.props.attr);\n        const item = this.state.interfaces?.find(it => it.value === value);\n\n        return (\n            <FormControl\n                fullWidth\n                variant=\"standard\"\n            >\n                {this.state.interfaces?.length && this.props.schema.label ? (\n                    <InputLabel>{this.getText(this.props.schema.label)}</InputLabel>\n                ) : null}\n                {!this.state.interfaces?.length ? (\n                    <TextField\n                        fullWidth\n                        variant=\"standard\"\n                        error={!!error}\n                        disabled={!!disabled}\n                        value={value}\n                        onChange={e => this.onChange(this.props.attr, e.target.value)}\n                        label={this.getText(this.props.schema.label)}\n                    />\n                ) : (\n                    <Select\n                        variant=\"standard\"\n                        error={!!error}\n                        disabled={!!disabled}\n                        value={value}\n                        renderValue={val => {\n                            if (item) {\n                                return (\n                                    <span>\n                                        {item.value}\n                                        <span style={styles.address}>{item.address}</span>\n                                    </span>\n                                );\n                            }\n                            return val;\n                        }}\n                        onChange={e => this.onChange(this.props.attr, e.target.value)}\n                    >\n                        {this.state.interfaces.map((it, i) => (\n                            <MenuItem\n                                key={i}\n                                value={it.value}\n                            >\n                                <span>\n                                    {it.value}\n                                    <span style={styles.address}>{it.address}</span>\n                                </span>\n                            </MenuItem>\n                        ))}\n                    </Select>\n                )}\n                {this.props.schema.help ? (\n                    <FormHelperText>\n                        {this.renderHelp(\n                            this.props.schema.help,\n                            this.props.schema.helpLink,\n                            this.props.schema.noTranslation,\n                        )}\n                    </FormHelperText>\n                ) : null}\n            </FormControl>\n        );\n    }\n}\n\nexport default ConfigInterface;\n","import React, { type JSX, useEffect, useState } from 'react';\n\nimport { Dialog, DialogActions, DialogContent, DialogTitle, IconButton, TextField, Button } from '@mui/material';\n\nimport { Check as CheckIcon, Close as CloseIcon, Language as LanguageIcon } from '@mui/icons-material';\n\nimport { I18n } from '@iobroker/adapter-react-v5';\n\nconst styles: Record<string, React.CSSProperties> = {\n    modalDialog: {\n        minWidth: 400,\n        maxWidth: 800,\n    },\n    overflowHidden: {\n        display: 'flex',\n        overflow: 'hidden',\n    },\n    titleIcon: {\n        marginRight: 5,\n    },\n    content: {\n        fontSize: 16,\n    },\n    languageButton: {\n        position: 'absolute',\n        right: 8,\n        top: 8,\n    },\n    languageButtonActive: {\n        color: 'primary.main',\n    },\n};\n\ninterface CustomModalProps {\n    toggleTranslation?: () => void;\n    noTranslation?: boolean;\n    title: string;\n    fullWidth?: boolean;\n    help?: string;\n    maxWidth?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | false;\n    progress?: boolean;\n    icon?: any;\n    applyDisabled?: boolean;\n    applyButton?: boolean;\n    onClose: () => void;\n    children: JSX.Element | JSX.Element[] | string | string[] | undefined | null;\n    titleButtonApply?: string;\n    titleButtonClose?: string;\n    onApply: (value: string) => void;\n    textInput?: boolean;\n    defaultValue?: string;\n    overflowHidden?: boolean;\n}\n\nconst CustomModal = ({\n    toggleTranslation,\n    noTranslation,\n    title,\n    fullWidth,\n    help,\n    maxWidth,\n    progress,\n    icon,\n    applyDisabled,\n    applyButton,\n    onClose,\n    children,\n    titleButtonApply,\n    titleButtonClose,\n    onApply,\n    textInput,\n    defaultValue,\n    overflowHidden,\n}: CustomModalProps): JSX.Element => {\n    const [value, setValue] = useState(defaultValue);\n    useEffect(() => {\n        setValue(defaultValue);\n    }, [defaultValue]);\n\n    let Icon = null;\n\n    if (icon) {\n        Icon = icon;\n    }\n\n    return (\n        <Dialog\n            open={!0}\n            maxWidth={maxWidth || 'md'}\n            fullWidth={!!fullWidth}\n            disableEscapeKeyDown={false}\n            onClose={onClose}\n            sx={{ '& .MuiPaper-root': styles.modalDialog /* paper: classes.background */ }}\n        >\n            {title && (\n                <DialogTitle>\n                    {icon ? <Icon style={styles.titleIcon} /> : null}\n                    {title}\n                    {I18n.getLanguage() !== 'en' && toggleTranslation ? (\n                        <IconButton\n                            size=\"large\"\n                            style={{ ...styles.languageButton, ...(noTranslation ? styles.languageButtonActive : {}) }}\n                            onClick={() => toggleTranslation()}\n                            title={I18n.t('Disable/Enable translation')}\n                        >\n                            <LanguageIcon />\n                        </IconButton>\n                    ) : null}\n                </DialogTitle>\n            )}\n            <DialogContent\n                sx={{ ...(overflowHidden ? styles.overflowHidden : {}), ...styles.content }}\n                style={{ paddingTop: 8 }}\n            >\n                {textInput && (\n                    <TextField\n                        // className={className}\n                        autoComplete=\"off\"\n                        fullWidth\n                        autoFocus\n                        variant=\"outlined\"\n                        size=\"medium\"\n                        // rows={10}\n                        multiline\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        // customValue\n                    />\n                )}\n                {children}\n                {help ? <div>{help}</div> : null}\n            </DialogContent>\n            <DialogActions>\n                {applyButton !== false && (\n                    <Button\n                        startIcon={<CheckIcon />}\n                        disabled={progress || (applyDisabled && defaultValue === value)}\n                        onClick={() => onApply && onApply(textInput ? value : '')}\n                        variant=\"contained\"\n                        color=\"primary\"\n                    >\n                        {I18n.t(titleButtonApply || 'Ok')}\n                    </Button>\n                )}\n                <Button\n                    color=\"grey\"\n                    onClick={() => onClose && onClose()}\n                    disabled={progress}\n                    variant=\"contained\"\n                    startIcon={<CloseIcon />}\n                >\n                    {I18n.t(titleButtonClose || 'Cancel')}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default CustomModal;\n","import React, { type JSX } from 'react';\n\nimport AceEditor from 'react-ace';\nimport 'ace-builds/src-min-noconflict/mode-json';\nimport 'ace-builds/src-min-noconflict/worker-json';\nimport 'ace-builds/src-min-noconflict/theme-clouds_midnight';\nimport 'ace-builds/src-min-noconflict/theme-chrome';\nimport 'ace-builds/src-min-noconflict/ext-language_tools';\n\nconst styles: Record<string, React.CSSProperties> = {\n    jsonError: {\n        border: '1px solid red',\n        minHeight: 200,\n    },\n    jsonNoError: {\n        border: '1px solid #00000000',\n        minHeight: 200,\n    },\n};\n\ninterface EditorProps {\n    fontSize?: number;\n    value?: string;\n    defaultValue?: string;\n    mode?: 'json' | 'css' | 'html';\n    name: string;\n    onChange: (newValue: string) => void;\n    themeType: string;\n    editValueMode?: boolean; // flag that indicates the \"value edit mode\"\n    error?: boolean;\n}\n\nfunction Editor(props: EditorProps): JSX.Element {\n    return (\n        <AceEditor\n            style={props.error === true ? styles.jsonError : props.error === false ? styles.jsonNoError : undefined}\n            mode={props.mode || 'json'}\n            width=\"100%\"\n            height=\"100%\"\n            showPrintMargin={props.editValueMode}\n            showGutter={props.editValueMode}\n            highlightActiveLine={props.editValueMode}\n            defaultValue={props.defaultValue}\n            theme={props.themeType === 'dark' ? 'clouds_midnight' : 'chrome'}\n            value={props.value}\n            readOnly={!props.onChange}\n            onChange={newValue => props.onChange(newValue)}\n            name={props.name || 'UNIQUE_ID_OF_DIV1'}\n            fontSize={props.fontSize || 14}\n            setOptions={{\n                enableBasicAutocompletion: true,\n                enableLiveAutocompletion: true,\n                enableSnippets: true,\n\n                showLineNumbers: props.editValueMode,\n                tabSize: props.editValueMode ? 2 : undefined,\n            }}\n            editorProps={{ $blockScrolling: true }}\n        />\n    );\n}\n\nexport default Editor;\n","import React, { type JSX } from 'react';\n\nimport { FormHelperText, FormControl, Button } from '@mui/material';\n\nimport { I18n } from '@iobroker/adapter-react-v5';\nimport type { ConfigItemJsonEditor } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\nimport CustomModal from './wrapper/Components/CustomModal';\nimport Editor from './wrapper/Components/Editor';\n\nconst styles: Record<string, React.CSSProperties> = {\n    fullWidth: {\n        width: '100%',\n    },\n    flex: {\n        display: 'flex',\n    },\n    button: {\n        height: 48,\n        // marginLeft: 4,\n        minWidth: 48,\n    },\n    wrapper: {\n        width: 'calc(100vw - 40px)',\n        height: 'calc(100vh - 188px)',\n    },\n};\n\ninterface ConfigJsonEditorProps extends ConfigGenericProps {\n    schema: ConfigItemJsonEditor;\n}\n\ninterface ConfigJsonEditorState extends ConfigGenericState {\n    initialized?: boolean;\n    showSelectId?: boolean;\n    jsonError?: boolean;\n}\n\nclass ConfigJsonEditor extends ConfigGeneric<ConfigJsonEditorProps, ConfigJsonEditorState> {\n    componentDidMount(): void {\n        super.componentDidMount();\n        const { data, attr } = this.props;\n        const value = ConfigGeneric.getValue(data, attr) || {};\n        this.setState({ value, initialized: true, jsonError: this.validateJson(value) });\n    }\n\n    validateJson(value: string | null | undefined): boolean {\n        let jsonError = false;\n        if (this.props.schema.validateJson !== false) {\n            if (value || !this.props.schema.allowEmpty) {\n                try {\n                    JSON.parse(value);\n                } catch (err: unknown) {\n                    console.log('Error in JSON', err);\n                    jsonError = true;\n                }\n            }\n        }\n\n        return jsonError;\n    }\n\n    renderItem(_error: string, disabled: boolean /* , defaultValue */): JSX.Element | null {\n        if (!this.state.initialized) {\n            return null;\n        }\n\n        const { schema, data, attr } = this.props;\n        const { value, showSelectId } = this.state;\n\n        return (\n            <FormControl\n                fullWidth\n                variant=\"standard\"\n            >\n                <div style={styles.flex}>\n                    <Button\n                        color=\"grey\"\n                        disabled={disabled}\n                        style={styles.button}\n                        size=\"small\"\n                        variant=\"outlined\"\n                        onClick={() => this.setState({ showSelectId: true })}\n                    >\n                        {I18n.t('ra_JSON editor')}\n                    </Button>\n                </div>\n                {showSelectId ? (\n                    <CustomModal\n                        title={this.getText(schema.label)}\n                        overflowHidden\n                        onClose={() =>\n                            this.setState({ showSelectId: false, value: ConfigGeneric.getValue(data, attr) || {} })\n                        }\n                        onApply={() => this.setState({ showSelectId: false }, () => this.onChange(attr, value))}\n                    >\n                        <div style={{ ...styles.wrapper, ...(this.state.jsonError ? {} : undefined) }}>\n                            <Editor\n                                value={typeof value === 'object' ? JSON.stringify(value) : value}\n                                onChange={newValue =>\n                                    this.setState({ value: newValue, jsonError: this.validateJson(newValue) })\n                                }\n                                name=\"ConfigJsonEditor\"\n                                themeType={this.props.oContext.themeType}\n                            />\n                        </div>\n                    </CustomModal>\n                ) : null}\n                {schema.help || this.state.jsonError ? (\n                    <FormHelperText>\n                        {this.state.jsonError\n                            ? I18n.t('ra_Invalid JSON')\n                            : this.renderHelp(\n                                  this.props.schema.help,\n                                  this.props.schema.helpLink,\n                                  this.props.schema.noTranslation,\n                              )}\n                    </FormHelperText>\n                ) : null}\n            </FormControl>\n        );\n    }\n}\n\nexport default ConfigJsonEditor;\n","import React, { type JSX } from 'react';\n\nimport { InputLabel, MenuItem, FormHelperText, FormControl, Select } from '@mui/material';\n\nimport { I18n } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemLanguage } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\nconst LANGUAGES = [\n    {\n        value: 'en',\n        label: 'English',\n    },\n    {\n        value: 'de',\n        label: 'Deutsch',\n    },\n    {\n        value: 'ru',\n        label: 'русский',\n    },\n    {\n        value: 'pt',\n        label: 'Portugues',\n    },\n    {\n        value: 'nl',\n        label: 'Nederlands',\n    },\n    {\n        value: 'fr',\n        label: 'français',\n    },\n    {\n        value: 'it',\n        label: 'Italiano',\n    },\n    {\n        value: 'es',\n        label: 'Espanol',\n    },\n    {\n        value: 'pl',\n        label: 'Polski',\n    },\n    {\n        value: 'uk',\n        label: 'Український',\n    },\n    {\n        value: 'zh-ch',\n        label: '简体中文',\n    },\n] as const;\n\ninterface LanguageSelectOption {\n    /** Value to save */\n    value: string;\n    /** Label to show */\n    label: string;\n}\n\ninterface ConfigLanguageProps extends ConfigGenericProps {\n    schema: ConfigItemLanguage;\n}\n\ninterface ConfigLanguageState extends ConfigGenericState {\n    selectOptions: LanguageSelectOption[];\n}\n\nclass ConfigLanguage extends ConfigGeneric<ConfigLanguageProps, ConfigLanguageState> {\n    componentDidMount(): void {\n        super.componentDidMount();\n        const value = ConfigGeneric.getValue(this.props.data, this.props.attr);\n        const languages: LanguageSelectOption[] = [...LANGUAGES];\n        if (this.props.schema.system) {\n            languages.unshift({ value: '', label: I18n.t('ra_System language') });\n        } else {\n            languages.unshift({ value: '', label: I18n.t('ra_none') });\n        }\n\n        this.setState({\n            value: this.props.schema.system ? value || '' : value || I18n.getLanguage(),\n            selectOptions: languages,\n        });\n    }\n\n    renderItem(error: unknown, disabled: boolean): JSX.Element | null {\n        if (!this.state.selectOptions) {\n            return null;\n        }\n\n        const item = this.state.selectOptions?.find(\n            it => it.value === this.state.value || (!it.value && !this.state.value),\n        );\n\n        return (\n            <FormControl\n                fullWidth\n                variant=\"standard\"\n            >\n                {this.props.schema.label ? <InputLabel>{this.getText(this.props.schema.label)}</InputLabel> : null}\n                <Select\n                    variant=\"standard\"\n                    error={!!error}\n                    disabled={disabled}\n                    value={this.state.value || '_'}\n                    renderValue={() => this.getText(item?.label, this.props.schema.noTranslation)}\n                    onChange={e => {\n                        let { value } = e.target;\n                        if (value === '_') {\n                            value = '';\n                        }\n\n                        this.setState({ value }, () => {\n                            const mayBePromise = this.onChange(this.props.attr, value);\n                            if (mayBePromise instanceof Promise) {\n                                void mayBePromise.catch(err => console.error(err));\n                            }\n                            if (this.props.schema.changeGuiLanguage) {\n                                if (value) {\n                                    if (value === I18n.getLanguage()) {\n                                        return;\n                                    }\n                                    I18n.setLanguage(value);\n                                    if (this.props.oContext.changeLanguage) {\n                                        this.props.oContext.changeLanguage();\n                                    }\n                                } else {\n                                    void this.props.oContext.socket\n                                        .getSystemConfig()\n                                        .then((systemConfig: ioBroker.SystemConfigObject) => {\n                                            if (systemConfig.common.language === I18n.getLanguage()) {\n                                                return;\n                                            }\n                                            if (systemConfig.common.language) {\n                                                I18n.setLanguage(systemConfig.common.language);\n                                                if (this.props.oContext.changeLanguage) {\n                                                    this.props.oContext.changeLanguage();\n                                                }\n                                            }\n                                        })\n                                        .catch(e => console.error(`Cannot read system config: ${e}`));\n                                }\n                            }\n                        });\n                    }}\n                >\n                    {this.state.selectOptions?.map(it => (\n                        <MenuItem\n                            key={it.value}\n                            value={it.value}\n                        >\n                            {it.label}\n                        </MenuItem>\n                    ))}\n                </Select>\n                {this.props.schema.help ? (\n                    <FormHelperText>\n                        {this.renderHelp(\n                            this.props.schema.help,\n                            this.props.schema.helpLink,\n                            this.props.schema.noTranslation,\n                        )}\n                    </FormHelperText>\n                ) : null}\n            </FormControl>\n        );\n    }\n}\n\nexport default ConfigLanguage;\n","import React, { type JSX } from 'react';\n\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    LinearProgress,\n    FormControlLabel,\n    Checkbox,\n} from '@mui/material';\n\nimport { Check, Close } from '@mui/icons-material';\n\nimport { I18n } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemLicense } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\ninterface ConfigLicenseProps extends ConfigGenericProps {\n    schema: ConfigItemLicense;\n}\n\ninterface ConfigLicenseState extends ConfigGenericState {\n    showLicenseDialog?: boolean;\n    licenseChecked?: boolean;\n    license?: string;\n    loading?: boolean;\n    error?: boolean;\n    scrolledDown?: boolean;\n}\n\nclass ConfigLicense extends ConfigGeneric<ConfigLicenseProps, ConfigLicenseState> {\n    private readonly scrollRef: React.RefObject<HTMLDivElement | HTMLPreElement>;\n\n    constructor(props: ConfigLicenseProps) {\n        super(props);\n        this.scrollRef = React.createRef();\n    }\n\n    scrolledDown(): boolean {\n        if (!this.scrollRef.current) {\n            return false;\n        }\n        return (\n            this.scrollRef.current.offsetHeight + this.scrollRef.current.scrollTop >=\n            this.scrollRef.current.scrollHeight\n        );\n    }\n\n    componentDidMount(): void {\n        super.componentDidMount();\n        if (!ConfigGeneric.getValue(this.props.data, this.props.attr)) {\n            if (this.props.schema.licenseUrl) {\n                this.setState({ showLicenseDialog: true, loading: true, scrolledDown: false });\n\n                fetch(this.props.schema.licenseUrl)\n                    .then(res => res.text())\n                    .then(text => this.setState({ license: text, loading: false }))\n                    .catch(e =>\n                        this.setState({\n                            license: e.toString(),\n                            loading: false,\n                            error: true,\n                            scrolledDown: false,\n                        }),\n                    );\n            } else {\n                this.setState({ showLicenseDialog: true, scrolledDown: false });\n            }\n            setTimeout(() => {\n                // install scroll handler\n                if (this.scrollRef.current) {\n                    const scrolledDown = this.scrolledDown();\n                    if (!scrolledDown) {\n                        this.scrollRef.current.addEventListener('scroll', () => {\n                            if (!this.state.scrolledDown && this.scrolledDown()) {\n                                this.setState({ scrolledDown: true });\n                            }\n                        });\n                    } else {\n                        this.setState({ scrolledDown: true });\n                    }\n                }\n            }, 1000);\n        }\n    }\n\n    renderItem(_error: string, disabled: boolean /*, defaultValue */): JSX.Element | null {\n        if (!this.state.showLicenseDialog) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                maxWidth=\"lg\"\n                open={!0}\n                onClose={(e, reason) => {\n                    if (reason !== 'escapeKeyDown' && reason !== 'backdropClick') {\n                        this.setState({ showLicenseDialog: false });\n                    }\n                }}\n            >\n                <DialogTitle>\n                    {this.props.schema.title ? I18n.t(this.props.schema.title) : I18n.t('ra_License agreement')}\n                </DialogTitle>\n                <DialogContent>\n                    {this.props.schema.licenseUrl ? (\n                        <>\n                            {this.state.loading ? <LinearProgress /> : null}\n                            <pre\n                                ref={this.scrollRef as React.RefObject<HTMLPreElement>}\n                                style={{\n                                    width: '100%',\n                                    height: '100%',\n                                    overflowY: 'auto',\n                                    fontSize: 14,\n                                }}\n                            >\n                                {this.state.license}\n                            </pre>\n                        </>\n                    ) : null}\n                    {!this.props.schema.licenseUrl && this.props.schema.texts ? (\n                        <div\n                            ref={this.scrollRef as React.RefObject<HTMLDivElement>}\n                            style={{\n                                width: '100%',\n                                height: '100%',\n                                overflowY: 'auto',\n                                fontSize: 14,\n                            }}\n                        >\n                            {this.props.schema.texts.map((text, i) =>\n                                this.props.schema.noTranslation ? <p key={i}>{text}</p> : <p key={i}>{I18n.t(text)}</p>,\n                            )}\n                        </div>\n                    ) : null}\n                </DialogContent>\n                <DialogActions>\n                    {this.props.schema.checkBox ? (\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    disabled={disabled}\n                                    checked={!!this.state.licenseChecked}\n                                    onClick={() => this.setState({ licenseChecked: !this.state.licenseChecked })}\n                                />\n                            }\n                            label={I18n.t(this.props.schema.checkBox)}\n                        />\n                    ) : null}\n                    <Button\n                        disabled={\n                            disabled ||\n                            this.state.loading ||\n                            this.state.error ||\n                            (this.props.schema.checkBox && !this.state.licenseChecked) ||\n                            !this.state.scrolledDown\n                        }\n                        onClick={() => {\n                            this.setState({ showLicenseDialog: false });\n                            const mayBePromise = this.onChange(this.props.attr, true);\n                            if (mayBePromise instanceof Promise) {\n                                mayBePromise.catch(e => console.error(`Cannot set value: ${e}`));\n                            }\n                        }}\n                        color=\"primary\"\n                        variant=\"contained\"\n                        startIcon={<Check />}\n                    >\n                        {this.props.schema.agreeText\n                            ? I18n.t(this.props.schema.agreeText)\n                            : I18n.t('ra_Accept license')}\n                    </Button>\n                    <Button\n                        onClick={() => {\n                            this.setState({ showLicenseDialog: false });\n                            setTimeout(() => this.setState({ showLicenseDialog: true }), 2000);\n                        }}\n                        color=\"grey\"\n                        variant=\"contained\"\n                        startIcon={<Close />}\n                    >\n                        {I18n.t('ra_Close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default ConfigLicense;\n","import React, { type JSX } from 'react';\n\nimport { Autocomplete, TextField, FormControl } from '@mui/material';\n\nimport { I18n } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemNumber } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\nconst styles: Record<string, React.CSSProperties> = {\n    indeterminate: {\n        opacity: 0.5,\n    },\n    control: {\n        flexDirection: 'row',\n        width: '100%',\n    },\n};\n\ninterface ConfigNumberProps extends ConfigGenericProps {\n    schema: ConfigItemNumber;\n}\n\ninterface ConfigNumberState extends ConfigGenericState {\n    _value: string;\n    oldValue: string | null;\n}\n\nclass ConfigNumber extends ConfigGeneric<ConfigNumberProps, ConfigNumberState> {\n    private updateTimeout?: ReturnType<typeof setTimeout>;\n\n    componentDidMount(): void {\n        super.componentDidMount();\n        let _value = ConfigGeneric.getValue(this.props.data, this.props.attr);\n\n        if (_value === null || _value === undefined) {\n            _value = '';\n        }\n\n        if (Array.isArray(_value) && this.props.oContext.multiEdit) {\n            _value = ConfigGeneric.DIFFERENT_VALUE;\n            this.setState({ _value, oldValue: _value });\n            return;\n        }\n\n        this.setState({ _value: _value.toString(), oldValue: _value.toString() });\n    }\n\n    static getDerivedStateFromProps(\n        props: ConfigNumberProps,\n        state: ConfigNumberState,\n    ): Partial<ConfigNumberState> | null {\n        if (\n            (props.schema.min !== undefined && props.schema.min < 0) ||\n            (props.schema.max !== undefined && props.schema.max < 0)\n        ) {\n            return null;\n        }\n        const _value = ConfigGeneric.getValue(props.data, props.attr);\n\n        if (props.oContext.multiEdit && state._value === ConfigGeneric.DIFFERENT_VALUE) {\n            return { _value: ConfigGeneric.DIFFERENT_VALUE };\n        }\n\n        if (\n            _value === null ||\n            _value === undefined ||\n            state.oldValue === null ||\n            state.oldValue === undefined ||\n            (_value.toString() !== parseFloat(state._value).toString() &&\n                _value.toString() !== state.oldValue.toString())\n        ) {\n            return { _value };\n        }\n\n        return null;\n    }\n\n    checkValue(value: string): string | null {\n        if (value === null || value === undefined) {\n            return null;\n        }\n        value = value.toString().trim();\n        const f = value === '' ? 0 : parseFloat(value);\n\n        if (value !== '' && Number.isNaN(f)) {\n            return 'ra_Not a number';\n        }\n\n        if (value !== '' && window.isFinite(f)) {\n            if (this.props.schema.min !== undefined && f < this.props.schema.min) {\n                return 'ra_Too small';\n            }\n            if (this.props.schema.max !== undefined && f > this.props.schema.max) {\n                return 'ra_Too big';\n            }\n            if (value === '' || value === '-' || Number.isNaN(f)) {\n                return 'ra_Not a number';\n            }\n\n            return null;\n        }\n\n        return 'ra_Not a number';\n    }\n\n    renderItem(error: unknown, disabled: boolean): JSX.Element | null {\n        const isIndeterminate = Array.isArray(this.state._value) || this.state._value === ConfigGeneric.DIFFERENT_VALUE;\n\n        if (this.state.oldValue !== null && this.state.oldValue !== undefined) {\n            if (this.updateTimeout) {\n                clearTimeout(this.updateTimeout);\n            }\n            this.updateTimeout = setTimeout(() => {\n                this.updateTimeout = undefined;\n                this.setState({ oldValue: null });\n            }, 30);\n        } else if (this.updateTimeout) {\n            clearTimeout(this.updateTimeout);\n            this.updateTimeout = undefined;\n        }\n\n        if (isIndeterminate) {\n            const autoCompleteOptions = ConfigGeneric.getValue(this.props.data, this.props.attr);\n            const arr =\n                autoCompleteOptions\n                    ?.filter((a: number | null | undefined) => a || a === 0)\n                    .map((item: number) => ({ label: item.toString(), value: item })) || [];\n\n            arr.unshift({ label: I18n.t(ConfigGeneric.DIFFERENT_LABEL), value: ConfigGeneric.DIFFERENT_VALUE });\n\n            return (\n                <Autocomplete\n                    style={styles.indeterminate}\n                    fullWidth\n                    freeSolo\n                    value={arr[0]}\n                    // @ts-expect-error needs investigation if this really has no effect\n                    getOptionSelected={(option, value) => option.label === value.label}\n                    onChange={(_, value: (typeof arr)[number]) => {\n                        const mayBePromise = this.onChange(this.props.attr, value?.value, () => {\n                            this.setState({ _value: value?.value, oldValue: this.state._value });\n                        });\n                        if (mayBePromise instanceof Promise) {\n                            mayBePromise.catch(e => console.error(e));\n                        }\n                    }}\n                    options={arr}\n                    getOptionLabel={(option: (typeof arr)[number]) => option.label}\n                    renderInput={params => (\n                        <TextField\n                            {...params}\n                            label={this.getText(this.props.schema.label)}\n                            variant=\"standard\"\n                            slotProps={{\n                                htmlInput: {\n                                    ...params.inputProps,\n                                    readOnly: this.props.schema.readOnly || false,\n                                },\n                            }}\n                            error={!!error}\n                            placeholder={this.getText(this.props.schema.placeholder)}\n                            helperText={this.renderHelp(\n                                this.props.schema.help,\n                                this.props.schema.helpLink,\n                                this.props.schema.noTranslation,\n                            )}\n                            disabled={!!disabled}\n                        />\n                    )}\n                />\n            );\n        }\n        if (!error && this.state._value !== null && this.state._value !== undefined && this.state._value) {\n            error = this.checkValue(this.state._value);\n            if (error) {\n                error = I18n.t(error as string);\n            }\n        }\n\n        return (\n            <FormControl\n                variant=\"standard\"\n                style={styles.control}\n            >\n                <TextField\n                    variant=\"standard\"\n                    type=\"number\"\n                    fullWidth\n                    slotProps={{\n                        htmlInput: {\n                            min: this.props.schema.min,\n                            max: this.props.schema.max,\n                            step: this.props.schema.step,\n                            readOnly: this.props.schema.readOnly || false,\n                        },\n                    }}\n                    value={this.state._value === null || this.state._value === undefined ? '' : this.state._value}\n                    error={!!error}\n                    disabled={!!disabled}\n                    onChange={e => {\n                        const _value = e.target.value; // value is always a string and it is validly formatted\n                        const _error = this.checkValue(_value);\n                        if (_error) {\n                            this.onError(this.props.attr, I18n.t(_error));\n                        } else {\n                            this.onError(this.props.attr); // clear error\n                        }\n\n                        this.setState({ _value, oldValue: this.state._value }, () =>\n                            this.onChange(this.props.attr, parseFloat(_value)),\n                        );\n                    }}\n                    placeholder={this.getText(this.props.schema.placeholder)}\n                    label={this.getText(this.props.schema.label)}\n                    helperText={\n                        error && typeof error === 'string'\n                            ? error\n                            : this.renderHelp(\n                                  this.props.schema.help,\n                                  this.props.schema.helpLink,\n                                  this.props.schema.noTranslation,\n                              )\n                    }\n                />\n            </FormControl>\n        );\n    }\n}\n\nexport default ConfigNumber;\n","import React, { type JSX } from 'react';\n\nimport { InputLabel, FormControl, Button, TextField } from '@mui/material';\n\nimport { DialogSelectID } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemObjectId } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\nconst styles: Record<string, React.CSSProperties> = {\n    flex: {\n        display: 'flex',\n    },\n    button: {\n        height: 48,\n        marginLeft: 4,\n        minWidth: 48,\n    },\n};\n\ninterface ConfigObjectIdProps extends ConfigGenericProps {\n    schema: ConfigItemObjectId;\n}\n\ninterface ConfigObjectIdState extends ConfigGenericState {\n    showSelectId?: boolean;\n    initialized?: boolean;\n}\n\nclass ConfigObjectId extends ConfigGeneric<ConfigObjectIdProps, ConfigObjectIdState> {\n    componentDidMount(): void {\n        super.componentDidMount();\n        const { data, attr } = this.props;\n        const value = ConfigGeneric.getValue(data, attr) || '';\n        this.setState({ value, initialized: true });\n    }\n\n    renderItem(error: string, disabled: boolean /* , defaultValue */): JSX.Element {\n        if (!this.state.initialized) {\n            return null;\n        }\n        const socket = this.props.oContext.socket;\n        const { schema, attr } = this.props;\n        const { value, showSelectId } = this.state;\n\n        return (\n            <FormControl\n                fullWidth\n                variant=\"standard\"\n            >\n                {schema.label ? <InputLabel shrink>{this.getText(schema.label)}</InputLabel> : null}\n                <div style={styles.flex}>\n                    <TextField\n                        variant=\"standard\"\n                        fullWidth\n                        value={value}\n                        error={!!error}\n                        disabled={disabled}\n                        placeholder={this.getText(schema.placeholder)}\n                        label={this.getText(schema.label)}\n                        helperText={this.renderHelp(schema.help, schema.helpLink, schema.noTranslation)}\n                        onChange={e => {\n                            const value_ = e.target.value;\n                            this.setState({ value: value_ }, () => this.onChange(attr, value_));\n                        }}\n                    />\n                    <Button\n                        color=\"grey\"\n                        disabled={disabled}\n                        style={styles.button}\n                        size=\"small\"\n                        variant=\"outlined\"\n                        onClick={() => this.setState({ showSelectId: true })}\n                    >\n                        ...\n                    </Button>\n                </div>\n                {showSelectId ? (\n                    <DialogSelectID\n                        imagePrefix={\n                            this.props.oContext.imagePrefix === undefined ? '../..' : this.props.oContext.imagePrefix\n                        }\n                        dialogName={`admin.${this.props.oContext.adapterName}`}\n                        filterFunc={schema.filterFunc}\n                        themeType={this.props.oContext.themeType}\n                        theme={this.props.oContext.theme}\n                        types={schema.types ? (Array.isArray(schema.types) ? schema.types : [schema.types]) : undefined}\n                        customFilter={schema.customFilter}\n                        filters={schema.filters}\n                        socket={socket}\n                        selected={value}\n                        root={schema.root}\n                        onClose={() => this.setState({ showSelectId: false })}\n                        onOk={value_ =>\n                            this.setState({ showSelectId: false, value: value_ }, () => this.onChange(attr, value_))\n                        }\n                    />\n                ) : null}\n            </FormControl>\n        );\n    }\n}\n\nexport default ConfigObjectId;\n","import React, { type JSX } from 'react';\n\nimport { TextField, IconButton, InputAdornment } from '@mui/material';\n\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\n\nimport { I18n } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemPassword } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\nconst styles: Record<string, React.CSSProperties> = {\n    fullWidth: {\n        width: '100%',\n        display: 'inline-block',\n    },\n    halfWidth1: {\n        width: 'calc(50% - 5px)',\n        display: 'inline-block',\n        marginRight: 8,\n    },\n    halfWidth2: {\n        width: 'calc(50% - 5px)',\n        display: 'inline-block',\n    },\n};\n\nconst PASSWORD_PLACEHOLDER = '____ppp____';\n\ninterface ConfigPasswordProps extends ConfigGenericProps {\n    schema: ConfigItemPassword;\n}\n\ninterface ConfigPasswordState extends ConfigGenericState {\n    _notEqual?: boolean;\n    _repeat?: string;\n    _visible?: boolean;\n}\n\nclass ConfigPassword extends ConfigGeneric<ConfigPasswordProps, ConfigPasswordState> {\n    componentDidMount(): void {\n        super.componentDidMount();\n        const value = ConfigGeneric.getValue(this.props.data, this.props.attr);\n        this.setState({\n            _repeat: value ? PASSWORD_PLACEHOLDER : '',\n            _visible: false,\n            value: value ? PASSWORD_PLACEHOLDER : '',\n            _notEqual: false,\n        });\n    }\n\n    onChangePassword(password?: string, repeatPassword?: string): void {\n        if (password === undefined) {\n            password = this.state.value;\n        }\n        if (repeatPassword === undefined) {\n            repeatPassword = this.state._repeat;\n        }\n        const _notEqual = !!this.props.schema.repeat && repeatPassword !== password;\n        this.setState({ value: password, _repeat: repeatPassword, _notEqual }, () => {\n            if (_notEqual) {\n                this.onError(this.props.attr, I18n.t('ra_Passwords are not equal!'));\n            } else {\n                this.onError(this.props.attr); // clear error\n                const mayBePromise = this.onChange(this.props.attr, password);\n                if (mayBePromise instanceof Promise) {\n                    mayBePromise.catch(e => this.onError(this.props.attr, e));\n                }\n            }\n        });\n    }\n\n    renderItem(error: string, disabled: boolean /* , defaultValue */): JSX.Element {\n        if (this.state._notEqual === undefined) {\n            return null;\n        }\n\n        const password = (\n            <TextField\n                variant=\"standard\"\n                fullWidth\n                type={this.state._visible && this.state.value !== PASSWORD_PLACEHOLDER ? 'text' : 'password'}\n                value={this.state.value}\n                error={!!error || this.state._notEqual}\n                disabled={!!disabled}\n                onChange={e => this.onChangePassword(e.target.value)}\n                label={this.getText(this.props.schema.label)}\n                slotProps={{\n                    input: {\n                        autoComplete: 'new-password',\n                        endAdornment:\n                            this.state.value &&\n                            this.state.value !== PASSWORD_PLACEHOLDER &&\n                            this.props.schema.visible &&\n                            !disabled &&\n                            !this.props.schema.readOnly ? (\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        size=\"large\"\n                                        tabIndex={-1}\n                                        onClick={e => {\n                                            e.preventDefault();\n                                            e.stopPropagation();\n                                            this.setState({ _visible: !this.state._visible });\n                                        }}\n                                        edge=\"end\"\n                                    >\n                                        {this.state._visible ? <VisibilityOff /> : <Visibility />}\n                                    </IconButton>\n                                </InputAdornment>\n                            ) : undefined,\n                    },\n                    htmlInput: {\n                        autoComplete: 'new-password',\n                        form: { autoComplete: 'off' },\n                        maxLength: this.props.schema.maxLength || this.props.schema.max || undefined,\n                        readOnly: this.props.schema.readOnly || false,\n                    },\n                }}\n                helperText={\n                    this.state._notEqual\n                        ? I18n.t('ra_Passwords are not equal!')\n                        : this.renderHelp(\n                              this.props.schema.help,\n                              this.props.schema.helpLink,\n                              this.props.schema.noTranslation,\n                          )\n                }\n            />\n        );\n\n        if (this.props.schema.repeat && !this.props.schema.readOnly) {\n            const passwordRepeat = !this.state._visible ? (\n                <TextField\n                    variant=\"standard\"\n                    fullWidth\n                    type=\"password\"\n                    value={this.state._repeat}\n                    error={!!error || this.state._notEqual}\n                    disabled={!!disabled}\n                    onChange={e => this.onChangePassword(undefined, e.target.value)}\n                    label={`${this.getText(this.props.schema.label)} (${I18n.t('ra_repeat')})`}\n                    slotProps={{\n                        input: {\n                            autoComplete: 'new-password',\n                        },\n                        htmlInput: {\n                            autoComplete: 'new-password',\n                            form: { autoComplete: 'off' },\n                            maxLength: this.props.schema.maxLength || this.props.schema.max || undefined,\n                        },\n                    }}\n                    helperText={\n                        this.state._notEqual\n                            ? I18n.t('ra_Passwords are not equal!')\n                            : this.renderHelp(\n                                  this.props.schema.help,\n                                  this.props.schema.helpLink,\n                                  this.props.schema.noTranslation,\n                              )\n                    }\n                />\n            ) : null;\n\n            return (\n                <div style={styles.fullWidth}>\n                    <div style={styles.halfWidth1}>{password}</div>\n                    <div style={styles.halfWidth2}>{passwordRepeat}</div>\n                </div>\n            );\n        }\n        return password;\n    }\n}\n\nexport default ConfigPassword;\n","import React, { type JSX } from 'react';\n\nimport { IconButton, TextField } from '@mui/material';\n\nimport { I18n, IconCopy, Utils } from '@iobroker/adapter-react-v5';\nimport type { ConfigItemPattern } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\ninterface ConfigPatternProps extends ConfigGenericProps {\n    schema: ConfigItemPattern;\n}\n\nclass ConfigPattern extends ConfigGeneric<ConfigPatternProps, ConfigGenericState> {\n    renderItem(_error: unknown, disabled: boolean): JSX.Element | null {\n        return (\n            <TextField\n                variant=\"standard\"\n                fullWidth\n                disabled={!!disabled}\n                slotProps={{\n                    input: {\n                        endAdornment: this.props.schema.copyToClipboard ? (\n                            <IconButton\n                                size=\"small\"\n                                onClick={() => {\n                                    Utils.copyToClipboard(\n                                        this.getPattern(\n                                            this.props.schema.pattern,\n                                            null,\n                                            this.props.schema.noTranslation,\n                                        ),\n                                    );\n                                    window.alert(I18n.t('ra_Copied'));\n                                }}\n                            >\n                                <IconCopy />\n                            </IconButton>\n                        ) : undefined,\n                    },\n                }}\n                value={this.getPattern(this.props.schema.pattern, null, true)}\n                label={this.getText(this.props.schema.label)}\n                helperText={this.renderHelp(\n                    this.props.schema.help,\n                    this.props.schema.helpLink,\n                    this.props.schema.noTranslation,\n                )}\n            />\n        );\n    }\n}\n\nexport default ConfigPattern;\n","import React, { type JSX } from 'react';\n\nimport { TextField } from '@mui/material';\n\nimport { I18n } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemPort } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\nconst styles: Record<string, any> = {\n    warning: {\n        '& .Mui-error': {\n            color: 'orange',\n        },\n    },\n};\n\ninterface Port {\n    name: string;\n    port: number;\n    bind: string;\n    v6bind: string;\n    enabled: boolean;\n}\n\ninterface ConfigPortProps extends ConfigGenericProps {\n    schema: ConfigItemPort;\n}\n\ninterface ConfigPortState extends ConfigGenericState {\n    _value: string;\n    oldValue: string | null;\n    ports: Port[];\n}\n\nclass ConfigPort extends ConfigGeneric<ConfigPortProps, ConfigPortState> {\n    private updateTimeout?: ReturnType<typeof setTimeout>;\n\n    async componentDidMount(): Promise<void> {\n        super.componentDidMount();\n        let _value = ConfigGeneric.getValue(this.props.data, this.props.attr);\n        if (_value === null || _value === undefined) {\n            _value = '';\n        }\n        this.setState({ _value: _value.toString(), oldValue: _value.toString() });\n\n        // read all instances\n        const instances: ioBroker.InstanceObject[] = await this.props.oContext.socket.getAdapterInstances();\n\n        const ownId = `system.adapter.${this.props.oContext.adapterName}.${this.props.oContext.instance}`;\n        const instanceObj: ioBroker.InstanceObject = (await this.props.oContext.socket.getObject(\n            ownId,\n        )) as ioBroker.InstanceObject;\n        const ownHostname = instanceObj?.common.host;\n\n        const ports: Port[] = [];\n        instances.forEach(instance => {\n            // ignore own instance and instances on another host\n            if (!instance || instance._id === ownId || instance.common.host !== ownHostname) {\n                return;\n            }\n            // check port only if bind attribute is present too\n            if (!instance.native?.bind) {\n                return;\n            }\n\n            // if let's encrypt is enabled and update is enabled, then add port to check\n            if (instance?.native && instance.native.secure && instance.native.leEnabled && instance.native.leUpdate) {\n                const port = parseInt(instance.native.leCheckPort || instance.native.lePort, 10);\n                if (port) {\n                    ports.push({\n                        name: `${instance._id.replace('system.adapter.', '')} (LE)`,\n                        port,\n                        v6bind: instance.native.bind.includes(':') ? instance.native.bind : instance.native.v6bind,\n                        bind: instance.native.bind,\n                        enabled: !!instance.common?.enabled,\n                    });\n                }\n            }\n\n            const port = parseInt(instance?.native?.port, 10);\n            if (port) {\n                ports.push({\n                    name: instance._id.replace('system.adapter.', ''),\n                    bind: instance.native.bind,\n                    v6bind: instance.native.bind.includes(':') ? instance.native.bind : instance.native.v6bind,\n                    port,\n                    enabled: !!instance.common?.enabled,\n                });\n            }\n        });\n        this.setState({ ports });\n    }\n\n    static getDerivedStateFromProps(props: ConfigPortProps, state: ConfigPortState): Partial<ConfigPortState> | null {\n        const _value = ConfigGeneric.getValue(props.data, props.attr);\n        if (\n            _value === null ||\n            _value === undefined ||\n            state.oldValue === null ||\n            state.oldValue === undefined ||\n            (_value.toString() !== parseInt(state._value, 10).toString() &&\n                _value.toString() !== state.oldValue.toString())\n        ) {\n            return { _value };\n        }\n\n        return null;\n    }\n\n    checkValue(value: string): string | null {\n        if (value === null || value === undefined) {\n            return null;\n        }\n\n        const min = this.props.schema.min === undefined ? 20 : this.props.schema.min;\n        const max = this.props.schema.max || 0xffff;\n\n        value = value.toString().trim();\n        const f = value === '' ? 0 : parseInt(value, 10);\n\n        if (value !== '' && Number.isNaN(f)) {\n            return 'ra_Not a number';\n        }\n\n        if (value !== '' && window.isFinite(Number(value))) {\n            if (f < min) {\n                return 'ra_Too small';\n            }\n            if (f > max) {\n                return 'ra_Too big';\n            }\n            if (value === '' || value === '-' || Number.isNaN(f)) {\n                return 'ra_Not a number';\n            }\n\n            return null;\n        }\n\n        return 'ra_Not a number';\n    }\n\n    renderItem(error: unknown, disabled: boolean): JSX.Element {\n        if (this.state.oldValue !== null && this.state.oldValue !== undefined) {\n            if (this.updateTimeout) {\n                clearTimeout(this.updateTimeout);\n            }\n            this.updateTimeout = setTimeout(() => {\n                this.updateTimeout = undefined;\n                this.setState({ oldValue: null });\n            }, 30);\n        } else if (this.updateTimeout) {\n            clearTimeout(this.updateTimeout);\n            this.updateTimeout = undefined;\n        }\n\n        const min = this.props.schema.min === undefined ? 20 : this.props.schema.min;\n        const max = this.props.schema.max || 0xffff;\n\n        let warning;\n        if (this.state.ports) {\n            const num = parseInt(this.state._value, 10);\n\n            if (num) {\n                // filter ports only with the same bind address\n                // todo: IPv6 (v6bind or '::/0')\n                const ports = this.state.ports.filter(\n                    item =>\n                        !this.props.data.bind ||\n                        this.props.data.bind === item.bind ||\n                        this.props.data.bind === '0.0.0.0' ||\n                        item.bind === '0.0.0.0',\n                );\n\n                let idx = ports.findIndex(item => item.port === num && item.enabled);\n                if (idx !== -1) {\n                    error = I18n.t('ra_Port is already used by %s', this.state.ports[idx].name);\n                } else {\n                    idx = ports.findIndex(item => item.port === num && !item.enabled);\n                    if (idx !== -1) {\n                        warning = true;\n                        error = I18n.t('ra_Port could be used by %s', this.state.ports[idx].name);\n                    }\n                }\n            }\n        }\n\n        if (!error && this.state._value !== null && this.state._value !== undefined) {\n            error = this.checkValue(this.state._value);\n            if (typeof error === 'string') {\n                error = I18n.t(error);\n            }\n        }\n\n        return (\n            <TextField\n                variant=\"standard\"\n                type=\"number\"\n                fullWidth\n                slotProps={{\n                    htmlInput: {\n                        min,\n                        max,\n                        readOnly: this.props.schema.readOnly || false,\n                    },\n                }}\n                value={this.state._value === null || this.state._value === undefined ? '' : this.state._value}\n                error={!!error}\n                disabled={!!disabled}\n                sx={warning ? styles.warning : undefined}\n                onChange={e => {\n                    const _value = Number(e.target.value.toString().replace(/[^0-9]/g, '')).toString();\n                    const _error = this.checkValue(_value);\n                    if (_error) {\n                        this.onError(this.props.attr, I18n.t(_error));\n                    } else {\n                        this.onError(this.props.attr); // clear error\n                    }\n\n                    this.setState({ _value, oldValue: this.state._value }, () => {\n                        if (_value.trim() === parseInt(_value, 10).toString()) {\n                            const maybePromise = this.onChange(this.props.attr, parseInt(_value, 10) || 0);\n                            if (maybePromise instanceof Promise) {\n                                maybePromise.catch(err => {\n                                    console.error(`Cannot set value for ${this.props.attr}: ${err}`);\n                                });\n                            }\n                        }\n                    });\n                }}\n                placeholder={this.getText(this.props.schema.placeholder)}\n                label={this.getText(this.props.schema.label)}\n                helperText={\n                    error && typeof error === 'string'\n                        ? error\n                        : this.renderHelp(\n                              this.props.schema.help,\n                              this.props.schema.helpLink,\n                              this.props.schema.noTranslation,\n                          )\n                }\n            />\n        );\n    }\n}\n\nexport default ConfigPort;\n","import React, { type JSX } from 'react';\n\nimport { InputLabel, MenuItem, FormHelperText, FormControl, Select } from '@mui/material';\n\nimport { TextWithIcon, I18n } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemRoom } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\ninterface ConfigRoomProps extends ConfigGenericProps {\n    schema: ConfigItemRoom;\n}\n\ninterface ConfigRoomState extends ConfigGenericState {\n    selectOptions?: { value: string; label: string; obj?: ioBroker.EnumObject }[];\n}\n\nclass ConfigRoom extends ConfigGeneric<ConfigRoomProps, ConfigRoomState> {\n    componentDidMount(): void {\n        super.componentDidMount();\n        const value = ConfigGeneric.getValue(this.props.data, this.props.attr);\n\n        void this.props.oContext.socket\n            .getEnums('rooms')\n            .then(enums => {\n                const selectOptions: { value: string; label: string; obj?: ioBroker.EnumObject }[] = Object.keys(\n                    enums,\n                ).map(id => ({\n                    value: this.props.schema.short ? id.replace('enum.rooms.', '') : id,\n                    label: this.getText(enums[id].common.name),\n                    obj: enums[id],\n                }));\n\n                if (this.props.schema.allowDeactivate !== false) {\n                    selectOptions.unshift({ label: I18n.t(ConfigGeneric.NONE_LABEL), value: ConfigGeneric.NONE_VALUE });\n                }\n\n                this.setState({ value, selectOptions });\n            })\n            .catch(e => console.error(`Cannot get enums: ${e}`));\n    }\n\n    renderItem(error: string, disabled: boolean /* , defaultValue */): JSX.Element {\n        if (!this.state.selectOptions) {\n            return null;\n        }\n\n        const item = this.state.selectOptions.find(it => it.value === this.state.value);\n\n        return (\n            <FormControl\n                variant=\"standard\"\n                fullWidth\n            >\n                {this.props.schema.label ? <InputLabel>{this.getText(this.props.schema.label)}</InputLabel> : null}\n                <Select\n                    variant=\"standard\"\n                    error={!!error}\n                    disabled={!!disabled}\n                    value={this.state.value || '_'}\n                    renderValue={() =>\n                        item ? (\n                            item.obj ? (\n                                <TextWithIcon\n                                    value={item.obj}\n                                    themeType={this.props.oContext.themeType}\n                                    lang={I18n.getLanguage()}\n                                />\n                            ) : (\n                                item.label\n                            )\n                        ) : (\n                            ''\n                        )\n                    }\n                    onChange={e => {\n                        this.setState({ value: e.target.value === '_' ? '' : e.target.value }, () =>\n                            this.onChange(this.props.attr, this.state.value),\n                        );\n                    }}\n                >\n                    {this.state.selectOptions.map(it => (\n                        <MenuItem\n                            key={it.value}\n                            value={it.value}\n                            style={it.value === ConfigGeneric.DIFFERENT_VALUE ? { opacity: 0.5 } : {}}\n                        >\n                            {it.obj ? (\n                                <TextWithIcon\n                                    value={it.obj}\n                                    themeType={this.props.oContext.themeType}\n                                    lang={I18n.getLanguage()}\n                                />\n                            ) : (\n                                it.label\n                            )}\n                        </MenuItem>\n                    ))}\n                </Select>\n                {this.props.schema.help ? (\n                    <FormHelperText>\n                        {this.renderHelp(\n                            this.props.schema.help,\n                            this.props.schema.helpLink,\n                            this.props.schema.noTranslation,\n                        )}\n                    </FormHelperText>\n                ) : null}\n            </FormControl>\n        );\n    }\n}\n\nexport default ConfigRoom;\n","import React, { type JSX } from 'react';\n\nimport { InputLabel, FormHelperText, FormControl, Select, MenuItem, ListSubheader } from '@mui/material';\n\nimport { I18n } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemSelect, ConfigItemSelectOption } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\nconst styles: Record<string, any> = {\n    fullWidth: {\n        width: '100%',\n    },\n    noMargin: {\n        '&>div': {\n            marginTop: 0,\n        },\n    },\n};\n\ninterface ConfigInstanceSelectProps extends ConfigGenericProps {\n    schema: ConfigItemSelect;\n}\n\ninterface ConfigInstanceSelectState extends ConfigGenericState {\n    selectOptions?: { label: string; value: number | string; group?: boolean; hidden?: string | boolean }[];\n}\n\nclass ConfigSelect extends ConfigGeneric<ConfigInstanceSelectProps, ConfigInstanceSelectState> {\n    private initialValue: string | string[] = '';\n\n    componentDidMount(): void {\n        super.componentDidMount();\n        const value = ConfigGeneric.getValue(this.props.data, this.props.attr);\n\n        const selectOptions: {\n            label: string;\n            value: number | string;\n            group?: boolean;\n            hidden?: string | boolean;\n        }[] = [];\n\n        (this.props.schema.options || []).forEach(item => {\n            // if optgroup\n            const groupItem: {\n                items: ConfigItemSelectOption[];\n                label: ioBroker.StringOrTranslated;\n                value?: number | string;\n                hidden?: string | boolean;\n            } = item as {\n                items: ConfigItemSelectOption[];\n                label: ioBroker.StringOrTranslated;\n                value?: number | string;\n                hidden?: string | boolean;\n            };\n            if (Array.isArray(groupItem.items)) {\n                selectOptions.push({ label: this.getText(item.label), value: item.value, group: true });\n                groupItem.items.forEach(it =>\n                    selectOptions.push({\n                        label: this.getText(it.label),\n                        value: it.value,\n                        hidden: it.hidden,\n                    }),\n                );\n            } else {\n                selectOptions.push({\n                    label: this.getText(item.label),\n                    value: item.value,\n                    hidden: item.hidden,\n                });\n            }\n        });\n\n        // if __different\n        if (Array.isArray(value)) {\n            this.initialValue = [...value];\n            selectOptions.unshift({\n                label: I18n.t(ConfigGeneric.DIFFERENT_LABEL),\n                value: ConfigGeneric.DIFFERENT_VALUE,\n            });\n            this.setState({ value: ConfigGeneric.DIFFERENT_VALUE, selectOptions });\n        } else {\n            this.setState({ value, selectOptions });\n        }\n    }\n\n    renderItem(error: string, disabled: boolean /* , defaultValue */): JSX.Element {\n        if (!this.state.selectOptions) {\n            return null;\n        }\n\n        const selectOptions = (this.state.selectOptions || []).filter(item => {\n            // if optgroup or no hidden function\n            if (!item.hidden) {\n                return true;\n            }\n\n            if (this.props.custom) {\n                return !this.executeCustom(\n                    item.hidden,\n                    this.props.data,\n                    this.props.customObj,\n                    this.props.oContext.instanceObj,\n                    this.props.arrayIndex,\n                    this.props.globalData,\n                );\n            }\n            return !this.execute(\n                item.hidden,\n                this.props.schema.default,\n                this.props.data,\n                this.props.arrayIndex,\n                this.props.globalData,\n            );\n        });\n\n        const item = selectOptions.find(it => it.value == this.state.value); // let \"==\" be and not ===\n\n        return (\n            <FormControl\n                variant=\"standard\"\n                fullWidth\n                sx={this.props.table !== undefined && styles.noMargin}\n                id={`jsonSelect_${this.props.attr}_${this.props.index || this.props.index === 0 ? this.props.index : ''}`}\n            >\n                {this.props.schema.label ? <InputLabel>{this.getText(this.props.schema.label)}</InputLabel> : null}\n                <Select\n                    variant=\"standard\"\n                    error={!!error}\n                    disabled={!!disabled}\n                    value={this.state.value || '_'}\n                    renderValue={() => this.getText(item?.label, this.props.schema.noTranslation)}\n                    onChange={e => {\n                        this.setState({ value: e.target.value === '_' ? '' : e.target.value }, () => {\n                            let mayBePromise: void | Promise<void>;\n                            if (this.state.value === ConfigGeneric.DIFFERENT_VALUE) {\n                                mayBePromise = this.onChange(this.props.attr, this.initialValue);\n                            } else {\n                                mayBePromise = this.onChange(this.props.attr, this.state.value);\n                            }\n                            if (mayBePromise instanceof Promise) {\n                                mayBePromise.catch(e => console.error(e));\n                            }\n                        });\n                    }}\n                >\n                    {selectOptions.map((it, i) => {\n                        if (it.group) {\n                            return (\n                                <ListSubheader key={i}>\n                                    {this.getText(it.label, this.props.schema.noTranslation)}\n                                </ListSubheader>\n                            );\n                        }\n                        return (\n                            <MenuItem\n                                key={i}\n                                value={it.value}\n                                style={it.value === ConfigGeneric.DIFFERENT_VALUE ? { opacity: 0.5 } : {}}\n                            >\n                                {this.getText(it.label, this.props.schema.noTranslation)}\n                            </MenuItem>\n                        );\n                    })}\n                </Select>\n                {this.props.schema.help ? (\n                    <FormHelperText>\n                        {this.renderHelp(\n                            this.props.schema.help,\n                            this.props.schema.helpLink,\n                            this.props.schema.noTranslation,\n                        )}\n                    </FormHelperText>\n                ) : null}\n            </FormControl>\n        );\n    }\n}\n\nexport default ConfigSelect;\n","import React, { type JSX } from 'react';\n\nimport {\n    InputLabel,\n    MenuItem,\n    FormHelperText,\n    FormControl,\n    Select,\n    TextField,\n    CircularProgress,\n    ListItemText,\n    Checkbox,\n    Chip,\n    Box,\n    InputAdornment,\n    IconButton,\n} from '@mui/material';\n\nimport { Close as CloseIcon } from '@mui/icons-material';\n\nimport { I18n } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemSelectSendTo } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\nconst styles: Record<string, React.CSSProperties> = {\n    menuPaper: {\n        maxHeight: 800,\n    },\n};\n\n/*\nto use this option, your adapter must implement listUart message\n\nadapter.on('message', obj => {\n   if (obj) {\n       switch (obj.command) {\n           case 'command':\n               if (obj.callback) {\n                   try {\n                       const serialport = require('serialport');\n                       if (serialport) {\n                           // read all found serial ports\n                           serialport.list()\n                               .then(ports => {\n                                   adapter.log.info('List of port: ' + JSON.stringify(ports));\n                                   adapter.sendTo(obj.from, obj.command, ports.map(item =>\n                                        ({label: item.path, value: item.path})), obj.callback);\n                               })\n                               .catch(e => {\n                                   adapter.sendTo(obj.from, obj.command, [], obj.callback);\n                                   adapter.log.error(e)\n                               });\n                       } else {\n                           adapter.log.warn('Module serialport is not available');\n                           adapter.sendTo(obj.from, obj.command, [{label: 'Not available', value: ''}], obj.callback);\n                       }\n                   } catch (e) {\n                       adapter.sendTo(obj.from, obj.command, [{label: 'Not available', value: ''}], obj.callback);\n                   }\n               }\n\n               break;\n       }\n   }\n});\n */\n\ninterface ConfigSelectSendToProps extends ConfigGenericProps {\n    schema: ConfigItemSelectSendTo;\n}\n\ninterface ConfigSelectSendToState extends ConfigGenericState {\n    list?: { label: string; value: string; hidden?: boolean }[];\n    running?: boolean;\n}\n\nclass ConfigSelectSendTo extends ConfigGeneric<ConfigSelectSendToProps, ConfigSelectSendToState> {\n    private initialized = false;\n\n    private localContext: string | undefined;\n\n    askInstance(): void {\n        if (this.props.alive) {\n            let data: Record<string, any> | undefined = this.props.schema.data;\n            if (data === undefined && this.props.schema.jsonData) {\n                const dataStr: string = this.getPattern(this.props.schema.jsonData, null, true);\n                try {\n                    data = JSON.parse(dataStr);\n                } catch {\n                    console.error(`Cannot parse json data: ${dataStr}`);\n                }\n            }\n\n            if (data === undefined) {\n                data = null;\n            }\n            this.setState({ running: true }, () => {\n                void this.props.oContext.socket\n                    .sendTo(\n                        `${this.props.oContext.adapterName}.${this.props.oContext.instance}`,\n                        this.props.schema.command || 'send',\n                        data,\n                    )\n                    .then(list => this.setState({ list, running: false }))\n                    .catch(e => {\n                        console.error(`Cannot send command: ${e}`);\n                    });\n            });\n        } else {\n            const value = ConfigGeneric.getValue(this.props.data, this.props.attr);\n\n            this.setState({ value, running: false });\n        }\n    }\n\n    getContext(): string {\n        const localContext: Record<string, any> = {};\n\n        if (Array.isArray(this.props.schema.alsoDependsOn)) {\n            this.props.schema.alsoDependsOn.forEach(\n                attr => (localContext[attr] = ConfigGeneric.getValue(this.props.data, attr)),\n            );\n        }\n\n        return JSON.stringify(localContext);\n    }\n\n    _getValue(): string | string[] {\n        let value =\n            this.state.value === null || this.state.value === undefined\n                ? ConfigGeneric.getValue(this.props.data, this.props.attr)\n                : this.state.value;\n\n        if (this.props.schema.multiple) {\n            if (typeof value === 'string') {\n                value = [value];\n            } else if (value === null || value === undefined) {\n                value = [];\n            }\n        }\n\n        return value;\n    }\n\n    renderItem(error: unknown, disabled: boolean /* , defaultValue */): JSX.Element | string {\n        if (this.props.alive) {\n            const localContext = this.getContext();\n            if (localContext !== this.localContext || !this.initialized) {\n                this.localContext = localContext;\n                setTimeout(() => this.askInstance(), this.initialized ? 300 : 50);\n                this.initialized = true;\n            }\n        }\n\n        const value = this._getValue();\n\n        if (!this.props.alive || (!this.state.running && !this.state.list?.length)) {\n            if (this.props.schema.multiple || this.props.schema.manual === false) {\n                return I18n.t('ra_Cannot retrieve options, as instance is offline');\n            }\n            return (\n                <TextField\n                    variant=\"standard\"\n                    fullWidth\n                    value={value}\n                    error={!!error}\n                    disabled={!!disabled}\n                    onChange={e => {\n                        const value_ = e.target.value;\n                        this.setState({ value: value_ }, () => this.onChange(this.props.attr, (value_ || '').trim()));\n                    }}\n                    placeholder={this.getText(this.props.schema.placeholder)}\n                    label={this.getText(this.props.schema.label)}\n                    helperText={this.renderHelp(\n                        this.props.schema.help,\n                        this.props.schema.helpLink,\n                        this.props.schema.noTranslation,\n                    )}\n                    slotProps={{\n                        input: {\n                            endAdornment:\n                                this.state.value && !this.props.schema.noClearButton ? (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            size=\"small\"\n                                            onClick={() =>\n                                                this.setState({ value: '' }, () => this.onChange(this.props.attr, ''))\n                                            }\n                                        >\n                                            <CloseIcon />\n                                        </IconButton>\n                                    </InputAdornment>\n                                ) : null,\n                        },\n                    }}\n                />\n            );\n        }\n\n        if (this.state.running) {\n            return <CircularProgress size=\"24\" />;\n        }\n\n        const selectOptions = this.state.list.filter(item => {\n            if (!item.hidden) {\n                return true;\n            }\n            if (this.props.custom) {\n                return !this.executeCustom(\n                    item.hidden,\n                    this.props.data,\n                    this.props.customObj,\n                    this.props.oContext.instanceObj,\n                    this.props.arrayIndex,\n                    this.props.globalData,\n                );\n            }\n            return !this.execute(\n                item.hidden,\n                this.props.schema.default,\n                this.props.data,\n                this.props.arrayIndex,\n                this.props.globalData,\n            );\n        });\n\n        const item = selectOptions.find(it => it.value === value);\n\n        return (\n            <FormControl\n                variant=\"standard\"\n                fullWidth\n            >\n                {this.props.schema.label ? <InputLabel>{this.getText(this.props.schema.label)}</InputLabel> : null}\n                <Select\n                    variant=\"standard\"\n                    error={!!error}\n                    multiple={this.props.schema.multiple}\n                    disabled={!!disabled}\n                    // MenuProps={this.props.schema.multiple ? { classes: { paper: this.props.classes.menuPaper } } : undefined}\n                    sx={{\n                        '&.MuiSelect-paper': this.props.schema.multiple ? styles.menuPaper : undefined,\n                    }}\n                    value={value}\n                    renderValue={(val: string | string[]) =>\n                        this.props.schema.multiple ? (\n                            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                                {(val as string[]).map((v: string) => {\n                                    const it = selectOptions.find(_item => _item.value === v);\n                                    if (it || this.props.schema.showAllValues !== false) {\n                                        const label = it?.label || v;\n                                        return (\n                                            <Chip\n                                                key={v}\n                                                label={label}\n                                            />\n                                        );\n                                    }\n                                    return null;\n                                })}\n                            </Box>\n                        ) : (\n                            item?.label || val\n                        )\n                    }\n                    onChange={e => {\n                        const mayBePromise = this.onChange(this.props.attr, e.target.value);\n                        if (mayBePromise instanceof Promise) {\n                            mayBePromise.catch(e => console.error(`Cannot set value: ${e}`));\n                        }\n                    }}\n                >\n                    {selectOptions.map((it, i) => (\n                        <MenuItem\n                            key={i}\n                            value={it.value}\n                        >\n                            {this.props.schema.multiple ? (\n                                <Checkbox\n                                    checked={value.includes(it.value)}\n                                    onClick={() => {\n                                        const _value = JSON.parse(JSON.stringify(this._getValue()));\n                                        const pos = value.indexOf(it.value);\n                                        if (pos !== -1) {\n                                            _value.splice(pos, 1);\n                                        } else {\n                                            _value.push(it.value);\n                                            _value.sort();\n                                        }\n                                        this.setState({ value: _value }, () => this.onChange(this.props.attr, _value));\n                                    }}\n                                />\n                            ) : null}\n                            <ListItemText primary={it.label} />\n                        </MenuItem>\n                    ))}\n                </Select>\n                {this.props.schema.help ? (\n                    <FormHelperText>\n                        {this.renderHelp(\n                            this.props.schema.help,\n                            this.props.schema.helpLink,\n                            this.props.schema.noTranslation,\n                        )}\n                    </FormHelperText>\n                ) : null}\n            </FormControl>\n        );\n    }\n}\n\nexport default ConfigSelectSendTo;\n","import React, { type JSX } from 'react';\n\nimport { Button, CircularProgress } from '@mui/material';\n\nimport { Warning as IconWarning, Error as IconError, Info as IconInfo } from '@mui/icons-material';\n\nimport { DialogConfirm, DialogError, DialogMessage, I18n } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemSendTo } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\nconst styles: Record<string, React.CSSProperties> = {\n    fullWidth: {\n        width: '100%',\n    },\n};\n\nfunction ip2int(ip: string): number {\n    return ip.split('.').reduce((ipInt, octet) => (ipInt << 8) + parseInt(octet, 10), 0) >>> 0;\n}\n\n// copied from iobroker.admin/src-rx/src/Utils.js\nfunction findNetworkAddressOfHost(obj: Record<string, any>, localIp: string): string {\n    const networkInterfaces = obj?.native?.hardware?.networkInterfaces;\n    if (!networkInterfaces) {\n        return null;\n    }\n\n    let hostIp: string | undefined;\n\n    // check ipv4 addresses\n    Object.keys(networkInterfaces).forEach(inter =>\n        networkInterfaces[inter].forEach((ip: Record<string, any>) => {\n            if (ip.internal) {\n                return;\n            }\n            if (localIp.includes(':') && ip.family !== 'IPv6') {\n                return;\n            }\n            if (localIp.includes('.') && !localIp.match(/[^.\\d]/) && ip.family !== 'IPv4') {\n                return;\n            }\n            // if ip4 and not docker or wsl\n            if (\n                ip.family === 'IPv4' &&\n                !ip.address.startsWith('172') &&\n                (localIp === '127.0.0.0' || localIp === 'localhost' || localIp.match(/[^.\\d]/))\n            ) {\n                // if DNS name\n                hostIp = ip.address;\n            } else if (!hostIp) {\n                if (\n                    ip.family === 'IPv4' &&\n                    localIp.includes('.') &&\n                    (ip2int(localIp) & ip2int(ip.netmask)) === (ip2int(ip.address) & ip2int(ip.netmask))\n                ) {\n                    hostIp = ip.address;\n                } else {\n                    hostIp = ip.address;\n                }\n            }\n        }),\n    );\n\n    // check ipv6 addresses\n    if (!hostIp) {\n        Object.keys(networkInterfaces).forEach(inter =>\n            networkInterfaces[inter].forEach((ip: Record<string, any>) => {\n                if (ip.internal) {\n                    return;\n                }\n                if (localIp.includes(':') && ip.family !== 'IPv6') {\n                    return;\n                }\n                if (localIp.includes('.') && !localIp.match(/[^.\\d]/) && ip.family !== 'IPv4') {\n                    return;\n                }\n                if (\n                    ip.family === 'IPv6' &&\n                    (localIp === '127.0.0.0' || localIp === 'localhost' || localIp.match(/[^.\\d]/))\n                ) {\n                    // if DNS name\n                    hostIp = ip.address;\n                } else if (!hostIp) {\n                    if (\n                        ip.family === 'IPv4' &&\n                        localIp.includes('.') &&\n                        (ip2int(localIp) & ip2int(ip.netmask)) === (ip2int(ip.address) & ip2int(ip.netmask))\n                    ) {\n                        hostIp = ip.address;\n                    } else {\n                        hostIp = ip.address;\n                    }\n                }\n            }),\n        );\n    }\n\n    if (!hostIp) {\n        Object.keys(networkInterfaces).forEach(inter => {\n            networkInterfaces[inter].forEach((ip: Record<string, any>) => {\n                if (ip.internal) {\n                    return;\n                }\n                if (localIp.includes(':') && ip.family !== 'IPv6') {\n                    return;\n                }\n                if (localIp.includes('.') && !localIp.match(/[^.\\d]/) && ip.family !== 'IPv4') {\n                    return;\n                }\n                if (localIp === '127.0.0.0' || localIp === 'localhost' || localIp.match(/[^.\\d]/)) {\n                    // if DNS name\n                    hostIp = ip.address;\n                } else {\n                    hostIp = ip.address;\n                }\n            });\n        });\n    }\n\n    if (!hostIp) {\n        Object.keys(networkInterfaces).forEach(inter => {\n            networkInterfaces[inter].forEach((ip: Record<string, any>) => {\n                if (ip.internal) {\n                    return;\n                }\n                hostIp = ip.address;\n            });\n        });\n    }\n\n    return hostIp;\n}\n\ninterface ConfigSendToProps extends ConfigGenericProps {\n    schema: ConfigItemSendTo;\n}\n\ninterface ConfigSendToState extends ConfigGenericState {\n    _error: string;\n    _message: string;\n    hostname: string;\n    running?: boolean;\n}\n\nclass ConfigSendto extends ConfigGeneric<ConfigSendToProps, ConfigSendToState> {\n    async componentDidMount(): Promise<void> {\n        super.componentDidMount();\n\n        let hostname = window.location.hostname;\n        if (this.props.schema.openUrl) {\n            // read admin host\n            const adminInstance = await this.props.oContext.socket.getCurrentInstance();\n            const instanceObj = await this.props.oContext.socket.getObject(\n                `system.adapter.${adminInstance}` as ioBroker.ObjectIDs.Instance,\n            );\n\n            if (instanceObj) {\n                const hostObj = await this.props.oContext.socket.getObject(`system.host.${instanceObj?.common?.host}`);\n                if (hostObj) {\n                    const ip = findNetworkAddressOfHost(hostObj, window.location.hostname);\n                    if (ip) {\n                        hostname = `${ip}:${window.location.port}`;\n                    } else {\n                        console.warn(\n                            `Cannot find suitable IP in host ${instanceObj.common.host} for ${instanceObj._id}`,\n                        );\n                        return;\n                    }\n                }\n            }\n        }\n\n        await new Promise<void>(resolve => {\n            this.setState({ _error: '', _message: '', hostname }, resolve);\n        });\n\n        if (this.props.schema.onLoaded) {\n            this._onClick();\n        }\n    }\n\n    renderErrorDialog(): JSX.Element | null {\n        if (this.state._error) {\n            return (\n                <DialogError\n                    text={this.state._error}\n                    onClose={() => this.setState({ _error: '' })}\n                />\n            );\n        }\n        return null;\n    }\n\n    renderMessageDialog(): JSX.Element | null {\n        if (this.state._message) {\n            return (\n                <DialogMessage\n                    text={this.state._message}\n                    onClose={() => this.setState({ _message: '' })}\n                />\n            );\n        }\n        return null;\n    }\n\n    _onClick(): void {\n        this.props.oContext.onCommandRunning(true);\n        this.setState({ running: true });\n\n        const _origin = `${window.location.protocol}//${window.location.host}${window.location.pathname.replace(/\\/index\\.html$/, '')}`;\n        const _originIp = `${window.location.protocol}//${this.state.hostname.split(':').length > 3 ? `[${this.state.hostname}]` : this.state.hostname}${window.location.pathname.replace(/\\/index\\.html$/, '')}`;\n\n        let data: Record<string, any> = this.props.schema.data;\n        if (data === undefined && this.props.schema.jsonData) {\n            const dataStr = this.getPattern(this.props.schema.jsonData, {\n                _origin,\n                _originIp,\n                ...this.props.data,\n            }, true);\n\n            try {\n                data = JSON.parse(dataStr);\n            } catch {\n                console.error(`Cannot parse json data: ${dataStr}`);\n            }\n        }\n        if (data === undefined) {\n            data = null;\n        }\n        if (this.props.schema.openUrl && !data) {\n            data = {\n                _origin,\n                _originIp,\n            };\n        }\n        let timeout: ReturnType<typeof setTimeout> | undefined;\n        if (this.props.schema.timeout) {\n            timeout = setTimeout(\n                () => {\n                    this.props.oContext.onCommandRunning(false);\n                    this.setState({ _error: I18n.t('ra_Request timed out'), running: false });\n                },\n                parseInt(this.props.schema.timeout as any as string, 10) || 10000,\n            );\n        }\n\n        void this.props.oContext.socket\n            .sendTo(\n                `${this.props.oContext.adapterName}.${this.props.oContext.instance}`,\n                this.props.schema.command || 'send',\n                data,\n            )\n            .then(async (response: Record<string, any>) => {\n                if (timeout) {\n                    clearTimeout(timeout);\n                    timeout = undefined;\n                }\n                if (response?.error) {\n                    if (this.props.schema.error && this.props.schema.error[response.error]) {\n                        let error = this.getText(this.props.schema.error[response.error]);\n                        if (response.args) {\n                            response.args.forEach((arg: string) => (error = error.replace('%s', arg)));\n                        }\n                        this.setState({ _error: error });\n                    } else {\n                        this.setState({ _error: response.error ? I18n.t(response.error) : I18n.t('ra_Error') });\n                    }\n                } else {\n                    if (response?.command) {\n                        // If backend requested to refresh the config\n                        if (this.props.oContext.onBackEndCommand) {\n                            this.props.oContext.onBackEndCommand(response.command);\n                        }\n                        return;\n                    }\n                    if (response?.reloadBrowser && this.props.schema.reloadBrowser) {\n                        window.location.reload();\n                    } else if (response?.openUrl && this.props.schema.openUrl) {\n                        window.open(response.openUrl, response.window || this.props.schema.window || '_blank');\n                    } else if (\n                        response?.result &&\n                        this.props.schema.result &&\n                        this.props.schema.result[response.result]\n                    ) {\n                        let text = this.getText(this.props.schema.result[response.result]);\n                        if (response.args) {\n                            response.args.forEach((arg: string) => (text = text.replace('%s', arg)));\n                        }\n                        window.alert(text);\n                    }\n\n                    if (response?.native && this.props.schema.useNative) {\n                        for (const [attr, val] of Object.entries(response.native)) {\n                            await this.onChangeAsync(attr, val);\n                        }\n\n                        setTimeout(\n                            () => this.props.oContext.forceUpdate(Object.keys(response.native), this.props.data),\n                            300,\n                        );\n                    } else if (response?.result) {\n                        window.alert(\n                            typeof response.result === 'object' ? JSON.stringify(response.result) : response.result,\n                        );\n                    } else {\n                        window.alert(I18n.t('ra_Ok'));\n                    }\n\n                    if (response?.saveConfig) {\n                        this.props.onChange(null, null, null, true);\n                    }\n                }\n            })\n            .catch((e: any) => {\n                if (this.props.schema.error && this.props.schema.error[e.toString()]) {\n                    this.setState({ _error: this.getText(this.props.schema.error[e.toString()]) });\n                } else {\n                    this.setState({ _error: I18n.t(e.toString()) || I18n.t('ra_Error') });\n                }\n            })\n            .then(() => {\n                this.props.oContext.onCommandRunning(false);\n                this.setState({ running: false });\n            });\n    }\n\n    renderDialogConfirm(): JSX.Element | null {\n        if (!this.state.confirmDialog) {\n            return null;\n        }\n        const confirm = this.state.confirmData || this.props.schema.confirm;\n        let icon = null;\n        if (confirm.type === 'warning') {\n            icon = <IconWarning />;\n        } else if (confirm.type === 'error') {\n            icon = <IconError />;\n        } else if (confirm.type === 'info') {\n            icon = <IconInfo />;\n        }\n\n        return (\n            <DialogConfirm\n                title={this.getText(confirm.title) || I18n.t('ra_Please confirm')}\n                text={this.getText(confirm.text)}\n                ok={this.getText(confirm.ok) || I18n.t('ra_Ok')}\n                cancel={this.getText(confirm.cancel) || I18n.t('ra_Cancel')}\n                icon={icon || undefined}\n                onClose={isOk => this.setState({ confirmDialog: false }, () => isOk && this._onClick())}\n            />\n        );\n    }\n\n    renderItem(error: Error | undefined, disabled: boolean): JSX.Element {\n        const icon = this.getIcon();\n\n        return (\n            <div style={styles.fullWidth}>\n                <Button\n                    variant={this.props.schema.variant || undefined}\n                    color={this.props.schema.color || 'grey'}\n                    style={{ ...styles.fullWidth, ...(this.props.schema.controlStyle || undefined) }}\n                    disabled={disabled || !this.props.alive}\n                    startIcon={icon}\n                    title={\n                        this.props.alive\n                            ? this.getText(this.props.schema.title) || ''\n                            : I18n.t('ra_Instance is not alive')\n                    }\n                    onClick={() => {\n                        if (this.props.schema.confirm) {\n                            this.setState({ confirmDialog: true });\n                        } else {\n                            this._onClick();\n                        }\n                    }}\n                >\n                    {this.props.schema.showProcess && this.state.running ? (\n                        <CircularProgress\n                            size={20}\n                            style={{ marginRight: 8 }}\n                        />\n                    ) : null}\n                    {this.getText(this.props.schema.label, this.props.schema.noTranslation)}\n                </Button>\n                {this.renderErrorDialog()}\n                {this.renderMessageDialog()}\n            </div>\n        );\n    }\n}\n\nexport default ConfigSendto;\n","import React, { type JSX } from 'react';\n\nimport { Button } from '@mui/material';\n\nimport { Warning as IconWarning, Error as IconError, Info as IconInfo } from '@mui/icons-material';\n\nimport { DialogConfirm, Icon, I18n } from '@iobroker/adapter-react-v5';\nimport type { ConfigItemSetState } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\nconst styles: Record<string, React.CSSProperties> = {\n    fullWidth: {\n        width: '100%',\n    },\n    icon: {\n        width: 24,\n        height: 24,\n        marginRight: 4,\n    },\n};\n\ninterface ConfigInstanceSelectProps extends ConfigGenericProps {\n    schema: ConfigItemSetState;\n}\n\nclass ConfigSetState extends ConfigGeneric<ConfigInstanceSelectProps, ConfigGenericState> {\n    async _onClick(): Promise<void> {\n        let val = this.props.schema.val;\n        if (typeof val === 'string' && val.includes('${')) {\n            val = this.getPattern(val, null, true);\n            const obj = await this.props.oContext.socket.getObject(this.props.schema.id);\n            if (obj?.common?.type === 'number') {\n                val = parseFloat(val);\n            } else if (obj?.common?.type === 'boolean') {\n                // @ts-expect-error val could be anything\n                val = val === 'true' || val === true || val === '1' || val === 1;\n            }\n        }\n\n        const id = (this.props.schema.id || '').replace(/%INSTANCE%/g, (this.props.oContext.instance || 0).toString());\n\n        try {\n            await this.props.oContext.socket.setState(id, { val, ack: !!this.props.schema.ack });\n            if (this.props.schema.okText) {\n                window.alert(this.getText(this.props.schema.okText));\n            }\n        } catch (e) {\n            if (this.props.schema.error && this.props.schema.error[e.toString()]) {\n                window.alert(this.getText(this.props.schema.error[e.toString()]));\n            } else {\n                window.alert(I18n.t(e.toString()) || I18n.t('ra_Error'));\n            }\n        }\n    }\n\n    renderDialogConfirm(): JSX.Element | null {\n        if (!this.state.confirmDialog) {\n            return null;\n        }\n        const confirm = this.state.confirmData || this.props.schema.confirm;\n        let icon = null;\n        if (confirm.type === 'warning') {\n            icon = <IconWarning />;\n        } else if (confirm.type === 'error') {\n            icon = <IconError />;\n        } else if (confirm.type === 'info') {\n            icon = <IconInfo />;\n        }\n\n        return (\n            <DialogConfirm\n                title={this.getText(confirm.title) || I18n.t('ra_Please confirm')}\n                text={this.getText(confirm.text)}\n                ok={this.getText(confirm.ok) || I18n.t('ra_Ok')}\n                cancel={this.getText(confirm.cancel) || I18n.t('ra_Cancel')}\n                icon={icon}\n                onClose={isOk => this.setState({ confirmDialog: false }, () => isOk && this._onClick())}\n            />\n        );\n    }\n\n    renderItem(_error: string, disabled: boolean /* , defaultValue */): JSX.Element | null {\n        return (\n            <Button\n                variant={this.props.schema.variant || undefined}\n                color={this.props.schema.color || 'grey'}\n                style={styles.fullWidth}\n                disabled={disabled}\n                onClick={async () => {\n                    if (this.props.schema.confirm) {\n                        this.setState({ confirmDialog: true });\n                    } else {\n                        await this._onClick();\n                    }\n                }}\n            >\n                {this.props.schema.icon ? (\n                    <Icon\n                        src={this.props.schema.icon}\n                        style={styles.icon}\n                    />\n                ) : null}\n                {this.getText(this.props.schema.label, this.props.schema.noTranslation)}\n            </Button>\n        );\n    }\n}\n\nexport default ConfigSetState;\n","import React, { type JSX } from 'react';\n\nimport { Box, Typography, Slider } from '@mui/material';\n\nimport type { ConfigItemSlider } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\nconst styles: Record<string, React.CSSProperties> = {\n    fullWidth: {\n        width: '100%',\n    },\n    slider: {\n        marginLeft: 10,\n        marginRight: 10,\n        width: 'calc(100% - 20px)',\n    },\n};\n\ninterface ConfigSliderProps extends ConfigGenericProps {\n    schema: ConfigItemSlider;\n}\n\ninterface ConfigSliderState extends ConfigGenericState {\n    _value: number;\n}\n\nclass ConfigSlider extends ConfigGeneric<ConfigSliderProps, ConfigSliderState> {\n    componentDidMount(): void {\n        super.componentDidMount();\n        const _value = ConfigGeneric.getValue(this.props.data, this.props.attr);\n        this.setState({ _value });\n    }\n\n    static getDerivedStateFromProps(\n        props: ConfigSliderProps,\n        state: ConfigSliderState,\n    ): Partial<ConfigSliderState> | null {\n        if (\n            (props.schema.min !== undefined && props.schema.min < 0) ||\n            (props.schema.max !== undefined && props.schema.max < 0)\n        ) {\n            return null;\n        }\n        const _value = ConfigGeneric.getValue(props.data, props.attr);\n        if (\n            _value === null ||\n            _value === undefined ||\n            _value.toString() !== parseFloat(state._value as any as string).toString()\n        ) {\n            return { _value };\n        }\n\n        return null;\n    }\n\n    renderItem(error: string, disabled: boolean /* , defaultValue */): JSX.Element {\n        const min = this.props.schema.min || 0;\n        const max = this.props.schema.max || 100;\n        const unit = this.props.schema.unit || '';\n\n        const marks = [\n            { value: min, label: min + unit },\n            { value: max, label: max + unit },\n        ];\n\n        return (\n            <Box style={styles.fullWidth}>\n                {this.props.schema.label ? (\n                    <Typography gutterBottom>{this.getText(this.props.schema.label)}</Typography>\n                ) : null}\n                <Slider\n                    style={styles.slider}\n                    value={this.state._value}\n                    getAriaValueText={value => value + unit}\n                    step={this.props.schema.step || (max - min) / 100}\n                    valueLabelDisplay=\"auto\"\n                    marks={marks}\n                    min={min}\n                    max={max}\n                    disabled={!!disabled}\n                    onChange={e => {\n                        const _value = (e.target as HTMLInputElement).value as any as number;\n                        this.setState({ _value }, () => this.onChange(this.props.attr, _value));\n                    }}\n                />\n                {this.props.schema.help ? (\n                    <Typography>\n                        {this.renderHelp(\n                            this.props.schema.help,\n                            this.props.schema.helpLink,\n                            this.props.schema.noTranslation,\n                        )}\n                    </Typography>\n                ) : null}\n            </Box>\n        );\n    }\n}\n\nexport default ConfigSlider;\n","import React, { type JSX } from 'react';\n\nimport {\n    Add,\n    Delete,\n    Edit,\n    Refresh,\n    Search,\n    Wifi,\n    WifiOff,\n    Visibility,\n    LinkOff,\n    Link as LinkIcon,\n    NotListedLocation,\n    PlayArrow,\n    Stop,\n    FastForward,\n    FastRewind,\n    Pause,\n    Lightbulb,\n    Power,\n    Fluorescent,\n    WbIncandescent,\n    Settings,\n    Group,\n    Person,\n    QrCode,\n} from '@mui/icons-material';\n\nexport default function getIconByName(name: string, style?: React.CSSProperties): JSX.Element | null {\n    if (name === 'edit' || name === 'rename') {\n        return <Edit style={style} />;\n    }\n    if (name === 'delete') {\n        return <Delete style={style} />;\n    }\n    if (name === 'refresh') {\n        return <Refresh style={style} />;\n    }\n    if (name === 'newDevice' || name === 'new' || name === 'add') {\n        return <Add style={style} />;\n    }\n    if (name === 'discover' || name === 'search') {\n        return <Search style={style} />;\n    }\n    if (name === 'unpairDevice' || name === 'unpair') {\n        return <LinkOff style={style} />;\n    }\n    if (name === 'pairDevice' || name === 'pair') {\n        return <LinkIcon style={style} />;\n    }\n    if (name === 'identify') {\n        return <NotListedLocation style={style} />;\n    }\n    if (name === 'play') {\n        return <PlayArrow style={style} />;\n    }\n    if (name === 'stop') {\n        return <Stop style={style} />;\n    }\n    if (name === 'pause') {\n        return <Pause style={style} />;\n    }\n    if (name === 'forward' || name === 'next') {\n        return <FastForward style={style} />;\n    }\n    if (name === 'rewind' || name === 'previous') {\n        return <FastRewind style={style} />;\n    }\n    if (name === 'lamp' || name === 'light') {\n        return <Lightbulb style={style} />;\n    }\n    if (name === 'backlight') {\n        return <Fluorescent style={style} />;\n    }\n    if (name === 'dimmer') {\n        return <WbIncandescent style={style} />;\n    }\n    if (name === 'socket') {\n        return <Power style={style} />;\n    }\n    if (name === 'settings') {\n        return <Settings style={style} />;\n    }\n    if (name === 'users' || name === 'group') {\n        return <Group style={style} />;\n    }\n    if (name === 'user') {\n        return <Person style={style} />;\n    }\n    if (name === 'qrcode') {\n        return <QrCode style={style} />;\n    }\n    if (name === 'connection') {\n        return <Wifi style={style} />;\n    }\n    if (name === 'no-connection') {\n        return <WifiOff style={style} />;\n    }\n    if (name === 'visible') {\n        return <Visibility style={style} />;\n    }\n    return null;\n}\n","import React, { type JSX } from 'react';\n\nimport { TextField, IconButton, Button, Switch, Slider, Box } from '@mui/material';\n\nimport { I18n, Icon, type IobTheme } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemState } from '#JC/types';\nimport getIconByName from './Icons';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\nfunction valueBlinkOnce(theme: IobTheme, color?: string | boolean): any {\n    if (typeof color === 'string') {\n        return {\n            '@keyframes newStateAnimationOnceColor': {\n                '0%': {\n                    color,\n                },\n                '100%': {\n                    color: theme.palette.mode === 'dark' ? '#fff' : '#000',\n                },\n            },\n            animation: 'newStateAnimationOnceColor 2s ease-in-out',\n        };\n    }\n    return {\n        '@keyframes newStateAnimationOnce': {\n            '0%': {\n                color: '#00f900',\n            },\n            '80%': {\n                color: theme.palette.mode === 'dark' ? '#518851' : '#008000',\n            },\n            '100%': {\n                color: theme.palette.mode === 'dark' ? '#fff' : '#000',\n            },\n        },\n        animation: 'newStateAnimationOnce 2s ease-in-out',\n    };\n}\n\ninterface ConfigStateProps extends ConfigGenericProps {\n    schema: ConfigItemState;\n}\n\ninterface ConfigStateState extends ConfigGenericState {\n    stateValue?: string | number | boolean | null;\n    controlType?: string;\n    obj?: ioBroker.Object | null;\n}\n\nclass ConfigState extends ConfigGeneric<ConfigStateProps, ConfigStateState> {\n    controlTimeout: ReturnType<typeof setTimeout> | null = null;\n\n    delayedUpdate: { timer: ReturnType<typeof setTimeout> | null; value: string | boolean | number | null } = {\n        timer: null,\n        value: null,\n    };\n\n    getObjectID(): string {\n        if (this.props.schema.foreign) {\n            return this.props.schema.oid;\n        }\n        return `${this.props.schema.system ? 'system.adapter.' : ''}${this.props.oContext.adapterName}.${this.props.oContext.instance}.${this.props.schema.oid}`;\n    }\n\n    async componentDidMount(): Promise<void> {\n        super.componentDidMount();\n        const obj: ioBroker.StateObject = (await this.props.oContext.socket.getObject(\n            this.getObjectID(),\n        )) as ioBroker.StateObject;\n        const controlType = this.props.schema.control || this.detectType(obj);\n\n        const state = await this.props.oContext.socket.getState(this.getObjectID());\n\n        this.setState({ stateValue: state ? state.val : null, controlType, obj }, async () => {\n            await this.props.oContext.socket.subscribeState(this.getObjectID(), this.onStateChanged);\n        });\n    }\n\n    componentWillUnmount(): void {\n        super.componentWillUnmount();\n        this.props.oContext.socket.unsubscribeState(this.getObjectID(), this.onStateChanged);\n        if (this.delayedUpdate.timer) {\n            clearTimeout(this.delayedUpdate.timer);\n            this.delayedUpdate.timer = null;\n        }\n\n        if (this.controlTimeout) {\n            clearTimeout(this.controlTimeout);\n            this.controlTimeout = null;\n            this.props.oContext.socket\n                .setState(this.getObjectID(), this.state.stateValue, false)\n                .catch(e => console.error(`Cannot control value: ${e}`));\n        }\n    }\n\n    onStateChanged = (_id: string, state: ioBroker.State | null | undefined): void => {\n        let val = state ? state.val : null;\n        if (this.state.controlType === 'button' || this.state.controlType === 'switch') {\n            val = !!val;\n            if (this.state.stateValue !== val) {\n                this.setState({ stateValue: val });\n            }\n        } else if (val !== null && (this.state.controlType === 'slider' || this.state.controlType === 'number')) {\n            val = parseFloat(val as unknown as string);\n            console.log(`${Date.now()} Received new value: ${val}`);\n            if (val !== this.state.stateValue) {\n                if (this.delayedUpdate.timer) {\n                    clearTimeout(this.delayedUpdate.timer);\n                    this.delayedUpdate.timer = null;\n                }\n                this.delayedUpdate.value = val;\n                this.delayedUpdate.timer = setTimeout(() => {\n                    this.setState({ stateValue: this.delayedUpdate.value });\n                }, 500);\n            } else if (this.delayedUpdate.timer) {\n                clearTimeout(this.delayedUpdate.timer);\n                this.delayedUpdate.timer = null;\n            }\n        } else if (this.state.stateValue.toString() !== val.toString()) {\n            this.setState({ stateValue: val });\n        }\n    };\n\n    detectType(obj: ioBroker.StateObject): 'button' | 'switch' | 'slider' | 'input' | 'text' {\n        obj = obj || ({} as ioBroker.StateObject);\n        obj.common = obj.common || ({} as ioBroker.StateCommon);\n\n        // read object\n        if (obj.common.type === 'boolean') {\n            if (this.props.schema.controlled !== false) {\n                if (obj.common.read === false || this.props.schema.controlled === true) {\n                    return 'button';\n                }\n                if (obj.common.write || this.props.schema.controlled === true) {\n                    return 'switch';\n                }\n            }\n\n            return 'text';\n        }\n\n        if (obj.common.type === 'number' && this.props.schema.controlled !== false) {\n            if (obj.common.write || this.props.schema.controlled === true) {\n                if (obj.common.max !== undefined) {\n                    return 'slider';\n                }\n                return 'input';\n            }\n            return 'text';\n        }\n\n        if (obj.common.write && this.props.schema.controlled !== false) {\n            return 'input';\n        }\n\n        return 'text';\n    }\n\n    renderItem(_error: string, disabled: boolean/*, defaultValue */): JSX.Element {\n        if (!this.state.obj) {\n            return null;\n        }\n\n        let content: JSX.Element;\n\n        if (this.state.controlType === 'button') {\n            let icon: JSX.Element | null = null;\n            if (this.props.schema.falseImage) {\n                icon = getIconByName(this.props.schema.falseImage);\n            }\n\n            const text = this.getText(\n                this.props.schema.falseText || this.props.schema.label,\n                this.props.schema.noTranslation,\n            );\n\n            if (!text && icon) {\n                content = (\n                    <IconButton\n                        style={this.props.schema.falseTextStyle}\n                        disabled={!!this.props.schema.readOnly}\n                        onClick={async () => {\n                            if (this.props.schema.confirm) {\n                                this.setState({\n                                    confirmDialog: true,\n                                    confirmCallback: async (result: boolean) => {\n                                        if (result) {\n                                            await this.props.oContext.socket.setState(this.getObjectID(), true, false);\n                                        }\n                                    },\n                                });\n                            } else {\n                                await this.props.oContext.socket.setState(this.getObjectID(), true, false);\n                            }\n                        }}\n                    >\n                        {icon}\n                    </IconButton>\n                );\n            } else {\n                content = (\n                    <Button\n                        variant={this.props.schema.variant || 'contained'}\n                        startIcon={icon}\n                        style={this.props.schema.falseTextStyle}\n                        disabled={disabled || !!this.props.schema.readOnly}\n                        onClick={async () => {\n                            if (this.props.schema.confirm) {\n                                this.setState({\n                                    confirmDialog: true,\n                                    confirmCallback: async (result: boolean) => {\n                                        if (result) {\n                                            await this.props.oContext.socket.setState(this.getObjectID(), true, false);\n                                        }\n                                    },\n                                });\n                            } else {\n                                await this.props.oContext.socket.setState(this.getObjectID(), true, false);\n                            }\n                        }}\n                    >\n                        {text || this.getObjectID().split('.').pop()}\n                    </Button>\n                );\n            }\n        } else if (this.state.controlType === 'input') {\n            content = (\n                <TextField\n                    style={{ width: '100%' }}\n                    value={this.state.stateValue}\n                    variant=\"standard\"\n                    slotProps={{\n                        input: {\n                            endAdornment:\n                                this.getText(this.props.schema.unit, this.props.schema.noTranslation) ||\n                                this.state.obj.common.unit ||\n                                undefined,\n                        },\n                        htmlInput: {\n                            readOnly: !!this.props.schema.readOnly,\n                        },\n                    }}\n                    onChange={e => {\n                        this.setState({ stateValue: e.target.value }, (): void => {\n                            if (this.controlTimeout) {\n                                clearTimeout(this.controlTimeout);\n                            }\n                            this.controlTimeout = setTimeout(async () => {\n                                this.controlTimeout = null;\n                                await this.props.oContext.socket.setState(this.getObjectID(), this.state.stateValue, false);\n                            }, this.props.schema.controlDelay || 0);\n                        });\n                    }}\n                    label={this.getText(this.props.schema.label)}\n                    helperText={this.renderHelp(\n                        this.props.schema.help,\n                        this.props.schema.helpLink,\n                        this.props.schema.noTranslation,\n                    )}\n                />\n            );\n        } else if (this.state.obj.common.type === 'number') {\n            const min = this.props.schema.min === undefined ? this.state.obj.common.min || 0 : this.props.schema.min;\n            const max =\n                this.props.schema.max === undefined\n                    ? this.state.obj.common.max === undefined\n                        ? 100\n                        : this.state.obj.common.max\n                    : this.props.schema.max;\n            const step =\n                this.props.schema.step === undefined ? this.state.obj.common.step || 1 : this.props.schema.step;\n\n            content = (\n                <TextField\n                    variant=\"standard\"\n                    style={{ width: '100%' }}\n                    value={this.state.stateValue}\n                    type=\"number\"\n                    slotProps={{\n                        htmlInput: { min, max, step, readOnly: !!this.props.schema.readOnly },\n                        input: {\n                            endAdornment:\n                                this.getText(this.props.schema.unit, this.props.schema.noTranslation) ||\n                                this.state.obj.common.unit ||\n                                undefined,\n                        },\n                    }}\n                    onChange={e => {\n                        this.setState({ stateValue: e.target.value }, (): void => {\n                            if (this.controlTimeout) {\n                                clearTimeout(this.controlTimeout);\n                            }\n                            this.controlTimeout = setTimeout(async () => {\n                                this.controlTimeout = null;\n                                const val = parseFloat(this.state.stateValue as unknown as string);\n                                await this.props.oContext.socket.setState(this.getObjectID(), val, false);\n                            }, this.props.schema.controlDelay || 0);\n                        });\n                    }}\n                    label={this.getText(this.props.schema.label, this.props.schema.noTranslation)}\n                    helperText={this.renderHelp(\n                        this.props.schema.help,\n                        this.props.schema.helpLink,\n                        this.props.schema.noTranslation,\n                    )}\n                />\n            );\n        } else {\n            let fontSize: number | undefined;\n            if (this.props.schema.size === 'normal') {\n                fontSize = 16;\n            } else if (this.props.schema.size === 'large') {\n                fontSize = 20;\n            } else if (typeof this.props.schema.size === 'number') {\n                fontSize = this.props.schema.size;\n            }\n            let label = this.getText(this.props.schema.label, this.props.schema.noTranslation);\n\n            const divStyle: React.CSSProperties = {\n                display: 'flex',\n                alignItems: 'center',\n                fontSize: fontSize || '1rem',\n                gap: 8,\n            };\n\n            if (!this.props.schema.narrow) {\n                divStyle.width = '100%';\n                divStyle.justifyContent = 'space-between';\n            }\n\n            if (label.trim()) {\n                if (!label.trim().endsWith(':') && this.props.schema.addColon) {\n                    label = `${label.trim()}:`;\n                }\n            }\n\n            let blinkStyle: React.CSSProperties | undefined;\n            if (this.props.schema.blinkOnUpdate) {\n                blinkStyle = valueBlinkOnce(this.props.oContext.theme, this.props.schema.blinkOnUpdate);\n            }\n\n            let labelIcon: React.JSX.Element | undefined;\n            if (this.props.schema.labelIcon) {\n                labelIcon = (\n                    <Icon\n                        src={this.props.schema.labelIcon}\n                        style={{ marginRight: 4 }}\n                    />\n                );\n            }\n\n            let labelControl: React.JSX.Element | undefined;\n            if (label && labelIcon) {\n                labelControl = (\n                    <div style={{ whiteSpace: 'nowrap' }}>\n                        {labelIcon}\n                        {label}\n                    </div>\n                );\n            } else if (label) {\n                labelControl = <div style={{ whiteSpace: 'nowrap' }}>{label}</div>;\n            } else if (labelIcon) {\n                labelControl = labelIcon;\n            }\n\n            if (this.state.controlType === 'switch') {\n                let iconFalse: JSX.Element | null = null;\n                const textFalse = this.getText(this.props.schema.falseText, this.props.schema.noTranslation);\n                if (this.props.schema.falseImage) {\n                    iconFalse = getIconByName(this.props.schema.falseImage, textFalse ? { marginLeft: 8 } : undefined);\n                }\n                let iconTrue: JSX.Element | null = null;\n                const textTrue = this.getText(this.props.schema.trueText, this.props.schema.noTranslation);\n                if (this.props.schema.trueImage) {\n                    iconTrue = getIconByName(this.props.schema.trueImage, textTrue ? { marginRight: 8 } : undefined);\n                }\n\n                content = (\n                    <Switch\n                        checked={!!this.state.stateValue}\n                        disabled={!!this.props.schema.readOnly}\n                        onChange={async () => {\n                            if (this.props.schema.confirm) {\n                                this.setState({\n                                    confirmDialog: true,\n                                    confirmCallback: async (result: boolean) => {\n                                        if (result) {\n                                            await this.props.oContext.socket.setState(\n                                                this.getObjectID(),\n                                                !this.state.stateValue,\n                                                false,\n                                            );\n                                        }\n                                    },\n                                });\n                            } else {\n                                await this.props.oContext.socket.setState(this.getObjectID(), !this.state.stateValue, false);\n                            }\n                        }}\n                    />\n                );\n\n                if (textFalse || iconFalse || textTrue || iconTrue) {\n                    content = (\n                        <div style={{ display: 'flex', alignItems: 'center', fontSize: 14 }}>\n                            <span style={this.props.schema.falseTextStyle}>\n                                {textFalse}\n                                {iconFalse}\n                            </span>\n                            {content}\n                            <span style={this.props.schema.trueTextStyle}>\n                                {iconTrue}\n                                {textTrue}\n                            </span>\n                        </div>\n                    );\n                }\n\n                if (labelControl) {\n                    content = (\n                        <div style={divStyle}>\n                            {labelControl}\n                            {content}\n                        </div>\n                    );\n                }\n            } else if (this.state.controlType === 'slider') {\n                let iconFalse: JSX.Element | null = null;\n                const textFalse = this.getText(this.props.schema.falseText, this.props.schema.noTranslation);\n                if (this.props.schema.falseImage) {\n                    iconFalse = getIconByName(this.props.schema.falseImage, textFalse ? { marginLeft: 8 } : undefined);\n                }\n                let iconTrue: JSX.Element | null = null;\n                const textTrue = this.getText(this.props.schema.trueText, this.props.schema.noTranslation);\n                if (this.props.schema.trueImage) {\n                    iconTrue = getIconByName(this.props.schema.trueImage, textTrue ? { marginRight: 8 } : undefined);\n                }\n\n                const min =\n                    this.props.schema.min === undefined ? this.state.obj.common.min || 0 : this.props.schema.min;\n                const max =\n                    this.props.schema.max === undefined\n                        ? this.state.obj.common.max === undefined\n                            ? 100\n                            : this.state.obj.common.max\n                        : this.props.schema.max;\n                const step =\n                    this.props.schema.step === undefined ? this.state.obj.common.step || 1 : this.props.schema.step;\n\n                content = (\n                    <Slider\n                        style={{ width: '100%', flexGrow: 1 }}\n                        min={min}\n                        max={max}\n                        disabled={!!this.props.schema.readOnly}\n                        step={step}\n                        value={this.state.stateValue as number}\n                        valueLabelDisplay=\"auto\"\n                        valueLabelFormat={(value: number) =>\n                            `${value}${this.getText(this.props.schema.unit, this.props.schema.noTranslation) || this.state.obj.common.unit || ''}`\n                        }\n                        onChange={(_e: Event, value: number) => {\n                            this.setState({ stateValue: value }, (): void => {\n                                if (this.controlTimeout) {\n                                    clearTimeout(this.controlTimeout);\n                                }\n                                this.controlTimeout = setTimeout(async () => {\n                                    console.log(`${Date.now()} Send new value: ${this.state.stateValue}`);\n                                    this.controlTimeout = null;\n                                    await this.props.oContext.socket.setState(this.getObjectID(), this.state.stateValue, false);\n                                }, this.props.schema.controlDelay || 0);\n                            });\n                        }}\n                    />\n                );\n\n                if (textFalse || iconFalse || textTrue || iconTrue) {\n                    content = (\n                        <div\n                            style={{\n                                display: 'flex',\n                                width: '100%',\n                                flexGrow: 1,\n                                alignItems: 'center',\n                            }}\n                        >\n                            <span style={{ marginRight: 16, ...this.props.schema.falseTextStyle }}>\n                                {textFalse}\n                                {iconFalse}\n                            </span>\n                            {content}\n                            <span style={{ marginLeft: 16, ...this.props.schema.trueTextStyle }}>\n                                {iconTrue}\n                                {textTrue}\n                            </span>\n                        </div>\n                    );\n                }\n                if (labelControl) {\n                    content = (\n                        <div style={divStyle}>\n                            {labelControl}\n                            {content}\n                        </div>\n                    );\n                }\n            } else if (this.state.obj.common.type === 'boolean') {\n                let icon: JSX.Element | null = null;\n                let text: string;\n                let style: React.CSSProperties | undefined;\n                if (!this.state.stateValue) {\n                    text = this.getText(this.props.schema.falseText, this.props.schema.noTranslation);\n                    if (this.props.schema.falseImage) {\n                        icon = getIconByName(this.props.schema.falseImage, text ? { marginLeft: 8 } : undefined);\n                    }\n                    style = this.props.schema.falseTextStyle;\n                } else {\n                    text = this.getText(this.props.schema.trueText, this.props.schema.noTranslation);\n                    if (this.props.schema.trueImage) {\n                        icon = getIconByName(this.props.schema.falseImage, text ? { marginRight: 8 } : undefined);\n                    }\n                    style = this.props.schema.trueTextStyle;\n                }\n                style = Object.assign(divStyle, style);\n\n                content = (\n                    <div style={style}>\n                        {labelControl}\n                        <Box\n                            style={{ display: 'flex', alignItems: 'center', gap: 8 }}\n                            sx={blinkStyle}\n                            key={this.props.schema.blinkOnUpdate ? text : undefined}\n                        >\n                            {icon}\n                            {text || (this.state.stateValue ? I18n.t('ra_true') : I18n.t('ra_false'))}\n                        </Box>\n                    </div>\n                );\n            } else {\n                // text or HTML\n                const unit =\n                    this.getText(this.props.schema.unit, this.props.schema.noTranslation) || this.state.obj.common.unit;\n\n                let value;\n                let key: string;\n                if (this.state.controlType === 'html') {\n                    key = (this.state.stateValue || '').toString();\n                    value = <span dangerouslySetInnerHTML={{ __html: this.state.stateValue as string }} />;\n                } else if (this.state.stateValue === null) {\n                    value = 'null';\n                    key = value;\n                } else if (this.state.stateValue === undefined) {\n                    value = 'undefined';\n                    key = value;\n                } else {\n                    value = this.state.stateValue.toString();\n                    key = value;\n                }\n\n                content = (\n                    <div style={divStyle}>\n                        {labelControl}\n                        <div style={{ display: 'flex', alignItems: 'baseline', gap: 4 }}>\n                            <Box\n                                sx={blinkStyle}\n                                key={this.props.schema.blinkOnUpdate ? key : undefined}\n                            >\n                                {value}\n                            </Box>\n                            {unit ? <span style={{ opacity: 0.7, fontSize: 'smaller' }}>{unit}</span> : null}\n                        </div>\n                    </div>\n                );\n            }\n        }\n\n        return content;\n    }\n}\n\nexport default ConfigState;\n","import React, { type JSX } from 'react';\n\nimport { Box } from '@mui/material';\n\nimport { type IobTheme, Utils } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemStaticDivider } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\nconst styles: {\n    fullWidth: (theme: IobTheme) => React.CSSProperties;\n    primary: (theme: IobTheme) => React.CSSProperties;\n    secondary: (theme: IobTheme) => React.CSSProperties;\n} = {\n    fullWidth: (theme: IobTheme): React.CSSProperties => ({\n        width: '100%',\n        backgroundColor: theme.palette.mode === 'dark' ? '#FFF' : '#000',\n        borderStyle: 'hidden',\n    }),\n    primary: (theme: IobTheme): React.CSSProperties => ({\n        backgroundColor: theme.palette.primary.main,\n    }),\n    secondary: (theme: IobTheme): React.CSSProperties => ({\n        backgroundColor: theme.palette.secondary.main,\n    }),\n};\n\ninterface ConfigInstanceSelectProps extends ConfigGenericProps {\n    schema: ConfigItemStaticDivider;\n}\n\nclass ConfigStaticDivider extends ConfigGeneric<ConfigInstanceSelectProps, ConfigGenericState> {\n    renderItem(): JSX.Element {\n        return (\n            <Box\n                component=\"hr\"\n                sx={Utils.getStyle(\n                    this.props.oContext.theme,\n                    styles.fullWidth,\n                    this.props.schema.color === 'primary'\n                        ? styles.primary\n                        : this.props.schema.color === 'secondary'\n                          ? styles.secondary\n                          : {\n                                backgroundColor:\n                                    this.props.schema.color || (this.props.oContext.themeType === 'dark' ? '#333' : '#ddd'),\n                            },\n                    {\n                        height: this.props.schema.color ? this.props.schema.height || 2 : this.props.schema.height || 1,\n                    },\n                )}\n            />\n        );\n    }\n}\n\nexport default ConfigStaticDivider;\n","import React, { type JSX } from 'react';\n\nimport { Box } from '@mui/material';\n\nimport type { IobTheme } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemStaticHeader } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\nconst styles: Record<string, any> = {\n    header: (theme: IobTheme): React.CSSProperties => ({\n        width: '100%',\n        background: theme.palette.primary.main,\n        color: theme.palette.primary.contrastText,\n        padding: '4px !important',\n        borderRadius: '3px',\n        marginBlockEnd: 0,\n        marginBlockStart: 0,\n    }),\n};\n\ninterface ConfigInstanceSelectProps extends ConfigGenericProps {\n    schema: ConfigItemStaticHeader;\n}\n\nclass ConfigStaticHeader extends ConfigGeneric<ConfigInstanceSelectProps, ConfigGenericState> {\n    renderItem(/* error: string, disabled: boolean, defaultValue */): JSX.Element {\n        let component: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' = 'h5';\n        switch ((this.props.schema.size || 5).toString()) {\n            case '1':\n                component = 'h1';\n                break;\n\n            case '2':\n                component = 'h2';\n                break;\n\n            case '3':\n                component = 'h3';\n                break;\n\n            case '4':\n                component = 'h4';\n                break;\n\n            case '5':\n            default:\n                component = 'h5';\n                break;\n        }\n        return (\n            <Box\n                component={component}\n                sx={styles.header}\n            >\n                {this.getText(this.props.schema.label || this.props.schema.text, this.props.schema.noTranslation)}\n            </Box>\n        );\n    }\n}\n\nexport default ConfigStaticHeader;\n","import React, { type JSX } from 'react';\n\nimport type { ConfigItemStaticImage } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\ninterface ConfigInstanceSelectProps extends ConfigGenericProps {\n    schema: ConfigItemStaticImage;\n}\n\nclass ConfigStaticImage extends ConfigGeneric<ConfigInstanceSelectProps, ConfigGenericState> {\n    renderItem(/* error: string, disabled: boolean, defaultValue */): JSX.Element {\n        let src = this.props.schema.src;\n        if (\n            src &&\n            !src.startsWith('.') &&\n            !src.startsWith('http') &&\n            !src.startsWith(`adapter/${this.props.oContext.adapterName}/`) &&\n            !src.startsWith(`./adapter/${this.props.oContext.adapterName}/`)\n        ) {\n            src = `adapter/${this.props.oContext.adapterName}/${src}`;\n        }\n\n        return (\n            <img\n                src={src}\n                style={{ cursor: this.props.schema.href ? 'pointer' : undefined, width: '100%', height: '100%' }}\n                onClick={\n                    this.props.schema.href\n                        ? () => this.props.schema.href && window.open(this.props.schema.href, '_blank')\n                        : null\n                }\n                alt=\"\"\n            />\n        );\n    }\n}\n\nexport default ConfigStaticImage;\n","import React, { type JSX } from 'react';\n\nimport { Box, Checkbox } from '@mui/material';\nimport { ContentCopy } from '@mui/icons-material';\nimport { I18n, Icon, type IobTheme, Utils } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemStaticInfo } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\nfunction valueBlinkOnce(theme: IobTheme, force: boolean, color?: string | boolean): any {\n    if (typeof color === 'string') {\n        return {\n            '@keyframes newValueAnimationOnceColor': {\n                '0%': {\n                    color: force ? `${color} !important` : color,\n                },\n                '100%': {\n                    color:\n                        theme.palette.mode === 'dark'\n                            ? force\n                                ? '#fff !important'\n                                : '#fff'\n                            : force\n                              ? '#000 !important'\n                              : '#000',\n                },\n            },\n            animation: 'newValueAnimationOnceColor 2s ease-in-out',\n        };\n    }\n    return {\n        '@keyframes newValueAnimationOnce': {\n            '0%': {\n                color: force ? `#00f900 !important` : '#00f900',\n            },\n            '80%': {\n                color:\n                    theme.palette.mode === 'dark'\n                        ? force\n                            ? `#518851 !important`\n                            : '#518851'\n                        : force\n                          ? `#008000 !important`\n                          : '#008000',\n            },\n            '100%': {\n                color:\n                    theme.palette.mode === 'dark'\n                        ? force\n                            ? '#fff !important'\n                            : '#fff'\n                        : force\n                          ? '#000 !important'\n                          : '#000',\n            },\n        },\n        animation: 'newValueAnimationOnce 2s ease-in-out',\n    };\n}\n\nfunction valueBlink(theme: IobTheme, color?: string | boolean): any {\n    if (typeof color === 'string') {\n        return {\n            '@keyframes blinkAnimationColor': {\n                '0%': {\n                    color,\n                },\n                '100%': {\n                    color: theme.palette.mode === 'dark' ? '#fff' : '#000',\n                },\n            },\n            animation: 'blinkAnimationColor 2s ease-in-out infinite',\n        };\n    }\n    return {\n        '@keyframes blinkAnimation': {\n            '0%': {\n                color: '#00f900',\n            },\n            '80%': {\n                color: theme.palette.mode === 'dark' ? '#518851' : '#008000',\n            },\n            '100%': {\n                color: theme.palette.mode === 'dark' ? '#fff' : '#000',\n            },\n        },\n        animation: 'blinkAnimation 2s ease-in-out infinite',\n    };\n}\n\nconst styles: Record<string, any> = {\n    label: {\n        fontWeight: 'bold',\n        whiteSpace: 'nowrap',\n    },\n    valueImage: {\n        maxHeight: '100%',\n    },\n    valueAndUnit: {\n        display: 'flex',\n        gap: 4,\n        alignItems: 'baseline',\n    },\n    value: {},\n    unit: {\n        fontSize: 'smaller',\n        opacity: 0.7,\n    },\n};\n\ninterface ConfigStaticInfoProps extends ConfigGenericProps {\n    schema: ConfigItemStaticInfo;\n}\n\nclass ConfigStaticInfo extends ConfigGeneric<ConfigStaticInfoProps, ConfigGenericState> {\n    renderItem(_error: string): JSX.Element {\n        let label: string | JSX.Element | JSX.Element[] = this.getText(\n            this.props.schema.text || this.props.schema.label,\n            this.props.schema.noTranslation,\n        );\n        if (this.props.schema.addColon && typeof label === 'string' && !label.trim().endsWith(':')) {\n            label = `${label.trim()}:`;\n        }\n\n        if (\n            label &&\n            (label.includes('<a ') || label.includes('<br') || label.includes('<b>') || label.includes('<i>'))\n        ) {\n            label = Utils.renderTextWithA(label);\n        }\n        let fontSize: number | undefined;\n        if (this.props.schema.size === 'normal') {\n            fontSize = 16;\n        } else if (this.props.schema.size === 'large') {\n            fontSize = 20;\n        } else if (typeof this.props.schema.size === 'number') {\n            fontSize = this.props.schema.size;\n        }\n\n        const divStyle: React.CSSProperties = {\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            position: 'relative',\n            fontSize,\n        };\n\n        if (this.props.schema.narrow) {\n            divStyle.gap = 8;\n        } else {\n            divStyle.justifyContent = 'space-between';\n        }\n\n        let value: React.JSX.Element;\n        let valueTxt: string;\n        if (this.props.schema.data && typeof this.props.schema.data === 'object' && this.props.schema.data.en) {\n            valueTxt = this.getText(this.props.schema.data);\n        } else if (\n            typeof this.props.schema.data === 'object' ||\n            this.props.schema.data === undefined ||\n            this.props.schema.data === null\n        ) {\n            valueTxt = JSON.stringify(this.props.schema.data);\n        } else if (typeof this.props.schema.data === 'number') {\n            valueTxt = this.props.schema.data.toString();\n            if (this.props.oContext.isFloatComma) {\n                valueTxt = valueTxt.replace('.', ',');\n            }\n        } else if (!this.props.schema.booleanAsCheckbox || typeof this.props.schema.data !== 'boolean') {\n            valueTxt = this.props.schema.data.toString();\n        }\n        let multiLine = false;\n\n        if (this.props.schema.booleanAsCheckbox && typeof this.props.schema.data === 'boolean') {\n            value = (\n                <Checkbox\n                    checked={!!value}\n                    disabled\n                    size={\n                        this.props.schema.size === 'small'\n                            ? 'small'\n                            : this.props.schema.size === 'large'\n                              ? 'large'\n                              : undefined\n                    }\n                />\n            );\n        } else if (valueTxt.startsWith('data:image/')) {\n            value = (\n                <div style={{ ...styles.value, ...styles.valueImage, ...(this.props.schema.styleValue || undefined) }}>\n                    <Icon src={valueTxt} />\n                </div>\n            );\n        } else {\n            const valStyle: React.CSSProperties = { ...styles.value, ...(this.props.schema.styleValue || undefined) };\n            if (this.props.schema.html) {\n                value = (\n                    <div\n                        style={valStyle}\n                        dangerouslySetInnerHTML={{ __html: valueTxt }}\n                    />\n                );\n            } else {\n                if (Array.isArray(this.props.schema.data)) {\n                    multiLine = true;\n                    value = (\n                        <div style={valStyle}>\n                            {this.props.schema.data.map((it, i) => (\n                                <div key={i}>\n                                    {typeof it === 'object' || it === null || it === undefined\n                                        ? JSON.stringify(it)\n                                        : it}\n                                </div>\n                            ))}\n                        </div>\n                    );\n                } else {\n                    if (valueTxt.includes('\\n')) {\n                        multiLine = true;\n                        value = <div style={valStyle}>{Utils.renderTextWithA(valueTxt)}</div>;\n                    } else {\n                        value = <div style={valStyle}>{valueTxt}</div>;\n                    }\n                }\n            }\n        }\n\n        if (this.props.schema.blinkOnUpdate && this.props.schema.blink) {\n            const style1 = valueBlinkOnce(this.props.oContext.theme, true, this.props.schema.blinkOnUpdate);\n            const style2 = valueBlink(this.props.oContext.theme, this.props.schema.blink);\n            value = (\n                <Box\n                    key={valueTxt}\n                    sx={{ ...style1, ...style2 }}\n                >\n                    {value}\n                </Box>\n            );\n        } else if (this.props.schema.blinkOnUpdate) {\n            const style = valueBlinkOnce(this.props.oContext.theme, false, this.props.schema.blinkOnUpdate);\n            value = (\n                <Box\n                    key={valueTxt}\n                    sx={style}\n                >\n                    {value}\n                </Box>\n            );\n        } else if (this.props.schema.blink) {\n            const style = valueBlink(this.props.oContext.theme, this.props.schema.blink);\n            value = <Box sx={style}>{value}</Box>;\n        }\n\n        if (this.props.schema.unit) {\n            value = (\n                <div style={styles.valueAndUnit}>\n                    {value}\n                    <div style={{ ...styles.unit, ...(this.props.schema.styleUnit || undefined) }}>\n                        {this.getText(this.props.schema.unit)}\n                    </div>\n                </div>\n            );\n        }\n\n        let labelIcon: React.JSX.Element | undefined;\n        if (this.props.schema.labelIcon) {\n            labelIcon = (\n                <Icon\n                    src={this.props.schema.labelIcon}\n                    style={{ marginRight: 4 }}\n                />\n            );\n        }\n        let copyButton: React.JSX.Element | undefined;\n        if (this.props.schema.copyToClipboard) {\n            copyButton = (\n                <ContentCopy\n                    className=\"staticCopyButton\"\n                    style={{\n                        position: 'absolute',\n                        top: 'calc(50% - 12px)',\n                        right: 0,\n                        cursor: 'pointer',\n                    }}\n                    onClick={() => {\n                        Utils.copyToClipboard(valueTxt);\n                        window.alert(I18n.t('ra_Copied'));\n                    }}\n                />\n            );\n        }\n\n        const boxStyle: Record<string, any> = {\n            '& .staticCopyButton': {\n                display: 'none',\n            },\n            '& .staticCopyButton:action': {\n                transform: 'scale(0.9)',\n            },\n            '&:hover .staticCopyButton': {\n                display: 'block',\n            },\n        };\n        if (this.props.schema.highlight) {\n            boxStyle['&:hover'] = {\n                backgroundColor: this.props.oContext.themeType === 'dark' ? '#51515180' : '#b8b8b880',\n            };\n        }\n        if (multiLine) {\n            divStyle.alignItems = 'top';\n        }\n\n        return (\n            <Box\n                component=\"div\"\n                style={divStyle}\n                sx={boxStyle}\n            >\n                <div style={{ ...styles.label, ...(this.props.schema.styleLabel || undefined) }}>\n                    {labelIcon}\n                    {label}\n                </div>\n                {value}\n                {copyButton}\n            </Box>\n        );\n    }\n}\n\nexport default ConfigStaticInfo;\n","import React, { type JSX } from 'react';\n\nimport { Box, Button } from '@mui/material';\n\nimport { type IobTheme, Utils } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemStaticText } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\nconst styles: Record<string, any> = {\n    fullWidth: {\n        height: '100%',\n        width: '100%',\n    },\n    link: (theme: IobTheme): React.CSSProperties => ({\n        textDecoration: 'underline',\n        color: theme.palette.mode === 'dark' ? '#4dabf5' : '#254e72',\n        cursor: 'pointer',\n    }),\n};\n\n// eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\nfunction onLink(href: string, target: '_blank' | '_self' | string, instanceId: string): void {\n    let _target;\n    let url = '';\n    if (!href) {\n        url = `#tab-instances/config/${instanceId}`;\n        _target = target || '_self';\n    } else if (href.toString().startsWith('#')) {\n        _target = target || '_self';\n        url = href;\n    } else if (href.toString().startsWith('/')) {\n        _target = target || '_self';\n        url = href;\n    } else if (href.startsWith('http://') || href.startsWith('https://')) {\n        _target = target || '_blank';\n        url = href;\n    } else {\n        url = `#tab-instances/config/${instanceId}/${href}`;\n        _target = target || '_self';\n    }\n    if (_target === '_self') {\n        // close dialog\n        setTimeout(\n            (_url: string) => {\n                if (_url.startsWith('#')) {\n                    window.location.hash = _url;\n                } else if (_url.startsWith('/')) {\n                    url = `${window.location.protocol}:${window.location.host}${url}`;\n                } else if (_url.startsWith('http://') || _url.startsWith('https://')) {\n                    window.location.href = _url;\n                }\n            },\n            100,\n            url,\n        );\n    } else {\n        if (url.startsWith('#')) {\n            url = `${window.location.protocol}:${window.location.host}${window.location.pathname}${url}`;\n        } else if (url.startsWith('/')) {\n            url = `${window.location.protocol}:${window.location.host}${url}`;\n        }\n\n        window.open(url, _target);\n    }\n}\n\ninterface ConfigStaticTextProps extends ConfigGenericProps {\n    schema: ConfigItemStaticText;\n}\n\nclass ConfigStaticText extends ConfigGeneric<ConfigStaticTextProps, ConfigGenericState> {\n    renderItem(_error: string, disabled: boolean /* , defaultValue */): JSX.Element {\n        if (this.props.schema.button) {\n            const icon = this.getIcon();\n            return (\n                <Button\n                    variant={this.props.schema.variant || undefined}\n                    color={this.props.schema.color || 'grey'}\n                    style={{ ...styles.fullWidth, ...(this.props.schema.controlStyle || undefined) }}\n                    disabled={disabled}\n                    startIcon={icon}\n                    onClick={\n                        this.props.schema.href\n                            ? () => {\n                                  // calculate one more time just before call\n                                  const href = this.props.schema.href\n                                      ? this.getText(this.props.schema.href, true)\n                                      : null;\n                                  if (href) {\n                                      if (this.props.oContext.onBackEndCommand) {\n                                          this.props.oContext.onBackEndCommand({\n                                              command: 'link',\n                                              url: href,\n                                              target: this.props.schema.target,\n                                              close: this.props.schema.close,\n                                          });\n                                      } else {\n                                          onLink(\n                                              href,\n                                              this.props.schema.target,\n                                              `${this.props.oContext.adapterName}.${this.props.oContext.instance}`,\n                                          );\n                                      }\n                                  }\n                              }\n                            : null\n                    }\n                >\n                    {this.getText(this.props.schema.text || this.props.schema.label, this.props.schema.noTranslation)}\n                </Button>\n            );\n        }\n        let text: string | JSX.Element | JSX.Element[] = this.getText(\n            this.props.schema.text || this.props.schema.label,\n            this.props.schema.noTranslation,\n        );\n        if (text && (text.includes('<a ') || text.includes('<br') || text.includes('<b>') || text.includes('<i>'))) {\n            text = Utils.renderTextWithA(text);\n        }\n\n        return (\n            <Box\n                component=\"span\"\n                style={{ ...(this.props.schema.controlStyle || undefined) }}\n                sx={this.props.schema.href ? styles.link : undefined}\n                onClick={\n                    this.props.schema.href\n                        ? () => {\n                              // calculate one more time just before call\n                              const href = this.props.schema.href ? this.getText(this.props.schema.href, true) : null;\n                              if (href) {\n                                  if (this.props.oContext.onBackEndCommand) {\n                                      this.props.oContext.onBackEndCommand({\n                                          command: 'link',\n                                          url: href,\n                                          target: this.props.schema.target || '_blank',\n                                          close: this.props.schema.close,\n                                      });\n                                  } else {\n                                      onLink(\n                                          href,\n                                          this.props.schema.target || '_blank',\n                                          `${this.props.oContext.adapterName}.${this.props.oContext.instance}`,\n                                      );\n                                  }\n                              }\n                          }\n                        : null\n                }\n            >\n                {text}\n            </Box>\n        );\n    }\n}\n\nexport default ConfigStaticText;\n","import React, { createRef, type JSX, type RefObject } from 'react';\nimport Dropzone from 'react-dropzone';\n\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    IconButton,\n    InputAdornment,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    TableSortLabel,\n    TextField,\n    Toolbar,\n    Tooltip,\n    Typography,\n    FormHelperText,\n} from '@mui/material';\n\nimport {\n    Add as AddIcon,\n    Delete as DeleteIcon,\n    Close as CloseIcon,\n    ArrowUpward as UpIcon,\n    ArrowDownward as DownIcon,\n    FilterAlt as IconFilterOn,\n    FilterAltOff as IconFilterOff,\n    ContentCopy as CopyContentIcon,\n    Download as ExportIcon,\n    Warning as ErrorIcon,\n    UploadFile as ImportIcon,\n    Close as IconClose,\n} from '@mui/icons-material';\n\nimport { I18n } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemTableIndexed, ConfigItemPanel, ConfigItemTable } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\nimport ConfigPanel from './ConfigPanel';\n\nconst MAX_SIZE = 1024 * 1024; // 1MB\n\nconst styles: Record<string, React.CSSProperties> = {\n    fullWidth: {\n        width: '100%',\n    },\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: 16,\n        backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    },\n    headerText: {\n        width: '100%',\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n    label: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    // highlight: (theme: IobTheme): React.CSSProperties => (theme.palette.mode === 'light'\n    //     ? {\n    //         color: theme.palette.secondary.main,\n    //         // backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n    //     }\n    //     : {\n    //         color: theme.palette.text.primary,\n    //         backgroundColor: theme.palette.secondary.dark,\n    //     }),\n    title: {\n        flex: '1 1 100%',\n    },\n    rootTool: {\n        paddingLeft: 16,\n        paddingRight: 8,\n    },\n    silver: {\n        opacity: 0.2,\n    },\n    flex: {\n        display: 'flex',\n        alignItems: 'baseline',\n    },\n    filteredOut: {\n        padding: 10,\n        display: 'flex',\n        textAlign: 'center',\n    },\n    buttonEmpty: {\n        width: 34,\n        display: 'inline-block',\n    },\n    buttonCell: {\n        whiteSpace: 'nowrap',\n    },\n\n    dropZone: {\n        width: '100%',\n        height: 100,\n        position: 'relative',\n    },\n    dropZoneEmpty: {},\n    uploadDiv: {\n        position: 'relative',\n        width: '100%',\n        minHeight: 300,\n        opacity: 0.9,\n        marginTop: 30,\n        cursor: 'pointer',\n        outline: 'none',\n    },\n    uploadDivDragging: {\n        opacity: 1,\n        background: 'rgba(128,255,128,0.1)',\n    },\n    image: {\n        objectFit: 'contain',\n        margin: 'auto',\n        display: 'flex',\n        width: '100%',\n        height: '100%',\n    },\n    uploadCenterDiv: {\n        margin: 5,\n        border: '3px dashed grey',\n        borderRadius: 5,\n        width: 'calc(100% - 10px)',\n        height: 'calc(100% - 10px)',\n        minHeight: 300,\n        position: 'relative',\n        display: 'flex',\n    },\n    uploadCenterIcon: {\n        paddingTop: 10,\n        width: 48,\n        height: 48,\n    },\n    uploadCenterText: {\n        fontSize: 16,\n    },\n    uploadCenterTextAndIcon: {\n        textAlign: 'center',\n        position: 'absolute',\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonRemoveWrapper: {\n        position: 'absolute',\n        zIndex: 222,\n        right: 0,\n    },\n    error: {\n        border: '2px solid red',\n        boxSizing: 'border-box',\n    },\n    tooltip: {\n        pointerEvents: 'none',\n    },\n};\n\nfunction objectToArray(\n    object: Record<string, any>,\n    nameOfFirstAttr: string,\n    nameOfSecondAttr?: string,\n): Record<string, any>[] {\n    nameOfFirstAttr = nameOfFirstAttr || 'key';\n\n    const array: Record<string, any>[] = [];\n    Object.keys(object).forEach(key => {\n        const item: Record<string, any> = {};\n        item[nameOfFirstAttr] = key;\n\n        if (nameOfSecondAttr) {\n            item[nameOfSecondAttr] = object[key];\n            array.push(item);\n        } else {\n            array.push(Object.assign(item, object[key]));\n        }\n    });\n\n    return array;\n}\n\nfunction arrayToObject(\n    array: Record<string, any>[],\n    nameOfFirstAttr: string,\n    nameOfSecondAttr?: string,\n): Record<string, any> {\n    nameOfFirstAttr = nameOfFirstAttr || 'key';\n\n    const object: Record<string, any> = {};\n\n    array.forEach((row: Record<string, any>) => {\n        let key = row[nameOfFirstAttr];\n        if (key === null || key === undefined) {\n            key = '';\n        }\n        delete row[nameOfFirstAttr];\n\n        if (nameOfSecondAttr) {\n            object[key] = row[nameOfSecondAttr];\n        } else {\n            object[key] = row;\n        }\n    });\n\n    return object;\n}\n\ninterface ConfigTableProps extends ConfigGenericProps {\n    schema: ConfigItemTable;\n}\n\ninterface ConfigTableState extends ConfigGenericState {\n    value: Record<string, any>[];\n    visibleValue: number[] | null;\n    orderBy: string;\n    order: 'asc' | 'desc';\n    iteration: number;\n    filterOn: string[];\n    errorMessage: string;\n    showImportDialog: boolean;\n    showTypeOfImportDialog: Record<string, any>[] | false;\n    instanceObj: ioBroker.InstanceObject;\n    customObj: Record<string, any>;\n    uploadFile: boolean | 'dragging';\n    icon: boolean;\n}\n\nfunction encrypt(secret: string, value: string): string {\n    let result = '';\n    for (let i = 0; i < value.length; i++) {\n        result += String.fromCharCode(secret[i % secret.length].charCodeAt(0) ^ value.charCodeAt(i));\n    }\n    return result;\n}\nfunction decrypt(secret: string, value: string): string {\n    let result = '';\n    for (let i = 0; i < value.length; i++) {\n        result += String.fromCharCode(secret[i % secret.length].charCodeAt(0) ^ value.charCodeAt(i));\n    }\n    return result;\n}\n\nclass ConfigTable extends ConfigGeneric<ConfigTableProps, ConfigTableState> {\n    private readonly filterRefs: Record<string, RefObject<HTMLInputElement>>;\n\n    private typingTimer: ReturnType<typeof setTimeout> | null = null;\n\n    private secret: string = 'Zgfr56gFe87jJOM';\n\n    constructor(props: ConfigTableProps) {\n        super(props);\n        this.filterRefs = {};\n        this.props.schema.items = this.props.schema.items || [];\n        this.props.schema.items.forEach((el: ConfigItemTableIndexed) => {\n            if (el.filter) {\n                this.filterRefs[el.attr] = createRef();\n            }\n        });\n    }\n\n    /**\n     * React lifecycle hook, called once as component is mounted\n     */\n    async componentDidMount(): Promise<void> {\n        super.componentDidMount();\n        const _value: Record<string, any>[] | Record<string, any> =\n            ConfigGeneric.getValue(this.props.data, this.props.attr) || [];\n        let value: Record<string, any>[];\n\n        // if the list is given as an object\n        if (this.props.schema.objKeyName) {\n            value = objectToArray(\n                _value as Record<string, any>,\n                this.props.schema.objKeyName,\n                this.props.schema.objValueName,\n            );\n        } else {\n            value = _value as Record<string, any>[];\n        }\n\n        if (!Array.isArray(value)) {\n            value = [];\n        }\n\n        if (this.props.schema.encryptedAttributes) {\n            const systemConfig = await this.props.oContext.socket.getCompactSystemConfig();\n            this.secret = systemConfig?.native.secret || this.secret;\n\n            _value.forEach((el: Record<string, any>) => {\n                this.props.schema.encryptedAttributes.forEach((attr: string) => {\n                    if (el[attr]) {\n                        el[attr] = decrypt(this.secret, el[attr]);\n                    }\n                });\n            });\n        }\n\n        this.setState(\n            {\n                value,\n                visibleValue: null,\n                orderBy: /* this.props.schema.items.length ? this.props.schema.items[0].attr : */ '',\n                order: 'asc',\n                iteration: 0,\n                filterOn: [],\n            },\n            () => this.validateUniqueProps(),\n        );\n    }\n\n    componentWillUnmount(): void {\n        if (this.typingTimer) {\n            clearTimeout(this.typingTimer);\n            this.typingTimer = null;\n        }\n        super.componentWillUnmount();\n    }\n\n    itemTable(attrItem: string, data: Record<string, any>, idx: number): JSX.Element | null {\n        const { schema } = this.props;\n        const schemaForAttribute =\n            schema.items && schema.items.find((el: ConfigItemTableIndexed) => el.attr === attrItem);\n\n        if (!schemaForAttribute) {\n            return null;\n        }\n\n        const schemaItem = {\n            items: {\n                [attrItem]: schemaForAttribute,\n            },\n        };\n\n        return (\n            <ConfigPanel\n                oContext={this.props.oContext}\n                alive={this.props.alive}\n                arrayIndex={idx}\n                changed={this.props.changed}\n                common={this.props.common}\n                custom\n                data={data}\n                globalData={this.props.data}\n                index={idx + this.state.iteration}\n                onChange={(attr: string, valueChange: any) => {\n                    const newObj: Record<string, any>[] = JSON.parse(JSON.stringify(this.state.value));\n                    newObj[idx][attr] = valueChange;\n                    this.setState({ value: newObj }, () => {\n                        this.validateUniqueProps();\n                        this.onChangeWrapper(newObj, true);\n                    });\n                }}\n                onError={(error: string, attr?: string) => this.onError(error, attr)}\n                originalData={this.props.originalData}\n                schema={schemaItem as ConfigItemPanel}\n                table\n                themeName={this.props.themeName}\n            />\n        );\n    }\n\n    /**\n     * Validate that columns configured in `uniqueColumns` have unique values\n     */\n    validateUniqueProps(): void {\n        if (!this.props.schema.uniqueColumns) {\n            return;\n        }\n\n        for (const uniqueCol of this.props.schema.uniqueColumns) {\n            const allVals: (string | number)[] = [];\n            const found = this.state.value.find(entry => {\n                const val = entry[uniqueCol];\n                if (allVals.includes(val)) {\n                    this.onError(uniqueCol, 'is not unique');\n                    this.setState({\n                        errorMessage: I18n.t('Non-allowed duplicate entry \"%s\" in column \"%s\"', val, uniqueCol),\n                    });\n                    return true;\n                }\n                allVals.push(val);\n                return false;\n            });\n\n            if (!found) {\n                this.onError(uniqueCol, null);\n                this.setState({ errorMessage: '' });\n            }\n        }\n    }\n\n    static descendingComparator(a: Record<string, any>, b: Record<string, any>, orderBy: string): number {\n        if (b[orderBy] < a[orderBy]) {\n            return -1;\n        }\n        if (b[orderBy] > a[orderBy]) {\n            return 1;\n        }\n        return 0;\n    }\n\n    static getComparator(\n        order: 'desc' | 'asc',\n        orderBy: string,\n    ): (a: Record<string, any>, b: Record<string, any>) => number {\n        return order === 'desc'\n            ? (a: Record<string, any>, b: Record<string, any>) => ConfigTable.descendingComparator(a, b, orderBy)\n            : (a: Record<string, any>, b: Record<string, any>) => -ConfigTable.descendingComparator(a, b, orderBy);\n    }\n\n    static getFilterValue(el: React.RefObject<HTMLInputElement>): string {\n        return (el?.current?.children[0]?.children[0] as HTMLInputElement)?.value;\n    }\n\n    static setFilterValue(el: React.RefObject<HTMLInputElement>, filterValue: string): string {\n        return ((el.current.children[0].children[0] as HTMLInputElement).value = filterValue);\n    }\n\n    handleRequestSort = (property: string, orderCheck: boolean = false): void => {\n        const { order, orderBy } = this.state;\n        if (orderBy) {\n            const isAsc = orderBy === property && order === 'asc';\n            const newOrder = orderCheck ? order : isAsc ? 'desc' : 'asc';\n            const newValue = this.stableSort(newOrder, property);\n            this.setState({ order: newOrder, orderBy: property, iteration: this.state.iteration + 10000 }, () =>\n                this.applyFilter(false, newValue),\n            );\n        }\n    };\n\n    stableSort = (order: 'desc' | 'asc', orderBy: string): Record<string, any>[] => {\n        const { value } = this.state;\n        const comparator = ConfigTable.getComparator(order, orderBy);\n        const stabilizedThis = value.map((el, index) => ({ el, index }));\n\n        stabilizedThis.sort((a, b) => {\n            const order_ = comparator(a.el, b.el);\n            if (order_ !== 0) {\n                return order_;\n            }\n            return a.index - b.index;\n        });\n\n        return stabilizedThis.map(el => el.el);\n    };\n\n    enhancedTableHead(buttonsWidth: number, doAnyFilterSet: boolean): JSX.Element {\n        const { schema } = this.props;\n        const { order, orderBy } = this.state;\n        return (\n            <TableHead>\n                <TableRow>\n                    {schema.items &&\n                        schema.items.map((headCell: ConfigItemTableIndexed, i: number) => (\n                            <TableCell\n                                style={{\n                                    width:\n                                        typeof headCell.width === 'string' && headCell.width.endsWith('%')\n                                            ? headCell.width\n                                            : headCell.width,\n                                }}\n                                key={`${headCell.attr}_${i}`}\n                                align=\"left\"\n                                sortDirection={orderBy === headCell.attr ? order : false}\n                            >\n                                <div\n                                    style={{\n                                        ...styles.flex,\n                                        ...(schema.showFirstAddOnTop ? { flexDirection: 'column' } : undefined),\n                                    }}\n                                >\n                                    {!i && !schema.noDelete ? (\n                                        <Tooltip\n                                            title={\n                                                doAnyFilterSet\n                                                    ? I18n.t('ra_Cannot add items with set filter')\n                                                    : I18n.t('ra_Add row')\n                                            }\n                                            slotProps={{ popper: { sx: styles.tooltip } }}\n                                        >\n                                            <span>\n                                                <IconButton\n                                                    size=\"small\"\n                                                    color=\"primary\"\n                                                    disabled={!!doAnyFilterSet && !this.props.schema.allowAddByFilter}\n                                                    onClick={this.onAdd}\n                                                >\n                                                    <AddIcon />\n                                                </IconButton>\n                                            </span>\n                                        </Tooltip>\n                                    ) : null}\n                                    {headCell.sort && (\n                                        <TableSortLabel\n                                            active\n                                            style={orderBy !== headCell.attr ? styles.silver : undefined}\n                                            direction={orderBy === headCell.attr ? order : 'asc'}\n                                            onClick={() => this.handleRequestSort(headCell.attr)}\n                                        />\n                                    )}\n                                    {headCell.filter && this.state.filterOn.includes(headCell.attr) ? (\n                                        <TextField\n                                            variant=\"standard\"\n                                            ref={this.filterRefs[headCell.attr]}\n                                            onChange={() => this.applyFilter()}\n                                            title={I18n.t('ra_You can filter entries by entering here some text')}\n                                            slotProps={{\n                                                input: {\n                                                    endAdornment: ConfigTable.getFilterValue(\n                                                        this.filterRefs[headCell.attr],\n                                                    ) && (\n                                                        <InputAdornment position=\"end\">\n                                                            <IconButton\n                                                                size=\"small\"\n                                                                onClick={() => {\n                                                                    ConfigTable.setFilterValue(\n                                                                        this.filterRefs[headCell.attr],\n                                                                        '',\n                                                                    );\n                                                                    this.applyFilter();\n                                                                }}\n                                                            >\n                                                                <CloseIcon />\n                                                            </IconButton>\n                                                        </InputAdornment>\n                                                    ),\n                                                },\n                                            }}\n                                            fullWidth\n                                            placeholder={this.getText(headCell.title)}\n                                        />\n                                    ) : (\n                                        <span style={styles.headerText}>{this.getText(headCell.title)}</span>\n                                    )}\n                                    {headCell.filter ? (\n                                        <IconButton\n                                            title={I18n.t('ra_Show/hide filter input')}\n                                            size=\"small\"\n                                            onClick={() => {\n                                                const filterOn = [...this.state.filterOn];\n                                                const pos = this.state.filterOn.indexOf(headCell.attr);\n                                                if (pos === -1) {\n                                                    filterOn.push(headCell.attr);\n                                                } else {\n                                                    filterOn.splice(pos, 1);\n                                                }\n                                                this.setState({ filterOn }, () => {\n                                                    if (\n                                                        pos &&\n                                                        ConfigTable.getFilterValue(this.filterRefs[headCell.attr])\n                                                    ) {\n                                                        ConfigTable.setFilterValue(this.filterRefs[headCell.attr], '');\n                                                        this.applyFilter();\n                                                    }\n                                                });\n                                            }}\n                                        >\n                                            {this.state.filterOn.includes(headCell.attr) ? (\n                                                <IconFilterOff />\n                                            ) : (\n                                                <IconFilterOn />\n                                            )}\n                                        </IconButton>\n                                    ) : null}\n                                </div>\n                            </TableCell>\n                        ))}\n                    {!schema.noDelete && (\n                        <TableCell\n                            style={{\n                                paddingLeft: 20,\n                                paddingRight: 20,\n                                width: buttonsWidth,\n                                textAlign: 'right',\n                            }}\n                            padding=\"checkbox\"\n                        >\n                            {schema.import ? (\n                                <IconButton\n                                    style={{ marginRight: 10 }}\n                                    size=\"small\"\n                                    onClick={() => this.setState({ showImportDialog: true })}\n                                    title={I18n.t('ra_import data from %s file', 'CSV')}\n                                >\n                                    <ImportIcon />\n                                </IconButton>\n                            ) : null}\n                            {schema.export ? (\n                                <IconButton\n                                    style={{ marginRight: 10 }}\n                                    size=\"small\"\n                                    onClick={() => this.onExport()}\n                                    title={I18n.t('ra_Export data to %s file', 'CSV')}\n                                >\n                                    <ExportIcon />\n                                </IconButton>\n                            ) : null}\n                            <IconButton\n                                disabled\n                                size=\"small\"\n                            >\n                                <DeleteIcon />\n                            </IconButton>\n                        </TableCell>\n                    )}\n                </TableRow>\n            </TableHead>\n        );\n    }\n\n    onDelete = (index: number) => (): void => {\n        const newValue: Record<string, any>[] = JSON.parse(JSON.stringify(this.state.value));\n        newValue.splice(index, 1);\n\n        this.setState({ value: newValue, iteration: this.state.iteration + 10_000 }, () =>\n            this.applyFilter(false, null, () => this.onChangeWrapper(newValue)),\n        );\n    };\n\n    onExport(): void {\n        const { schema } = this.props;\n        const { value } = this.state;\n        const cols = schema.items.map((it: ConfigItemTableIndexed) => it.attr);\n        const lines = [cols.join(';')];\n        value.forEach(row => {\n            const line: string[] = [];\n            schema.items.forEach((it: ConfigItemTableIndexed) => {\n                if (row[it.attr]?.includes(';')) {\n                    line.push(`\"${row[it.attr]}\"`);\n                } else {\n                    line.push(row[it.attr] === undefined || row[it.attr] === null ? '' : row[it.attr]);\n                }\n            });\n            lines.push(line.join(';'));\n        });\n        const el = document.createElement('a');\n        el.setAttribute('href', `data:text/csv;charset=utf-8,${encodeURIComponent(lines.join('\\n'))}`);\n        const now = new Date();\n        el.setAttribute(\n            'download',\n            `${now.getFullYear()}_${(now.getMonth() + 1).toString().padStart(2, '0')}_${now.getDate().toString().padStart(2, '0')}_${this.props.oContext.adapterName}.${this.props.oContext.instance}_${this.props.attr}.csv`,\n        );\n\n        el.style.display = 'none';\n        document.body.appendChild(el);\n\n        el.click();\n\n        document.body.removeChild(el);\n    }\n\n    onImport(text: string): void {\n        const lines = text.split('\\n').map((line: string) => line.replace('\\r', '').trim());\n        // the first line is header\n        const { schema } = this.props;\n\n        const header = lines\n            .shift()\n            .split(';')\n            .filter(it => it && schema.items.find((it2: ConfigItemTableIndexed) => it2.attr === it));\n\n        const values: Record<string, any>[] = [];\n        lines.forEach((line: string) => {\n            const parts: string[] = line.split(';');\n            const obj: Record<string, string | number | boolean> = {};\n            for (let p = 0; p < parts.length; p++) {\n                let value = parts[p];\n                if (value.startsWith('\"')) {\n                    value = value.substring(1);\n                    while (p < parts.length && !value.endsWith('\"')) {\n                        value += `;${parts[++p]}`;\n                    }\n                    value = value.substring(0, value.length - 1);\n                }\n\n                let val: string | number | boolean = value;\n\n                if (value === 'true') {\n                    val = true;\n                } else if (value === 'false') {\n                    val = false;\n                } else if (window.isFinite(value as any as number)) {\n                    const attr = this.props.schema.items.find((it: ConfigItemTableIndexed) => it.attr === header[p]);\n                    if (attr && attr.type === 'number') {\n                        // if a type of attribute is a \"number\"\n                        val = parseFloat(value);\n                    } else {\n                        val = value;\n                    }\n                } else {\n                    val = value;\n                }\n\n                obj[header[p]] = val;\n            }\n            values.push(obj);\n        });\n\n        if (values.length) {\n            if (this.state.value?.length) {\n                this.setState({ showTypeOfImportDialog: values, showImportDialog: false });\n            } else {\n                this.setState({ value: values, showImportDialog: false });\n            }\n        } else {\n            window.alert('ra_No data found in file');\n        }\n    }\n\n    onClone = (index: number) => (): void => {\n        const newValue: Record<string, any>[] = JSON.parse(JSON.stringify(this.state.value));\n        const cloned: Record<string, any> = JSON.parse(JSON.stringify(newValue[index]));\n        if (typeof this.props.schema.clone === 'string' && typeof cloned[this.props.schema.clone] === 'string') {\n            let i = 1;\n            let text = cloned[this.props.schema.clone];\n            const pattern = text.match(/(\\d+)$/);\n            if (pattern) {\n                text = text.replace(pattern[0], '');\n                i = parseInt(pattern[0], 10) + 1;\n            } else {\n                text += '_';\n            }\n            while (\n                newValue.find(\n                    (it: Record<string, any>) => it[this.props.schema.clone as string] === text + i.toString(),\n                )\n            ) {\n                i++;\n            }\n            cloned[this.props.schema.clone] = `${cloned[this.props.schema.clone]}_${i}`;\n        }\n\n        newValue.splice(index, 0, cloned);\n\n        this.setState({ value: newValue, iteration: this.state.iteration + 10000 }, () =>\n            this.applyFilter(false, null, () => this.onChangeWrapper(newValue)),\n        );\n    };\n\n    onChangeWrapper = (newValue: Record<string, any>[], updateVisible?: boolean): void => {\n        if (this.typingTimer) {\n            clearTimeout(this.typingTimer);\n        }\n\n        this.typingTimer = setTimeout(\n            (value, _updateVisible) => {\n                this.typingTimer = null;\n\n                let mayBePromise: Promise<void> | void;\n                if (this.props.schema.encryptedAttributes) {\n                    const _value = JSON.parse(JSON.stringify(value));\n                    _value.forEach((el: Record<string, any>) => {\n                        this.props.schema.encryptedAttributes.forEach((attr: string) => {\n                            if (el[attr]) {\n                                el[attr] = encrypt(this.secret, el[attr]);\n                            }\n                        });\n                    });\n\n                    if (this.props.schema.objKeyName) {\n                        const objValue = arrayToObject(\n                            _value,\n                            this.props.schema.objKeyName,\n                            this.props.schema.objValueName,\n                        );\n                        mayBePromise = this.onChange(this.props.attr, objValue);\n                    } else {\n                        mayBePromise = this.onChange(this.props.attr, _value);\n                    }\n                } else if (this.props.schema.objKeyName) {\n                    const objValue = arrayToObject(\n                        JSON.parse(JSON.stringify(value)),\n                        this.props.schema.objKeyName,\n                        this.props.schema.objValueName,\n                    );\n                    mayBePromise = this.onChange(this.props.attr, objValue);\n                } else {\n                    mayBePromise = this.onChange(this.props.attr, value);\n                }\n                if (mayBePromise instanceof Promise) {\n                    mayBePromise.catch(e => console.error(`Cannot save: ${e}`));\n                }\n                if (_updateVisible) {\n                    this.applyFilter(false, value);\n                    this.handleRequestSort(this.state.orderBy, true);\n                }\n            },\n            300,\n            newValue,\n            updateVisible,\n        );\n    };\n\n    onAdd = (): void => {\n        const { schema } = this.props;\n        const newValue: Record<string, any>[] = JSON.parse(JSON.stringify(this.state.value));\n        const newItem = schema.items?.reduce(\n            (accumulator: Record<string, any>, currentValue: ConfigItemTableIndexed) => {\n                let defaultValue;\n                if (currentValue.defaultFunc) {\n                    if (this.props.custom) {\n                        defaultValue = currentValue.defaultFunc\n                            ? this.executeCustom(\n                                  currentValue.defaultFunc,\n                                  this.props.data,\n                                  this.props.customObj,\n                                  this.props.oContext.instanceObj,\n                                  newValue.length,\n                                  this.props.data,\n                              )\n                            : this.props.schema.default;\n                    } else {\n                        defaultValue = currentValue.defaultFunc\n                            ? this.execute(\n                                  currentValue.defaultFunc,\n                                  this.props.schema.default,\n                                  this.props.data,\n                                  newValue.length,\n                                  this.props.data,\n                              )\n                            : this.props.schema.default;\n                    }\n                } else {\n                    defaultValue = currentValue.default === undefined ? null : currentValue.default;\n                }\n\n                accumulator[currentValue.attr] = defaultValue;\n                return accumulator;\n            },\n            {},\n        );\n\n        newValue.push(newItem);\n\n        this.setState({ value: newValue }, () => this.applyFilter(false, null, () => this.onChangeWrapper(newValue)));\n    };\n\n    isAnyFilterSet(): boolean {\n        return !!Object.keys(this.filterRefs).find(attr => ConfigTable.getFilterValue(this.filterRefs[attr]));\n    }\n\n    applyFilter = (clear?: boolean, value?: Record<string, any>[], cb?: () => void): void => {\n        value = value || this.state.value;\n        let visibleValue = value.map((_, i) => i);\n        Object.keys(this.filterRefs).forEach(attr => {\n            let valueInputRef = ConfigTable.getFilterValue(this.filterRefs[attr]);\n            if (!clear && valueInputRef) {\n                valueInputRef = valueInputRef.toLowerCase();\n                visibleValue = visibleValue.filter(\n                    idx => value[idx] && value[idx][attr] && value[idx][attr].toLowerCase().includes(valueInputRef),\n                );\n            } else if (this.filterRefs[attr].current) {\n                ConfigTable.setFilterValue(this.filterRefs[attr], '');\n            }\n        });\n\n        if (visibleValue.length === value.length) {\n            visibleValue = null;\n        }\n\n        if (visibleValue === null && this.state.visibleValue === null) {\n            if (cb) {\n                cb();\n            }\n            return;\n        }\n\n        if (JSON.stringify(visibleValue) !== JSON.stringify(this.state.visibleValue)) {\n            this.setState({ visibleValue }, () => cb && cb());\n        } else if (cb) {\n            cb();\n        }\n    };\n\n    onMoveUp(idx: number): void {\n        const newValue: Record<string, any>[] = JSON.parse(JSON.stringify(this.state.value));\n        const item = newValue[idx];\n        newValue.splice(idx, 1);\n        newValue.splice(idx - 1, 0, item);\n        this.setState({ value: newValue, iteration: this.state.iteration + 10000 }, () =>\n            this.applyFilter(false, null, () => this.onChangeWrapper(newValue)),\n        );\n    }\n\n    onMoveDown(idx: number): void {\n        const newValue: Record<string, any>[] = JSON.parse(JSON.stringify(this.state.value));\n        const item = newValue[idx];\n        newValue.splice(idx, 1);\n        newValue.splice(idx + 1, 0, item);\n        this.setState({ value: newValue, iteration: this.state.iteration + 10000 }, () =>\n            this.applyFilter(false, null, () => this.onChangeWrapper(newValue)),\n        );\n    }\n\n    onDrop(acceptedFiles: File[]): void {\n        const file = acceptedFiles[0];\n        const reader = new FileReader();\n\n        reader.onabort = () => console.log('file reading was aborted');\n        reader.onerror = () => console.log('file reading has failed');\n        reader.onload = () => {\n            if (file.size > MAX_SIZE) {\n                window.alert(I18n.t('ra_File is too big. Max %sk allowed. Try use SVG.', Math.round(MAX_SIZE / 1024)));\n                return;\n            }\n            const text = new Uint8Array(reader.result as ArrayBufferLike).reduce(\n                (data, byte) => data + String.fromCharCode(byte),\n                '',\n            );\n\n            this.onImport(text);\n        };\n        reader.readAsArrayBuffer(file);\n    }\n\n    showTypeOfImportDialog(): JSX.Element | null {\n        if (!this.state.showTypeOfImportDialog) {\n            return null;\n        }\n        return (\n            <Dialog\n                open={!0}\n                onClose={() => this.setState({ showTypeOfImportDialog: false })}\n                maxWidth=\"md\"\n            >\n                <DialogTitle>{I18n.t('ra_Append or replace?')}</DialogTitle>\n                <DialogContent>\n                    {I18n.t('ra_Append %s entries or replace existing?', this.state.showTypeOfImportDialog.length)}\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        autoFocus\n                        onClick={() => {\n                            const value: Record<string, any>[] = JSON.parse(JSON.stringify(this.state.value));\n\n                            (this.state.showTypeOfImportDialog as Record<string, any>[]).forEach(\n                                (obj: Record<string, any>) => value.push(obj),\n                            );\n\n                            this.setState(\n                                {\n                                    value,\n                                    iteration: this.state.iteration + 10000,\n                                    showTypeOfImportDialog: false,\n                                },\n                                () => this.applyFilter(false, null, () => this.onChangeWrapper(value)),\n                            );\n                        }}\n                    >\n                        {I18n.t('ra_Append')}\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        autoFocus\n                        onClick={() => {\n                            const value: Record<string, any>[] = this.state.showTypeOfImportDialog as Record<\n                                string,\n                                any\n                            >[];\n                            this.setState(\n                                {\n                                    value,\n                                    iteration: this.state.iteration + 10000,\n                                    showTypeOfImportDialog: false,\n                                },\n                                () => this.applyFilter(false, null, () => this.onChangeWrapper(value)),\n                            );\n                        }}\n                    >\n                        {I18n.t('ra_Replace')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n\n    showImportDialog(): JSX.Element | null {\n        if (!this.state.showImportDialog) {\n            return null;\n        }\n        return (\n            <Dialog\n                open={!0}\n                onClose={() => this.setState({ showImportDialog: false })}\n                sx={{\n                    '& .MuiDialog-paper': {\n                        minHeight: 500,\n                    },\n                }}\n                maxWidth=\"md\"\n                fullWidth\n            >\n                <DialogTitle>{I18n.t('ra_Import from %s', 'CSV')}</DialogTitle>\n                <DialogContent>\n                    <Dropzone\n                        multiple={false}\n                        accept={{ 'text/csv': ['.csv'] }}\n                        maxSize={MAX_SIZE}\n                        onDragEnter={() => this.setState({ uploadFile: 'dragging' })}\n                        onDragLeave={() => this.setState({ uploadFile: true })}\n                        onDrop={(acceptedFiles, errors) => {\n                            this.setState({ uploadFile: false });\n                            if (!acceptedFiles.length) {\n                                window.alert(\n                                    (errors &&\n                                        errors[0] &&\n                                        errors[0].errors &&\n                                        errors[0].errors[0] &&\n                                        errors[0].errors[0].message) ||\n                                        I18n.t('ra_Cannot upload'),\n                                );\n                            } else {\n                                this.onDrop(acceptedFiles);\n                            }\n                        }}\n                    >\n                        {({ getRootProps, getInputProps }) => (\n                            <div\n                                style={{\n                                    ...styles.uploadDiv,\n                                    ...(this.state.uploadFile === 'dragging' ? styles.uploadDivDragging : undefined),\n                                    ...styles.dropZone,\n                                    ...(!this.state.icon ? styles.dropZoneEmpty : undefined),\n                                }}\n                                {...getRootProps()}\n                            >\n                                <input {...getInputProps()} />\n                                <div style={styles.uploadCenterDiv}>\n                                    <div style={styles.uploadCenterTextAndIcon}>\n                                        <ImportIcon style={styles.uploadCenterIcon} />\n                                        <div style={styles.uploadCenterText}>\n                                            {this.state.uploadFile === 'dragging'\n                                                ? I18n.t('ra_Drop file here')\n                                                : I18n.t(\n                                                      'ra_Place your files here or click here to open the browse dialog',\n                                                  )}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        )}\n                    </Dropzone>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        variant=\"contained\"\n                        onClick={() => this.setState({ showImportDialog: false })}\n                        color=\"primary\"\n                        startIcon={<IconClose />}\n                    >\n                        {I18n.t('Cancel')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n\n    renderItem(/* error, disabled, defaultValue */): JSX.Element | null {\n        const { schema } = this.props;\n        let { visibleValue } = this.state;\n\n        if (!this.state.value || !Array.isArray(this.state.value)) {\n            return null;\n        }\n\n        visibleValue = visibleValue || this.state.value.map((_, i) => i);\n\n        const doAnyFilterSet = this.isAnyFilterSet();\n\n        let tdStyle: React.CSSProperties | undefined;\n        if (this.props.schema.compact) {\n            tdStyle = { paddingTop: 1, paddingBottom: 1 };\n        }\n\n        return (\n            <Paper style={styles.paper}>\n                {this.showImportDialog()}\n                {this.showTypeOfImportDialog()}\n                {schema.label ? (\n                    <div style={styles.label}>\n                        <Toolbar\n                            variant=\"dense\"\n                            style={styles.rootTool}\n                        >\n                            <Typography\n                                style={styles.title}\n                                variant=\"h6\"\n                                id=\"tableTitle\"\n                                component=\"div\"\n                            >\n                                {this.getText(schema.label)}\n                            </Typography>\n                        </Toolbar>\n                    </div>\n                ) : null}\n                <TableContainer>\n                    <Table\n                        style={styles.table}\n                        size=\"small\"\n                    >\n                        {this.enhancedTableHead(!doAnyFilterSet && !this.state.orderBy ? 120 : 64, doAnyFilterSet)}\n                        <TableBody>\n                            {visibleValue.map((idx, i) => (\n                                <TableRow\n                                    hover\n                                    key={`${idx}_${i}`}\n                                >\n                                    {schema.items &&\n                                        schema.items.map((headCell: ConfigItemTableIndexed) => (\n                                            <TableCell\n                                                key={`${headCell.attr}_${idx}`}\n                                                align=\"left\"\n                                                style={tdStyle}\n                                            >\n                                                {this.itemTable(headCell.attr, this.state.value[idx], idx)}\n                                            </TableCell>\n                                        ))}\n                                    {!schema.noDelete && (\n                                        <TableCell\n                                            align=\"left\"\n                                            style={{ ...tdStyle, ...styles.buttonCell }}\n                                        >\n                                            {!doAnyFilterSet && !this.state.orderBy ? (\n                                                i ? (\n                                                    <Tooltip\n                                                        title={I18n.t('ra_Move up')}\n                                                        slotProps={{ popper: { sx: styles.tooltip } }}\n                                                    >\n                                                        <IconButton\n                                                            size=\"small\"\n                                                            onClick={() => this.onMoveUp(idx)}\n                                                        >\n                                                            <UpIcon />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                ) : (\n                                                    <div style={styles.buttonEmpty} />\n                                                )\n                                            ) : null}\n                                            {!doAnyFilterSet && !this.state.orderBy ? (\n                                                i < visibleValue.length - 1 ? (\n                                                    <Tooltip\n                                                        title={I18n.t('ra_Move down')}\n                                                        slotProps={{ popper: { sx: styles.tooltip } }}\n                                                    >\n                                                        <IconButton\n                                                            size=\"small\"\n                                                            onClick={() => this.onMoveDown(idx)}\n                                                        >\n                                                            <DownIcon />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                ) : (\n                                                    <div style={styles.buttonEmpty} />\n                                                )\n                                            ) : null}\n                                            <Tooltip\n                                                title={I18n.t('ra_Delete current row')}\n                                                slotProps={{ popper: { sx: styles.tooltip } }}\n                                            >\n                                                <IconButton\n                                                    size=\"small\"\n                                                    onClick={this.onDelete(idx)}\n                                                >\n                                                    <DeleteIcon />\n                                                </IconButton>\n                                            </Tooltip>\n                                            {this.props.schema.clone ? (\n                                                <Tooltip\n                                                    title={I18n.t('ra_Clone current row')}\n                                                    slotProps={{ popper: { sx: styles.tooltip } }}\n                                                >\n                                                    <IconButton\n                                                        size=\"small\"\n                                                        onClick={this.onClone(idx)}\n                                                    >\n                                                        <CopyContentIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            ) : null}\n                                        </TableCell>\n                                    )}\n                                </TableRow>\n                            ))}\n                            {!schema.noDelete && visibleValue.length >= (schema.showSecondAddAt || 5) ? (\n                                <TableRow>\n                                    <TableCell\n                                        colSpan={schema.items.length + 1}\n                                        style={{ ...tdStyle }}\n                                    >\n                                        <Tooltip\n                                            title={\n                                                doAnyFilterSet\n                                                    ? I18n.t('ra_Cannot add items with set filter')\n                                                    : I18n.t('ra_Add row')\n                                            }\n                                            slotProps={{ popper: { sx: styles.tooltip } }}\n                                        >\n                                            <span>\n                                                <IconButton\n                                                    size=\"small\"\n                                                    color=\"primary\"\n                                                    disabled={!!doAnyFilterSet && !this.props.schema.allowAddByFilter}\n                                                    onClick={this.onAdd}\n                                                >\n                                                    <AddIcon />\n                                                </IconButton>\n                                            </span>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ) : null}\n                        </TableBody>\n                    </Table>\n                    {!visibleValue.length && this.state.value.length ? (\n                        <div style={styles.filteredOut}>\n                            <Typography\n                                style={styles.title}\n                                variant=\"h6\"\n                                id=\"tableTitle\"\n                                component=\"div\"\n                            >\n                                {I18n.t('ra_All items are filtered out')}\n                                <IconButton\n                                    size=\"small\"\n                                    onClick={() => this.applyFilter(true)}\n                                >\n                                    <CloseIcon />\n                                </IconButton>\n                            </Typography>\n                        </div>\n                    ) : null}\n                </TableContainer>\n                {schema.help ? (\n                    <FormHelperText>\n                        {this.renderHelp(\n                            this.props.schema.help,\n                            this.props.schema.helpLink,\n                            this.props.schema.noTranslation,\n                        )}\n                    </FormHelperText>\n                ) : null}\n                {this.state.errorMessage ? (\n                    <div style={{ display: 'flex', padding: '5px' }}>\n                        <ErrorIcon color=\"error\" />\n                        <span style={{ color: 'red', alignSelf: 'center' }}>{this.state.errorMessage}</span>\n                    </div>\n                ) : null}\n            </Paper>\n        );\n    }\n}\n\nexport default ConfigTable;\n","import React, { type JSX } from 'react';\n\nimport { Autocomplete, TextField, TextareaAutosize, InputAdornment, IconButton } from '@mui/material';\n\nimport { Close as CloseIcon } from '@mui/icons-material';\n\nimport { I18n, IconCopy, Utils } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemText } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\nconst styles: Record<string, React.CSSProperties> = {\n    indeterminate: {\n        opacity: 0.5,\n    },\n    label: {\n        width: '100%',\n        fontSize: 14,\n        marginBottom: 2,\n    },\n    helper: {\n        width: '100%',\n        fontSize: 12,\n    },\n    error: {\n        width: '100%',\n        fontSize: 12,\n        color: '#FF0000',\n    },\n};\n\ninterface ConfigTextProps extends ConfigGenericProps {\n    schema: ConfigItemText;\n}\n\ninterface ConfigTextState extends ConfigGenericState {\n    oldValue?: string;\n    jsonError?: boolean;\n}\n\nclass ConfigText extends ConfigGeneric<ConfigTextProps, ConfigTextState> {\n    private updateTimeout: ReturnType<typeof setTimeout> | null = null;\n\n    componentDidMount(): void {\n        super.componentDidMount();\n        let value = ConfigGeneric.getValue(this.props.data, this.props.attr);\n\n        if (Array.isArray(value) && this.props.oContext.multiEdit) {\n            value = ConfigGeneric.DIFFERENT_VALUE;\n            this.setState({ value, oldValue: value, jsonError: false });\n            return;\n        }\n\n        this.setState({ value, oldValue: value, jsonError: this.validateJson(value) });\n    }\n\n    validateJson(value: string | null | undefined): boolean {\n        let jsonError = false;\n        if (this.props.schema.validateJson) {\n            if (value || !this.props.schema.allowEmpty) {\n                try {\n                    JSON.parse(value);\n                } catch (err: unknown) {\n                    console.log('Error in JSON', err);\n                    jsonError = true;\n                }\n            }\n        }\n\n        return jsonError;\n    }\n\n    static getDerivedStateFromProps(props: ConfigTextProps, state: ConfigTextState): Partial<ConfigTextState> | null {\n        if (props.oContext.multiEdit && state.value === ConfigGeneric.DIFFERENT_VALUE) {\n            return { value: ConfigGeneric.DIFFERENT_VALUE };\n        }\n\n        let value = ConfigGeneric.getValue(props.data, props.attr);\n\n        if (value !== null && value !== undefined) {\n            value = value.toString();\n        }\n\n        if (value === null || value === undefined || (value !== state.value && value !== state.oldValue)) {\n            return { value };\n        }\n        return null;\n    }\n\n    renderItem(error?: boolean, disabled?: boolean): JSX.Element {\n        const isIndeterminate = Array.isArray(this.state.value) || this.state.value === ConfigGeneric.DIFFERENT_VALUE;\n\n        if (this.props.schema.time) {\n            // show read-only time\n\n            let time = '';\n            if (typeof this.state.value === 'number') {\n                // If the value is a number, it is a timestamp.\n                if (this.state.value && this.state.value < 946659600000) {\n                    // If the value is less than 2000-01-01, it is a timestamp in seconds.\n                    time = new Date(this.state.value * 1000).toLocaleString();\n                } else {\n                    time = new Date(this.state.value).toLocaleString();\n                }\n            } else if (typeof this.state.value === 'string') {\n                // If the value is a string, it is a date string.\n                time = new Date(this.state.value).toLocaleString();\n            }\n\n            return (\n                <TextField\n                    variant=\"standard\"\n                    fullWidth\n                    value={time}\n                    error={!!error || !!this.state.jsonError}\n                    disabled={!!disabled}\n                    slotProps={{\n                        htmlInput: {\n                            readOnly: true,\n                        },\n                    }}\n                    placeholder={this.getText(this.props.schema.placeholder)}\n                    label={this.getText(this.props.schema.label)}\n                    helperText={this.renderHelp(\n                        this.props.schema.help,\n                        this.props.schema.helpLink,\n                        this.props.schema.noTranslation,\n                    )}\n                />\n            );\n        }\n\n        if (this.state.oldValue !== null && this.state.oldValue !== undefined) {\n            if (this.updateTimeout) {\n                clearTimeout(this.updateTimeout);\n            }\n            this.updateTimeout = setTimeout(() => {\n                this.updateTimeout = null;\n                this.setState({ oldValue: null });\n            }, 30);\n        } else if (this.updateTimeout) {\n            clearTimeout(this.updateTimeout);\n            this.updateTimeout = null;\n        }\n\n        if (isIndeterminate) {\n            const autoCompleteOptions = ConfigGeneric.getValue(this.props.data, this.props.attr);\n            const arr =\n                autoCompleteOptions\n                    ?.filter((a: any) => a || a === 0)\n                    .map((item: any) => ({ label: item.toString() || '', value: item })) || [];\n\n            arr.unshift({ label: I18n.t(ConfigGeneric.DIFFERENT_LABEL), value: ConfigGeneric.DIFFERENT_VALUE });\n\n            return (\n                <Autocomplete\n                    style={styles.indeterminate}\n                    fullWidth\n                    value={arr[0]}\n                    // getOptionSelected={(option, value) => option.label === value.label}\n                    onChange={(_, value) => {\n                        const val = value ? value.value : '';\n                        const mayBePromise = this.onChange(this.props.attr, val, () => {\n                            this.setState({ value: val, oldValue: val, jsonError: this.validateJson(value) });\n                        });\n                        if (mayBePromise instanceof Promise) {\n                            mayBePromise.catch(e => console.error(`Cannot set value: ${e}`));\n                        }\n                    }}\n                    options={arr}\n                    getOptionLabel={option => option.label}\n                    renderInput={params => (\n                        <TextField\n                            variant=\"standard\"\n                            {...params}\n                            error={!!error}\n                            placeholder={this.getText(this.props.schema.placeholder)}\n                            slotProps={{\n                                htmlInput: {\n                                    ...params.inputProps,\n                                    maxLength: this.props.schema.maxLength || this.props.schema.max || undefined,\n                                    readOnly: this.props.schema.readOnly || false,\n                                },\n                            }}\n                            label={this.getText(this.props.schema.label)}\n                            helperText={this.renderHelp(\n                                this.props.schema.help,\n                                this.props.schema.helpLink,\n                                this.props.schema.noTranslation,\n                            )}\n                            disabled={!!disabled}\n                        />\n                    )}\n                />\n            );\n        }\n\n        let actionButton: React.JSX.Element | undefined;\n        let actionButtonStyle: React.CSSProperties | undefined;\n        if ((this.props.schema.readOnly || disabled) && this.props.schema.copyToClipboard) {\n            if (this.props.schema.minRows > 1) {\n                actionButtonStyle = {\n                    position: 'absolute',\n                    right: 3,\n                    top: 20,\n                    zIndex: 1000,\n                };\n            }\n            actionButton = (\n                <IconButton\n                    style={actionButtonStyle}\n                    size=\"small\"\n                    onClick={() => {\n                        Utils.copyToClipboard(this.state.value);\n                        window.alert(I18n.t('ra_Copied'));\n                    }}\n                >\n                    <IconCopy />\n                </IconButton>\n            );\n        } else if (!this.props.schema.readOnly && !disabled && this.state.value && !this.props.schema.noClearButton) {\n            if (this.props.schema.minRows > 1) {\n                actionButtonStyle = {\n                    position: 'absolute',\n                    right: 3,\n                    top: 20,\n                    zIndex: 1000,\n                };\n            }\n            actionButton = (\n                <IconButton\n                    style={actionButtonStyle}\n                    size=\"small\"\n                    onClick={() =>\n                        this.setState({ value: '', oldValue: this.state.value }, () =>\n                            this.onChange(this.props.attr, ''),\n                        )\n                    }\n                >\n                    <CloseIcon />\n                </IconButton>\n            );\n            if (this.props.schema.minRows <= 1) {\n                actionButton = <InputAdornment position=\"end\">{actionButton}</InputAdornment>;\n            }\n        }\n\n        if (this.props.schema.minRows > 1) {\n            const helper = this.renderHelp(\n                this.props.schema.help,\n                this.props.schema.helpLink,\n                this.props.schema.noTranslation,\n            );\n            return (\n                <div style={{ width: '100%', position: 'relative' }}>\n                    {this.props.schema.label ? (\n                        <div style={styles.label}>{this.getText(this.props.schema.label)}</div>\n                    ) : null}\n                    <TextareaAutosize\n                        // variant=\"standard\"\n                        style={{\n                            width: '100%',\n                            resize: 'vertical',\n                            backgroundColor: this.props.oContext.themeType === 'dark' ? '#363636' : '#cccccc',\n                            color: this.props.oContext.themeType === 'dark' ? '#fff' : '#111',\n                        }}\n                        minRows={this.props.schema.minRows}\n                        maxRows={this.props.schema.maxRows}\n                        value={this.state.value === null || this.state.value === undefined ? '' : this.state.value}\n                        disabled={!!disabled}\n                        readOnly={this.props.schema.readOnly || false}\n                        onChange={e => {\n                            const value = e.target.value;\n                            this.setState(\n                                { value, oldValue: this.state.value, jsonError: this.validateJson(value) },\n                                () => this.onChange(this.props.attr, value || ''),\n                            );\n                        }}\n                        placeholder={this.getText(this.props.schema.placeholder)}\n                    />\n                    {helper || error || this.state.jsonError ? (\n                        <div style={error ? styles.error : styles.helper}>\n                            {error || (this.state.jsonError ? I18n.t('ra_Invalid JSON') : helper)}\n                        </div>\n                    ) : null}\n                </div>\n            );\n        }\n\n        return (\n            <TextField\n                variant=\"standard\"\n                fullWidth\n                value={this.state.value === null || this.state.value === undefined ? '' : this.state.value}\n                error={!!error || !!this.state.jsonError}\n                disabled={!!disabled}\n                slotProps={{\n                    htmlInput: {\n                        maxLength: this.props.schema.maxLength || this.props.schema.max || undefined,\n                        readOnly: this.props.schema.readOnly || false,\n                    },\n                    input: {\n                        endAdornment: actionButton,\n                    },\n                }}\n                onChange={e => {\n                    const value = e.target.value;\n\n                    this.setState({ value, oldValue: this.state.value, jsonError: this.validateJson(value) }, () =>\n                        this.onChange(this.props.attr, value),\n                    );\n                }}\n                placeholder={this.getText(this.props.schema.placeholder)}\n                label={this.getText(this.props.schema.label)}\n                helperText={\n                    this.state.jsonError\n                        ? I18n.t('ra_Invalid JSON')\n                        : this.renderHelp(\n                              this.props.schema.help,\n                              this.props.schema.helpLink,\n                              this.props.schema.noTranslation,\n                          )\n                }\n            />\n        );\n    }\n}\n\nexport default ConfigText;\n","import React, { type JSX } from 'react';\n\nimport { TextField, IconButton } from '@mui/material';\n\nimport { I18n, Icon, IconCopy, Utils } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemSendTo } from '#JC/types';\nimport getIconByName from './Icons';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\nconst styles: Record<string, React.CSSProperties> = {\n    fullWidth: {\n        width: '100%',\n    },\n};\n\ninterface ConfigTextSendToProps extends ConfigGenericProps {\n    schema: ConfigItemSendTo;\n}\n\ninterface ConfigTextSendToState extends ConfigGenericState {\n    text?: string;\n    style?: React.CSSProperties;\n    icon?: string;\n    iconStyle?: React.CSSProperties;\n}\n\ninterface Response {\n    text: string;\n    style?: React.CSSProperties;\n    icon?: string;\n    iconStyle?: React.CSSProperties;\n}\n\nclass ConfigTextSendTo extends ConfigGeneric<ConfigTextSendToProps, ConfigTextSendToState> {\n    private initialized = false;\n\n    private localContext: string | undefined;\n\n    askInstance(): void {\n        if (this.props.alive) {\n            let data: Record<string, any> | undefined = this.props.schema.data;\n            if (data === undefined && this.props.schema.jsonData) {\n                const dataStr: string = this.getPattern(this.props.schema.jsonData, null, true);\n                try {\n                    data = JSON.parse(dataStr);\n                } catch {\n                    console.error(`Cannot parse json data: ${dataStr}`);\n                }\n            }\n\n            if (data === undefined) {\n                data = null;\n            }\n\n            void this.props.oContext.socket\n                .sendTo(\n                    `${this.props.oContext.adapterName}.${this.props.oContext.instance}`,\n                    this.props.schema.command || 'send',\n                    data,\n                )\n                .then(result => {\n                    if (typeof result === 'object') {\n                        const _data: Response = result;\n                        this.setState({\n                            text: _data.text || '',\n                            style: _data.style,\n                            icon: _data.icon,\n                            iconStyle: _data.iconStyle,\n                        });\n                    } else if (typeof result === 'string') {\n                        this.setState({ text: result || '' });\n                    }\n                })\n                .catch(e => console.error(`Cannot send command: ${e}`));\n        }\n    }\n\n    getLocalContext(): string {\n        const localContext: Record<string, any> = {};\n        if (Array.isArray(this.props.schema.alsoDependsOn)) {\n            this.props.schema.alsoDependsOn.forEach(\n                attr => (localContext[attr] = ConfigGeneric.getValue(this.props.data, attr)),\n            );\n        }\n        return JSON.stringify(localContext);\n    }\n\n    renderItem(/* error, disabled, defaultValue */): JSX.Element {\n        if (this.props.alive) {\n            const localContext = this.getLocalContext();\n            if (localContext !== this.localContext || !this.initialized) {\n                this.localContext = localContext;\n                setTimeout(() => this.askInstance(), this.initialized ? 300 : 50);\n                this.initialized = true;\n            }\n        }\n\n        if (this.state.text === undefined) {\n            return null;\n        }\n\n        let icon: JSX.Element | null = null;\n        if (this.state.icon) {\n            icon = getIconByName(this.state.icon, {\n                marginRight: this.state.text ? 8 : undefined,\n                ...(this.state.iconStyle || undefined),\n            });\n            if (!icon) {\n                icon = (\n                    <Icon\n                        src={this.state.icon}\n                        style={{ marginRight: this.state.text ? 8 : undefined, ...(this.state.iconStyle || undefined) }}\n                    />\n                );\n            }\n        }\n\n        if (this.props.schema.container === 'text') {\n            return (\n                <TextField\n                    variant=\"standard\"\n                    fullWidth\n                    slotProps={{\n                        input: {\n                            endAdornment: this.props.schema.copyToClipboard ? (\n                                <IconButton\n                                    size=\"small\"\n                                    onClick={() => {\n                                        Utils.copyToClipboard(this.state.text);\n                                        window.alert(I18n.t('ra_Copied'));\n                                    }}\n                                >\n                                    <IconCopy />\n                                </IconButton>\n                            ) : undefined,\n                        },\n                    }}\n                    value={this.state.text}\n                    label={this.getText(this.props.schema.label)}\n                    helperText={this.renderHelp(\n                        this.props.schema.help,\n                        this.props.schema.helpLink,\n                        this.props.schema.noTranslation,\n                    )}\n                />\n            );\n        }\n        return (\n            <div style={{ ...styles.fullWidth, ...(this.state.style || undefined) }}>\n                {icon}\n                {this.props.schema.container === 'html' ? (\n                    <span dangerouslySetInnerHTML={{ __html: this.state.text || '' }} />\n                ) : (\n                    this.state.text\n                )}\n            </div>\n        );\n    }\n}\n\nexport default ConfigTextSendTo;\n","import React, { type JSX } from 'react';\n\nimport { TextField } from '@mui/material';\n\nimport type { ConfigItemTopic } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\nfunction convertID2Topic(id: string, namespace: string): string {\n    let topic;\n    if (namespace && id.substring(0, namespace.length) === namespace) {\n        topic = id.substring(namespace.length + 1);\n    } else {\n        topic = id;\n    }\n    topic = topic.replace(/\\./g, '/').replace(/_/g, ' ');\n    return topic;\n}\n\ninterface ConfigTopicProps extends ConfigGenericProps {\n    schema: ConfigItemTopic;\n}\n\nclass ConfigTopic extends ConfigGeneric<ConfigTopicProps, ConfigGenericState> {\n    componentDidMount(): void {\n        super.componentDidMount();\n        const value = ConfigGeneric.getValue(this.props.data, this.props.attr);\n        if (!value && this.props.customObj?._id) {\n            const topic = convertID2Topic(\n                this.props.customObj._id,\n                `${this.props.oContext.adapterName}.${this.props.oContext.instance}`,\n            );\n            this.setState({ value: topic });\n        } else {\n            this.setState({ value: value || '' });\n        }\n    }\n\n    renderItem(error: string, disabled: boolean /* , defaultValue */): JSX.Element {\n        return (\n            <TextField\n                variant=\"standard\"\n                fullWidth\n                slotProps={{\n                    htmlInput: {\n                        maxLength: this.props.schema.maxLength || this.props.schema.max || undefined,\n                    },\n                }}\n                value={this.state.value}\n                error={!!error}\n                disabled={disabled}\n                placeholder={this.getText(this.props.schema.placeholder)}\n                label={this.getText(this.props.schema.label)}\n                helperText={this.renderHelp(\n                    this.props.schema.help,\n                    this.props.schema.helpLink,\n                    this.props.schema.noTranslation,\n                )}\n                onChange={e => {\n                    const value = e.target.value;\n                    this.setState({ value }, () => this.onChange(this.props.attr, value));\n                }}\n            />\n        );\n    }\n}\n\nexport default ConfigTopic;\n","import React, { type JSX } from 'react';\n\nimport { TextField, IconButton } from '@mui/material';\n\nimport { ContentCopy as IconCopy } from '@mui/icons-material';\n\nimport { Utils, I18n } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemUUID } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\ninterface ConfigUUIDProps extends ConfigGenericProps {\n    schema: ConfigItemUUID;\n}\n\ninterface ConfigUUIDState extends ConfigGenericState {\n    uuid?: string;\n}\n\nclass ConfigUUID extends ConfigGeneric<ConfigUUIDProps, ConfigUUIDState> {\n    async componentDidMount(): Promise<void> {\n        super.componentDidMount();\n\n        const uuidObj = await this.props.oContext.socket.getObject('system.meta.uuid');\n        this.setState({ uuid: uuidObj?.native?.uuid || 'unknown' });\n    }\n\n    renderItem(error: unknown, disabled: boolean): JSX.Element {\n        return (\n            <TextField\n                variant=\"standard\"\n                fullWidth\n                error={!!error}\n                disabled={!!disabled}\n                slotProps={{\n                    htmlInput: { readOnly: true },\n                    input: {\n                        endAdornment: (\n                            <IconButton\n                                onClick={() => {\n                                    Utils.copyToClipboard(this.state.uuid);\n                                    window.alert(I18n.t('ra_Copied %s', this.state.uuid));\n                                }}\n                            >\n                                <IconCopy />\n                            </IconButton>\n                        ),\n                    },\n                }}\n                value={this.state.uuid || ''}\n                label={this.getText(this.props.schema.label) || I18n.t('ra_Serial number (UUID)')}\n                helperText={this.renderHelp(\n                    this.props.schema.help,\n                    this.props.schema.helpLink,\n                    this.props.schema.noTranslation,\n                )}\n            />\n        );\n    }\n}\n\nexport default ConfigUUID;\n","import React, { type JSX } from 'react';\n\nimport { InputLabel, TextField, MenuItem, FormHelperText, FormControl, Select } from '@mui/material';\n\nimport { Icon, Utils, I18n } from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemUser } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\nconst styles: Record<string, React.CSSProperties> = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginRight: 8,\n    },\n};\n\ninterface ConfigUserProps extends ConfigGenericProps {\n    schema: ConfigItemUser;\n}\n\ninterface ConfigUserState extends ConfigGenericState {\n    users: Record<string, { color?: string; icon?: string; name: string }>;\n}\n\nclass ConfigUser extends ConfigGeneric<ConfigUserProps, ConfigUserState> {\n    componentDidMount(): void {\n        super.componentDidMount();\n        this.props.oContext.socket\n            .getUsers()\n            .then(users => {\n                const _users: Record<string, { color?: string; icon?: string; name: string }> = {};\n                const lang = I18n.getLanguage();\n\n                if (this.props.schema.short) {\n                    users.forEach(\n                        user =>\n                            (_users[user._id] = {\n                                color: user.common?.color,\n                                icon: user.common?.icon,\n                                name: Utils.getObjectNameFromObj(user, lang),\n                            }),\n                    );\n                } else {\n                    users.forEach(\n                        user =>\n                            (_users[user._id.replace(/^system\\.user\\./, '')] = {\n                                color: user.common?.color,\n                                icon: user.common?.icon,\n                                name: Utils.getObjectNameFromObj(user, lang),\n                            }),\n                    );\n                }\n\n                this.setState({ users: _users });\n            })\n            .catch(e => console.error(`Cannot get users: ${e}`));\n    }\n\n    renderItem(error: string, disabled: boolean /* , defaultValue */): JSX.Element {\n        const value = ConfigGeneric.getValue(this.props.data, this.props.attr);\n\n        return (\n            <FormControl\n                variant=\"standard\"\n                fullWidth\n            >\n                {this.state.users && this.props.schema.label ? (\n                    <InputLabel>{this.getText(this.props.schema.label)}</InputLabel>\n                ) : null}\n                {!this.state.users ? (\n                    <TextField\n                        variant=\"standard\"\n                        error={!!error}\n                        disabled={!!disabled}\n                        value={value}\n                        onChange={e => this.onChange(this.props.attr, e.target.value)}\n                        label={this.getText(this.props.schema.label)}\n                    />\n                ) : (\n                    <Select\n                        variant=\"standard\"\n                        error={!!error}\n                        disabled={!!disabled}\n                        value={value}\n                        renderValue={val => (\n                            <span>\n                                {this.state.users && this.state.users[val]?.icon ? (\n                                    <Icon\n                                        src={this.state.users && this.state.users[val]?.icon}\n                                        style={styles.icon}\n                                    />\n                                ) : null}\n                                {(this.state.users && this.state.users[val]?.name) || val || ''}\n                            </span>\n                        )}\n                        style={{\n                            color: (this.state.users && this.state.users[value]?.color) || undefined,\n                            backgroundColor: Utils.getInvertedColor(\n                                this.state.users && this.state.users[value]?.color,\n                                this.props.oContext.themeType,\n                            ),\n                        }}\n                        onChange={e => this.onChange(this.props.attr, e.target.value)}\n                    >\n                        {this.state.users &&\n                            Object.keys(this.state.users).map(id => (\n                                <MenuItem\n                                    style={{\n                                        color: this.state.users[id].color || undefined,\n                                        backgroundColor: Utils.getInvertedColor(\n                                            this.state.users[id].color,\n                                            this.props.oContext.themeType,\n                                        ),\n                                    }}\n                                    key={id}\n                                    value={id}\n                                >\n                                    {this.state.users[id].icon ? (\n                                        <Icon\n                                            src={this.state.users[id].icon}\n                                            style={styles.icon}\n                                        />\n                                    ) : null}\n                                    {this.state.users[id].name}\n                                </MenuItem>\n                            ))}\n                    </Select>\n                )}\n                {this.props.schema.help ? (\n                    <FormHelperText>\n                        {this.renderHelp(\n                            this.props.schema.help,\n                            this.props.schema.helpLink,\n                            this.props.schema.noTranslation,\n                        )}\n                    </FormHelperText>\n                ) : null}\n            </FormControl>\n        );\n    }\n}\n\nexport default ConfigUser;\n","import React, { type JSX } from 'react';\n\nimport type QRCode from 'react-qr-code';\nimport type { ConfigItemQrCode } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\n\ninterface ConfigQrCodeProps extends ConfigGenericProps {\n    schema: ConfigItemQrCode;\n}\n\ninterface ConfigQrCodeState extends ConfigGenericState {\n    QRCode: typeof QRCode | null;\n}\n\nclass ConfigQrCode extends ConfigGeneric<ConfigQrCodeProps, ConfigQrCodeState> {\n    async componentDidMount(): Promise<void> {\n        super.componentDidMount();\n        // lazy load of qrcode\n        const module = await import('react-qr-code');\n        this.setState({ QRCode: module.default });\n    }\n\n    renderItem(): JSX.Element | null {\n        const QRCodeComponent = this.state.QRCode;\n        if (!QRCodeComponent) {\n            return null;\n        }\n        return (\n            <QRCodeComponent\n                value={this.props.schema.data}\n                size={this.props.schema.size}\n                fgColor={this.props.schema.fgColor}\n                bgColor={this.props.schema.bgColor}\n                level={this.props.schema.level}\n            />\n        );\n    }\n}\n\nexport default ConfigQrCode;\n","import React, { type JSX } from 'react';\n\nimport { Grid2, Accordion, AccordionSummary, AccordionDetails, Typography, Box } from '@mui/material';\n\nimport { ExpandMore as ExpandMoreIcon } from '@mui/icons-material';\n\nimport { type IobTheme, Utils } from '@iobroker/adapter-react-v5';\nimport type { ConfigItemPanel } from '#JC/types';\n\nimport ConfigGeneric, { type ConfigGenericState, type ConfigGenericProps } from './ConfigGeneric';\nimport ConfigAccordion from './ConfigAccordion';\nimport ConfigAlive from './ConfigAlive';\nimport ConfigAutocomplete from './ConfigAutocomplete';\nimport ConfigAutocompleteSendTo from './ConfigAutocompleteSendTo';\nimport ConfigCRON from './ConfigCRON';\nimport ConfigCertificateSelect from './ConfigCertificateSelect';\nimport ConfigCertificates from './ConfigCertificates';\nimport ConfigCertCollection from './ConfigCertCollection';\nimport ConfigCheckLicense from './ConfigCheckLicense';\nimport ConfigCheckbox from './ConfigCheckbox';\nimport ConfigChip from './ConfigChip';\nimport ConfigColor from './ConfigColor';\nimport ConfigCoordinates from './ConfigCoordinates';\nimport ConfigCustom from './ConfigCustom';\nimport ConfigDatePicker from './ConfigDatePicker';\nimport ConfigDeviceManager from './ConfigDeviceManager';\nimport ConfigFile from './ConfigFile';\nimport ConfigFileSelector from './ConfigFileSelector';\nimport ConfigFunc from './ConfigFunc';\nimport ConfigIP from './ConfigIP';\nimport ConfigImageSendTo from './ConfigImageSendTo';\nimport ConfigImageUpload from './ConfigImageUpload';\nimport ConfigInstanceSelect from './ConfigInstanceSelect';\nimport ConfigInterface from './ConfigInterface';\nimport ConfigJsonEditor from './ConfigJsonEditor';\nimport ConfigLanguage from './ConfigLanguage';\nimport ConfigLicense from './ConfigLicense';\nimport ConfigNumber from './ConfigNumber';\nimport ConfigObjectId from './ConfigObjectId';\nimport ConfigPassword from './ConfigPassword';\nimport ConfigPattern from './ConfigPattern';\nimport ConfigPort from './ConfigPort';\nimport ConfigRoom from './ConfigRoom';\nimport ConfigSelect from './ConfigSelect';\nimport ConfigSelectSendTo from './ConfigSelectSendTo';\nimport ConfigSendTo from './ConfigSendto';\nimport ConfigSetState from './ConfigSetState';\nimport ConfigSlider from './ConfigSlider';\nimport ConfigState from './ConfigState';\nimport ConfigStaticDivider from './ConfigStaticDivider';\nimport ConfigStaticHeader from './ConfigStaticHeader';\nimport ConfigStaticImage from './ConfigStaticImage';\nimport ConfigStaticInfo from './ConfigStaticInfo';\nimport ConfigStaticText from './ConfigStaticText';\nimport ConfigTable from './ConfigTable';\nimport ConfigText from './ConfigText';\nimport ConfigTextSendTo from './ConfigTextSendTo';\nimport ConfigTimePicker from './ConfigTimePicker';\nimport ConfigTopic from './ConfigTopic';\nimport ConfigUUID from './ConfigUUID';\nimport ConfigUser from './ConfigUser';\nimport ConfigQrCode from './ConfigQrCode';\n\nconst components: Record<string, typeof ConfigGeneric<any, any>> = {\n    accordion: ConfigAccordion,\n    alive: ConfigAlive,\n    autocomplete: ConfigAutocomplete,\n    autocompleteSendTo: ConfigAutocompleteSendTo,\n    certCollection: ConfigCertCollection,\n    certificate: ConfigCertificateSelect,\n    certificates: ConfigCertificates,\n    checkbox: ConfigCheckbox,\n    checkLicense: ConfigCheckLicense,\n    chip: ConfigChip, // deprecated. Use \"chips\"\n    chips: ConfigChip,\n    color: ConfigColor,\n    coordinates: ConfigCoordinates,\n    cron: ConfigCRON,\n    custom: ConfigCustom,\n    datePicker: ConfigDatePicker,\n    deviceManager: ConfigDeviceManager,\n    divider: ConfigStaticDivider,\n    file: ConfigFile,\n    fileSelector: ConfigFileSelector,\n    func: ConfigFunc,\n    header: ConfigStaticHeader,\n    image: ConfigImageUpload,\n    imageSendTo: ConfigImageSendTo,\n    instance: ConfigInstanceSelect,\n    interface: ConfigInterface,\n    ip: ConfigIP,\n    jsonEditor: ConfigJsonEditor,\n    language: ConfigLanguage,\n    license: ConfigLicense,\n    number: ConfigNumber,\n    objectId: ConfigObjectId,\n    password: ConfigPassword,\n    pattern: ConfigPattern,\n    port: ConfigPort,\n    qrCode: ConfigQrCode,\n    room: ConfigRoom,\n    select: ConfigSelect,\n    selectSendTo: ConfigSelectSendTo,\n    // @deprecated Use \"sendTo\"\n    sendto: ConfigSendTo,\n    sendTo: ConfigSendTo,\n    setState: ConfigSetState,\n    slider: ConfigSlider,\n    state: ConfigState,\n    staticImage: ConfigStaticImage,\n    staticInfo: ConfigStaticInfo,\n    staticLink: ConfigStaticText,\n    staticText: ConfigStaticText,\n    table: ConfigTable,\n    text: ConfigText,\n    textSendTo: ConfigTextSendTo,\n    timePicker: ConfigTimePicker,\n    topic: ConfigTopic,\n    uuid: ConfigUUID,\n    user: ConfigUser,\n};\n\nconst styles: Record<string, any> = {\n    fullWidth: {\n        width: '100%',\n        // height: '100%',\n    },\n    paper: {\n        margin: 1,\n        width: 'auto !important',\n        overflowY: 'auto',\n        paddingBottom: 1,\n    },\n    paperWithIcons: {\n        height: 'calc(100vh - 259px) !important',\n    },\n    paperWithoutIcons: {\n        height: 'calc(100vh - 235px) !important',\n    },\n    padding: {\n        padding: '10px',\n    },\n    heading: {},\n    primary: (theme: IobTheme): React.CSSProperties => ({\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.mode === 'dark' ? 'inherit' : '#FFF',\n    }),\n    secondary: (theme: IobTheme): React.CSSProperties => ({\n        backgroundColor: theme.palette.secondary.main,\n    }),\n};\n\ninterface ConfigPanelProps extends ConfigGenericProps {\n    schema: ConfigItemPanel;\n    withIcons?: boolean;\n}\ninterface ConfigPanelState extends ConfigGenericState {\n    expanded?: boolean;\n}\n\nclass ConfigPanel extends ConfigGeneric<ConfigPanelProps, ConfigPanelState> {\n    componentDidMount(): void {\n        super.componentDidMount();\n        if (this.props.schema && this.props.schema.collapsable) {\n            this.setState({\n                expanded:\n                    (((window as any)._localStorage as Storage) || window.localStorage).getItem(\n                        `${this.props.oContext.adapterName}.${this.props.attr}`,\n                    ) === 'true',\n            });\n        }\n    }\n\n    renderItems(items: Record<string, any>, disabled: boolean): JSX.Element[] | null {\n        return items\n            ? Object.keys(items).map(attr => {\n                  if (this.props.oContext.multiEdit && items[attr].noMultiEdit) {\n                      return null;\n                  }\n\n                  const type = items[attr].type || 'panel';\n                  let ItemComponent: typeof ConfigGeneric<ConfigGenericProps, any>;\n                  if (type === 'custom') {\n                      // name\n                      // url\n                      if (items[attr].url) {\n                          ItemComponent = ConfigCustom;\n                      } else if (this.props.oContext.customs && this.props.oContext.customs[items[attr].component]) {\n                          ItemComponent = this.props.oContext.customs[items[attr].component];\n                      } else {\n                          console.error(`Cannot find custom component: ${items[attr].component}`);\n                          ItemComponent = ConfigGeneric;\n                      }\n                  } else if (type === 'panel') {\n                      ItemComponent = ConfigPanel;\n                  } else {\n                      ItemComponent = components[type] || ConfigGeneric;\n                  }\n\n                  return (\n                      <ItemComponent\n                          oContext={this.props.oContext}\n                          key={`${attr}_${this.props.index === undefined ? '' : this.props.index}`}\n                          index={this.props.index}\n                          changed={this.props.changed}\n                          arrayIndex={this.props.arrayIndex}\n                          commandRunning={this.props.commandRunning}\n                          style={styles.panel}\n                          common={this.props.common}\n                          alive={this.props.alive}\n                          themeName={this.props.themeName}\n                          data={this.props.data}\n                          originalData={this.props.originalData}\n                          onError={this.props.onError}\n                          onChange={this.props.onChange}\n                          disabled={disabled}\n                          customObj={this.props.customObj}\n                          custom={this.props.custom}\n                          schema={items[attr]}\n                          attr={attr}\n                          table={this.props.table}\n                      />\n                  );\n              })\n            : null;\n    }\n\n    render(): JSX.Element | null {\n        const schema = this.props.schema;\n\n        if (!schema) {\n            return null;\n        }\n\n        const { disabled, hidden } = this.calculate(schema);\n\n        const items = this.props.schema.items;\n        const schemaStyle = this.props.schema.style || {};\n\n        if (hidden) {\n            if (schema.hideOnlyControl) {\n                const item = (\n                    <Grid2\n                        size={{\n                            xs: schema.xs || undefined,\n                            sm: schema.sm || undefined,\n                            md: schema.md || undefined,\n                            lg: schema.lg || undefined,\n                            xl: schema.xl || undefined,\n                        }}\n                        sx={Utils.getStyle(\n                            this.props.oContext.theme,\n                            { marginBottom: 0, textAlign: 'left' /* marginRight: 8, */ },\n                            schemaStyle,\n                            this.props.oContext.themeType === 'dark' && schema.darkStyle,\n                        )}\n                    />\n                );\n\n                if (schema.newLine) {\n                    return (\n                        <>\n                            <div style={{ flexBasis: '100%', height: 0 }} />\n                            {item}\n                        </>\n                    );\n                }\n                return item;\n            }\n            return null;\n        }\n\n        if (this.props.table) {\n            return this.renderItems(items, disabled) as any as JSX.Element;\n        }\n\n        if (this.props.custom) {\n            return (\n                <Grid2\n                    key={`${this.props.attr}_${this.props.index}`}\n                    container\n                    style={styles.fullWidth}\n                    columnSpacing={2}\n                    rowSpacing={1}\n                    sx={schemaStyle}\n                >\n                    {this.renderItems(items, disabled)}\n                </Grid2>\n            );\n        }\n\n        let content;\n        if (schema.collapsable) {\n            content = (\n                <Accordion\n                    key={`${this.props.attr}_${this.props.index}`}\n                    style={styles.fullWidth}\n                    expanded={!!this.state.expanded}\n                    onChange={() => {\n                        (((window as any)._localStorage as Storage) || window.localStorage).setItem(\n                            `${this.props.oContext.adapterName}.${this.props.attr}`,\n                            this.state.expanded ? 'false' : 'true',\n                        );\n                        this.setState({ expanded: !this.state.expanded });\n                    }}\n                >\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        sx={Utils.getStyle(\n                            this.props.oContext.theme,\n                            schemaStyle,\n                            this.props.oContext.themeType && schema.darkStyle,\n                            schema.color === 'primary'\n                                ? styles.primary\n                                : schema.color === 'secondary' && styles.secondary,\n                            { width: '100%' },\n                        )}\n                    >\n                        <Typography style={styles.heading}>{this.getText(schema.label)}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                        <Grid2\n                            container\n                            columnSpacing={2}\n                            rowSpacing={1}\n                            sx={{ ...schemaStyle, width: '100%', padding: '10px' }}\n                        >\n                            {this.renderItems(items, disabled)}\n                        </Grid2>\n                    </AccordionDetails>\n                </Accordion>\n            );\n        } else {\n            content = (\n                <Box\n                    component=\"div\"\n                    key={`${this.props.attr}_${this.props.index}`}\n                    className={this.props.className}\n                    sx={Utils.getStyle(\n                        this.props.oContext.theme,\n                        this.props.style,\n                        schemaStyle,\n                        { width: '100%' },\n                        this.props.isParentTab && styles.paper,\n                        this.props.isParentTab &&\n                            (this.props.withIcons ? styles.paperWithIcons : styles.paperWithoutIcons),\n                    )}\n                >\n                    <Grid2\n                        container\n                        columnSpacing={2}\n                        rowSpacing={1}\n                        sx={Utils.getStyle(\n                            this.props.oContext.theme,\n                            { width: '100%' },\n                            this.props.isParentTab && styles.padding,\n                            this.props.schema.innerStyle,\n                        )}\n                    >\n                        {this.renderItems(items, disabled)}\n                    </Grid2>\n                </Box>\n            );\n        }\n\n        if (!this.props.isParentTab) {\n            const item = (\n                <Grid2\n                    title={this.getText(schema.tooltip)}\n                    size={{\n                        xs: schema.xs || undefined,\n                        sm: schema.sm || undefined,\n                        md: schema.md || undefined,\n                        lg: schema.lg || undefined,\n                        xl: schema.xl || undefined,\n                    }}\n                    sx={{ marginBottom: 0, /* marginRight: 8, */ textAlign: 'left', ...schemaStyle }}\n                >\n                    {content}\n                </Grid2>\n            );\n\n            if (schema.newLine) {\n                return (\n                    <>\n                        <div style={{ flexBasis: '100%', height: 0 }} />\n                        {item}\n                    </>\n                );\n            }\n            return item;\n        }\n        return content;\n    }\n}\n\nexport default ConfigPanel;\n","import React, { type JSX } from 'react';\n\nimport { DatePicker } from '@mui/x-date-pickers';\n\nimport type { ConfigItemDatePicker } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps } from './ConfigGeneric';\n\ninterface ConfigDatePickerProps extends ConfigGenericProps {\n    schema: ConfigItemDatePicker;\n}\n\nexport default class ConfigDatePicker extends ConfigGeneric<ConfigDatePickerProps> {\n    componentDidMount(): void {\n        super.componentDidMount();\n        const value = ConfigGeneric.getValue(this.props.data, this.props.attr);\n        this.setState({ value });\n    }\n\n    renderItem(_error: unknown, disabled: boolean /* , defaultValue */): JSX.Element {\n        return (\n            <DatePicker\n                sx={theme => ({\n                    width: '100%',\n                    borderBottom: `1px solid ${theme.palette.text.primary}`,\n                    '& fieldset': {\n                        display: 'none',\n                    },\n                    '& input': {\n                        padding: `${theme.spacing(1.5)} 0 4px 0`,\n                    },\n                    '& .MuiInputAdornment-root': {\n                        marginLeft: 0,\n                        marginTop: 1, // it is already in spaces\n                    },\n                    '& label': {\n                        transform: 'translate(0px, -9px) scale(0.75)',\n                    },\n                })}\n                format={this.props.oContext.systemConfig.dateFormat.toLowerCase().replace('mm', 'MM')}\n                disabled={!!disabled}\n                value={this.state.value as never}\n                onChange={value => {\n                    this.setState({ value }, () => this.onChange(this.props.attr, this.state.value));\n                }}\n                label={this.getText(this.props.schema.label)}\n            />\n        );\n    }\n}\n","import React, { type JSX } from 'react';\n\nimport { TimePicker } from '@mui/x-date-pickers';\n\nimport type { ConfigItemTimePicker } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps } from './ConfigGeneric';\n\ninterface ConfigTimePickerProps extends ConfigGenericProps {\n    schema: ConfigItemTimePicker;\n    dialogName?: string;\n}\n\nexport default class ConfigTimePicker extends ConfigGeneric<ConfigTimePickerProps> {\n    componentDidMount(): void {\n        super.componentDidMount();\n        const value = ConfigGeneric.getValue(this.props.data, this.props.attr);\n        this.setState({ value });\n    }\n\n    renderItem(_error: unknown, disabled: boolean): JSX.Element {\n        // the format could be 'HH:mm:ss' or 'HH:mm'\n        const shortFormat = this.props.schema.returnFormat !== 'HH:mm:ss';\n\n        const value: never = new Date(Date.parse(`Thu, 01 Jan 1970 ${this.state.value || '00:00:00'}`)) as never;\n\n        return (\n            <TimePicker\n                sx={theme => ({\n                    width: '100%',\n                    borderBottom: `1px solid ${theme.palette.text.primary}`,\n                    '& fieldset': {\n                        display: 'none',\n                    },\n                    '& input': {\n                        padding: `${theme.spacing(1.5)} 0 4px 0`,\n                    },\n                    '& .MuiInputAdornment-root': {\n                        marginLeft: 0,\n                        marginTop: 1, // it is already in spaces\n                    },\n                    '& label': {\n                        transform: 'translate(0px, -9px) scale(0.75)',\n                    },\n                })}\n                ampm={this.props.oContext.systemConfig.dateFormat.includes('/')}\n                timeSteps={\n                    this.props.schema.timeSteps || this.props.schema.timesteps || { hours: 1, minutes: 5, seconds: 5 }\n                }\n                format={this.props.schema.format || 'HH:mm:ss'}\n                disabled={!!disabled}\n                value={value}\n                onChange={(newValue: Date) => {\n                    let strValue: string;\n                    strValue =\n                        (newValue as any) instanceof Date\n                            ? newValue.toTimeString().split(' ')[0]\n                            : newValue.toTimeString();\n                    if (shortFormat) {\n                        strValue = strValue.split(':').slice(0, 2).join(':');\n                    }\n\n                    this.setState({ value: strValue }, () => this.onChange(this.props.attr, this.state.value));\n                }}\n                views={this.props.schema.views || ['hours', 'minutes', 'seconds']}\n                label={this.getText(this.props.schema.label)}\n            />\n        );\n    }\n}\n","import React, { type JSX } from 'react';\n\nimport { Tabs, Tab } from '@mui/material';\n\nimport type { ConfigItemTabs } from '#JC/types';\nimport ConfigGeneric, { type ConfigGenericProps, type ConfigGenericState } from './ConfigGeneric';\nimport ConfigPanel from './ConfigPanel';\n\nconst styles: Record<string, React.CSSProperties> = {\n    tabs: {\n        height: '100%',\n        width: '100%',\n    },\n    panel: {\n        width: '100%',\n        display: 'block',\n    },\n    panelWithIcons: {\n        height: 'calc(100% - 72px)',\n    },\n    panelWithoutIcons: {\n        height: 'calc(100% - 48px)',\n    },\n};\n\ninterface ConfigTabsProps extends ConfigGenericProps {\n    schema: ConfigItemTabs;\n    dialogName?: string;\n}\n\ninterface ConfigTabsState extends ConfigGenericState {\n    tab?: string;\n}\n\nclass ConfigTabs extends ConfigGeneric<ConfigTabsProps, ConfigTabsState> {\n    constructor(props: ConfigTabsProps) {\n        super(props);\n        let tab: string | undefined;\n\n        if (this.props.root) {\n            // read the path from hash\n            // #tab-instances/config/system.adapter.ping.0/<TAB-NAME-OR-INDEX>\n            const hash = (window.location.hash || '').replace(/^#/, '').split('/');\n            if (hash.length >= 3 && hash[1] === 'config') {\n                const tabS = hash[3];\n                const tabN = parseInt(tabS, 10);\n                if (tabS && tabN.toString() === tabS) {\n                    if (tabN >= 0 && tabN < Object.keys(this.props.schema.items).length) {\n                        tab = Object.keys(this.props.schema.items)[tabN];\n                    }\n                } else if (tabS && Object.keys(this.props.schema.items).includes(tabS)) {\n                    tab = tabS;\n                }\n\n                // install on hash change handler\n                window.addEventListener('hashchange', this.onHashTabsChanged, false);\n            }\n        }\n\n        if (tab === undefined) {\n            tab =\n                (((window as any)._localStorage as Storage) || window.localStorage).getItem(\n                    `${this.props.dialogName || 'App'}.${this.props.oContext.adapterName}`,\n                ) || Object.keys(this.props.schema.items)[0];\n            if (!Object.keys(this.props.schema.items).includes(tab)) {\n                tab = Object.keys(this.props.schema.items)[0];\n            }\n        }\n\n        Object.assign(this.state, { tab });\n    }\n\n    componentWillUnmount(): void {\n        window.removeEventListener('hashchange', this.onHashTabsChanged, false);\n        super.componentWillUnmount();\n    }\n\n    onHashTabsChanged = (): void => {\n        const hash = (window.location.hash || '').replace(/^#/, '').split('/');\n        if (hash.length > 3 && hash[1] === 'config') {\n            const tabS = hash[3];\n            const tabN = parseInt(tabS, 10);\n            let tab;\n            if (tabN.toString() === tabS) {\n                if (tabN >= 0 && tabN < Object.keys(this.props.schema.items).length) {\n                    tab = Object.keys(this.props.schema.items)[tabN];\n                }\n            } else if (Object.keys(this.props.schema.items).includes(tabS)) {\n                tab = tabS;\n            }\n            if (tab !== undefined && tab !== this.state.tab) {\n                (((window as any)._localStorage as Storage) || window.localStorage).setItem(\n                    `${this.props.dialogName || 'App'}.${this.props.oContext.adapterName}`,\n                    tab,\n                );\n                this.setState({ tab });\n            }\n        }\n    };\n\n    render(): JSX.Element {\n        const items = this.props.schema.items;\n        let withIcons = false;\n\n        return (\n            <div style={styles.tabs}>\n                <Tabs\n                    variant=\"scrollable\"\n                    scrollButtons=\"auto\"\n                    style={this.props.schema.tabsStyle}\n                    value={this.state.tab}\n                    onChange={(e, tab) => {\n                        (((window as any)._localStorage as Storage) || window.localStorage).setItem(\n                            `${this.props.dialogName || 'App'}.${this.props.oContext.adapterName}`,\n                            tab,\n                        );\n                        this.setState({ tab }, () => {\n                            if (this.props.root) {\n                                const hash = (window.location.hash || '').split('/');\n                                if (hash.length >= 3 && hash[1] === 'config') {\n                                    hash[3] = this.state.tab;\n                                    window.location.hash = hash.join('/');\n                                }\n                            }\n                        });\n                    }}\n                >\n                    {Object.keys(items).map(name => {\n                        let disabled: boolean;\n                        if (this.props.custom) {\n                            const hidden = this.executeCustom(\n                                items[name].hidden,\n                                this.props.data,\n                                this.props.customObj,\n                                this.props.oContext.instanceObj,\n                                this.props.index,\n                                this.props.globalData,\n                            );\n                            if (hidden) {\n                                return null;\n                            }\n                            disabled = this.executeCustom(\n                                items[name].disabled,\n                                this.props.data,\n                                this.props.customObj,\n                                this.props.oContext.instanceObj,\n                                this.props.index,\n                                this.props.globalData,\n                            ) as boolean;\n                        } else {\n                            const hidden: boolean = this.execute(\n                                items[name].hidden,\n                                false,\n                                this.props.data,\n                                this.props.index,\n                                this.props.globalData,\n                            ) as boolean;\n                            if (hidden) {\n                                return null;\n                            }\n                            disabled = this.execute(\n                                items[name].disabled,\n                                false,\n                                this.props.data,\n                                this.props.index,\n                                this.props.globalData,\n                            ) as boolean;\n                        }\n                        const icon = this.getIcon(items[name].icon);\n                        withIcons = withIcons || !!icon;\n\n                        return (\n                            <Tab\n                                id={name}\n                                wrapped\n                                disabled={disabled}\n                                key={name}\n                                value={name}\n                                iconPosition={this.props.schema.iconPosition || 'start'}\n                                icon={icon}\n                                label={this.getText(items[name].label)}\n                            />\n                        );\n                    })}\n                </Tabs>\n                <ConfigPanel\n                    oContext={this.props.oContext}\n                    isParentTab\n                    changed={this.props.changed}\n                    key={this.state.tab}\n                    index={1001}\n                    arrayIndex={this.props.arrayIndex}\n                    globalData={this.props.globalData}\n                    commandRunning={this.props.commandRunning}\n                    style={{\n                        ...styles.panel,\n                        ...(withIcons ? styles.panelWithIcons : styles.panelWithoutIcons),\n                    }}\n                    common={this.props.common}\n                    alive={this.props.alive}\n                    themeName={this.props.themeName}\n                    data={this.props.data}\n                    originalData={this.props.originalData}\n                    onChange={this.props.onChange}\n                    onError={this.props.onError}\n                    customObj={this.props.customObj}\n                    custom={this.props.custom}\n                    schema={items[this.state.tab]}\n                    table={this.props.table}\n                    withIcons={withIcons}\n                />\n            </div>\n        );\n    }\n}\n\nexport default ConfigTabs;\n","import React, { Component, type JSX } from 'react';\n\nimport { LinearProgress } from '@mui/material';\n\nimport { type AdminConnection, I18n, type ThemeName, type ThemeType, type IobTheme } from '@iobroker/adapter-react-v5';\n\nimport type { BackEndCommand, ConfigItemPanel, ConfigItemTabs, JsonConfigContext } from '#JC/types';\nimport type ConfigGeneric from '#JC/JsonConfigComponent/ConfigGeneric';\nimport { type DeviceManagerPropsProps } from '#JC/JsonConfigComponent/ConfigGeneric';\nimport ConfigTabs from './ConfigTabs';\nimport ConfigPanel from './ConfigPanel';\n\nconst styles: Record<string, React.CSSProperties> = {\n    root: {\n        width: '100%',\n        height: '100%',\n    },\n};\n\ninterface JsonConfigComponentProps {\n    socket: AdminConnection;\n    themeName: ThemeName;\n    themeType: ThemeType;\n    adapterName: string;\n    instance: number;\n    isFloatComma: boolean;\n    dateFormat: string;\n    imagePrefix?: string;\n    schema: ConfigItemTabs | ConfigItemPanel;\n    common?: Record<string, any>;\n    data: Record<string, any>;\n    updateData?: number;\n    onError: (error: boolean) => void;\n    onChange?: (data: Record<string, any>, changed: boolean, saveConfig: boolean) => void;\n    /** Backend request to refresh data */\n    onBackEndCommand?: (command?: BackEndCommand) => void;\n    custom?: boolean;\n    onValueChange?: (attr: string, value: any, saveConfig: boolean) => void;\n    embedded?: boolean;\n    multiEdit?: boolean;\n    instanceObj?: ioBroker.InstanceObject;\n    customObj?: ioBroker.Object;\n    customs?: Record<string, typeof ConfigGeneric>;\n    DeviceManager?: React.FC<DeviceManagerPropsProps>;\n    style?: React.CSSProperties;\n    theme: IobTheme;\n    expertMode?: boolean;\n}\n\ninterface JsonConfigComponentState {\n    originalData: string;\n    changed: boolean;\n    errors: Record<string, string>;\n    systemConfig: ioBroker.SystemConfigCommon | null;\n    updateData?: number;\n    alive: boolean;\n    commandRunning: boolean;\n    schema: ConfigItemTabs | ConfigItemPanel;\n}\n\nexport class JsonConfigComponent extends Component<JsonConfigComponentProps, JsonConfigComponentState> {\n    private readonly forceUpdateHandlers: Record<string, (data: any) => void>;\n\n    private errorTimeout: ReturnType<typeof setTimeout> | null = null;\n\n    private errorCached: Record<string, string> | null = null;\n\n    private oContext: JsonConfigContext;\n\n    constructor(props: JsonConfigComponentProps) {\n        super(props);\n\n        this.state = {\n            originalData: JSON.stringify(this.props.data),\n            changed: false,\n            errors: {},\n            updateData: this.props.updateData || 0,\n            systemConfig: null,\n            alive: false,\n            commandRunning: false,\n            schema: JSON.parse(JSON.stringify(this.props.schema)),\n        };\n\n        this.forceUpdateHandlers = {};\n\n        this.buildDependencies(this.state.schema);\n\n        this.readData();\n    }\n\n    static getDerivedStateFromProps(\n        props: JsonConfigComponentProps,\n        state: JsonConfigComponentState,\n    ): Partial<JsonConfigComponentState> | null {\n        if (props.updateData !== state.updateData) {\n            return {\n                updateData: props.updateData,\n                originalData: JSON.stringify(props.data),\n                schema: JSON.parse(JSON.stringify(props.schema)),\n            };\n        }\n        return null;\n    }\n\n    static async loadI18n(\n        socket: AdminConnection,\n        i18n: boolean | string | Record<string, Record<ioBroker.Languages, string>>,\n        adapterName: string,\n    ): Promise<string> {\n        if (i18n === true || (i18n && typeof i18n === 'string')) {\n            const lang = I18n.getLanguage();\n            const path = typeof i18n === 'string' ? i18n : 'i18n';\n            let exists = await socket.fileExists(`${adapterName}.admin`, `${path}/${lang}.json`);\n            let fileName;\n            if (exists) {\n                fileName = `${path}/${lang}.json`;\n            } else {\n                exists = await socket.fileExists(`${adapterName}.admin`, `${path}/${lang}/translations.json`);\n                if (exists) {\n                    fileName = `${path}/${lang}/translations.json`;\n                } else if (lang !== 'en') {\n                    // fallback to english\n                    exists = await socket.fileExists(`${adapterName}.admin`, `${path}/en.json`);\n                    if (exists) {\n                        fileName = `${path}/en.json`;\n                    } else {\n                        exists = await socket.fileExists(`${adapterName}.admin`, `${path}/en/translations.json`);\n                        if (exists) {\n                            fileName = `${path}/en/translations.json`;\n                        }\n                    }\n                }\n            }\n\n            if (fileName) {\n                const jsonFile = await socket.readFile(`${adapterName}.admin`, fileName);\n                let jsonStr: string;\n                if (jsonFile.file !== undefined) {\n                    jsonStr = jsonFile.file;\n                } else {\n                    // @ts-expect-error deprecated\n                    jsonStr = jsonFile;\n                }\n\n                try {\n                    const json = JSON.parse(jsonStr);\n                    // apply file to I18n\n                    I18n.extendTranslations(json, lang);\n                } catch (e) {\n                    console.error(`Cannot parse language file \"${adapterName}.admin/${fileName}: ${e}`);\n                    return '';\n                }\n                return fileName;\n            }\n            console.warn(`Cannot find i18n for ${adapterName} / ${fileName}`);\n            return '';\n        }\n        if (i18n && typeof i18n === 'object') {\n            I18n.extendTranslations(i18n);\n            return '';\n        }\n        return '';\n    }\n\n    onCommandRunning = (commandRunning: boolean): void => this.setState({ commandRunning });\n\n    readData(): void {\n        void this.props.socket\n            .getCompactSystemConfig()\n            .then(systemConfig =>\n                this.props.socket\n                    .getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`)\n                    .then(state =>\n                        this.setState({ systemConfig: systemConfig.common, alive: !!(state && state.val) }, () => {\n                            this.updateContext(true);\n                            if (!this.props.custom) {\n                                void this.props.socket.subscribeState(\n                                    `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`,\n                                    this.onAlive,\n                                );\n                            }\n                        }),\n                    ),\n            )\n            .catch(e => console.error(`Cannot read system config: ${e}`));\n    }\n\n    onAlive = (_id: string, state?: ioBroker.State | null): void => {\n        if (!!state?.val !== this.state.alive) {\n            this.setState({ alive: !!state?.val });\n        }\n    };\n\n    onChange = (attrOrData: string | Record<string, any>, value: any, cb?: () => void, saveConfig?: boolean): void => {\n        if (this.props.onValueChange) {\n            this.props.onValueChange(attrOrData as string, value, saveConfig);\n            if (cb) {\n                cb();\n            }\n        } else if (attrOrData && this.props.onChange) {\n            const newState: Partial<JsonConfigComponentState> = {\n                changed: JSON.stringify(attrOrData) !== this.state.originalData,\n            };\n\n            this.setState(newState as JsonConfigComponentState, () => {\n                this.props.onChange(attrOrData as Record<string, any>, newState.changed, saveConfig);\n                if (cb) {\n                    cb();\n                }\n            });\n        } else if (saveConfig) {\n            this.props.onChange(null, null, saveConfig);\n        }\n    };\n\n    onError = (attr: string, error?: string): void => {\n        this.errorCached = this.errorCached || JSON.parse(JSON.stringify(this.state.errors));\n        const errors = this.errorCached;\n        if (error) {\n            errors[attr] = error;\n        } else {\n            delete errors[attr];\n        }\n\n        if (this.errorTimeout) {\n            clearTimeout(this.errorTimeout);\n        }\n        if (JSON.stringify(errors) !== JSON.stringify(this.state.errors)) {\n            this.errorTimeout = setTimeout(\n                () =>\n                    this.setState({ errors: this.errorCached }, () => {\n                        this.errorTimeout = null;\n                        this.errorCached = null;\n                        this.props.onError(!!Object.keys(this.state.errors).length);\n                    }),\n                50,\n            );\n        } else {\n            this.errorCached = null;\n        }\n    };\n\n    flatten(schema: Record<string, any>, _list?: Record<string, any>): Record<string, any> {\n        _list = _list || {};\n        if (schema.items) {\n            Object.keys(schema.items).forEach(attr => {\n                _list[attr] = schema.items[attr];\n                this.flatten(schema.items[attr], _list);\n            });\n        }\n\n        return _list;\n    }\n\n    buildDependencies(schema: ConfigItemTabs | ConfigItemPanel): void {\n        const attrs = this.flatten(schema as Record<string, any>);\n        Object.keys(attrs).forEach(attr => {\n            if (attrs[attr].confirm?.alsoDependsOn) {\n                attrs[attr].confirm?.alsoDependsOn.forEach((dep: string) => {\n                    if (!attrs[dep]) {\n                        console.error(`[JsonConfigComponent] Attribute ${dep} does not exist!`);\n                        if (dep.startsWith('data.')) {\n                            console.warn(\n                                `[JsonConfigComponent] please use \"${dep.replace(/^data\\./, '')}\" instead of \"${dep}\"`,\n                            );\n                        }\n                    } else {\n                        attrs[dep].confirmDependsOn = attrs[dep].confirmDependsOn || [];\n\n                        const depObj = { ...attrs[attr], attr };\n                        if (depObj.confirm) {\n                            depObj.confirm.cancel = 'Undo';\n                        }\n\n                        attrs[dep].confirmDependsOn.push(depObj);\n                    }\n                });\n            }\n\n            if (attrs[attr].onChange?.alsoDependsOn) {\n                attrs[attr].onChange?.alsoDependsOn.forEach((dep: string) => {\n                    if (!attrs[dep]) {\n                        console.error(`[JsonConfigComponent] Attribute ${dep} does not exist!`);\n                        if (dep.startsWith('data.')) {\n                            console.warn(\n                                `[JsonConfigComponent] please use \"${dep.replace(/^data\\./, '')}\" instead of \"${dep}\"`,\n                            );\n                        }\n                    } else {\n                        attrs[dep].onChangeDependsOn = attrs[dep].onChangeDependsOn || [];\n\n                        const depObj = { ...attrs[attr], attr };\n\n                        attrs[dep].onChangeDependsOn.push(depObj);\n                    }\n                });\n            }\n\n            if (attrs[attr].hidden?.alsoDependsOn) {\n                attrs[attr].hidden?.alsoDependsOn.forEach((dep: string) => {\n                    if (!attrs[dep]) {\n                        console.error(`[JsonConfigComponent] Attribute ${dep} does not exist!`);\n                        if (dep.startsWith('data.')) {\n                            console.warn(\n                                `[JsonConfigComponent] please use \"${dep.replace(/^data\\./, '')}\" instead of \"${dep}\"`,\n                            );\n                        }\n                    } else {\n                        attrs[dep].hiddenDependsOn = attrs[dep].hiddenDependsOn || [];\n\n                        const depObj = { ...attrs[attr], attr };\n\n                        attrs[dep].hiddenDependsOn.push(depObj);\n                    }\n                });\n            }\n\n            if (attrs[attr].label?.alsoDependsOn) {\n                attrs[attr].label?.alsoDependsOn.forEach((dep: string) => {\n                    if (!attrs[dep]) {\n                        console.error(`[JsonConfigComponent] Attribute ${dep} does not exist!`);\n                        if (dep.startsWith('data.')) {\n                            console.warn(\n                                `[JsonConfigComponent] please use \"${dep.replace(/^data\\./, '')}\" instead of \"${dep}\"`,\n                            );\n                        }\n                    } else {\n                        attrs[dep].labelDependsOn = attrs[dep].labelDependsOn || [];\n\n                        const depObj = { ...attrs[attr], attr };\n\n                        attrs[dep].labelDependsOn.push(depObj);\n                    }\n                });\n            }\n\n            if (attrs[attr].help?.alsoDependsOn) {\n                attrs[attr].help?.alsoDependsOn.forEach((dep: string) => {\n                    if (!attrs[dep]) {\n                        console.error(`[JsonConfigComponent] Attribute ${dep} does not exist!`);\n                        if (dep.startsWith('data.')) {\n                            console.warn(\n                                `[JsonConfigComponent] please use \"${dep.replace(/^data\\./, '')}\" instead of \"${dep}\"`,\n                            );\n                        }\n                    } else {\n                        attrs[dep].helpDependsOn = attrs[dep].helpDependsOn || [];\n\n                        const depObj = { ...attrs[attr], attr };\n\n                        attrs[dep].helpDependsOn.push(depObj);\n                    }\n                });\n            }\n        });\n    }\n\n    updateContext(forceUpdate?: boolean): void {\n        this.oContext = {\n            DeviceManager: this.props.DeviceManager,\n            adapterName: this.props.adapterName,\n            changeLanguage: this.changeLanguage,\n            common: this.props.common,\n            customs: this.props.customs,\n            dateFormat: this.props.dateFormat,\n            embedded: this.props.embedded,\n            expertMode: this.props.expertMode,\n            forceUpdate: this.forceAttrUpdate,\n            imagePrefix: this.props.imagePrefix,\n            instance: this.props.instance,\n            instanceObj: this.props.instanceObj,\n            isFloatComma: this.props.isFloatComma,\n            multiEdit: this.props.multiEdit,\n            onBackEndCommand: this.props.onBackEndCommand,\n            onCommandRunning: this.onCommandRunning,\n            onValueChange: this.props.onValueChange,\n            registerOnForceUpdate: this.registerOnForceUpdate,\n            socket: this.props.socket,\n            systemConfig: this.state.systemConfig,\n            theme: this.props.theme,\n            // could be changed dynamically\n            themeType: this.props.themeType,\n            _themeName: this.props.themeName,\n            updateData: this.state.updateData,\n        } as JsonConfigContext;\n\n        if (forceUpdate) {\n            this.forceUpdate();\n        }\n    }\n\n    renderItem(item: ConfigItemTabs | ConfigItemPanel): JSX.Element | null {\n        if (item.type === 'tabs') {\n            return (\n                <ConfigTabs\n                    oContext={this.oContext}\n                    alive={this.state.alive}\n                    changed={this.state.changed}\n                    commandRunning={this.state.commandRunning}\n                    common={this.props.common}\n                    custom={this.props.custom}\n                    customObj={this.props.customObj}\n                    data={this.props.data}\n                    onChange={this.onChange}\n                    onError={(attr, error) => this.onError(attr, error)}\n                    originalData={JSON.parse(this.state.originalData)}\n                    root\n                    schema={item}\n                    themeName={this.props.themeName}\n                />\n            );\n        }\n        if (\n            item.type === 'panel' ||\n            // @ts-expect-error type could be empty\n            !item.type\n        ) {\n            return (\n                <ConfigPanel\n                    oContext={this.oContext}\n                    alive={this.state.alive}\n                    changed={this.state.changed}\n                    commandRunning={this.state.commandRunning}\n                    common={this.props.common}\n                    custom={this.props.custom}\n                    customObj={this.props.customObj}\n                    data={this.props.data}\n                    index={1000}\n                    isParentTab={!this.props.embedded}\n                    onChange={this.onChange}\n                    onError={(attr, error) => this.onError(attr, error)}\n                    originalData={JSON.parse(this.state.originalData)}\n                    root\n                    schema={item}\n                    themeName={this.props.themeName}\n                />\n            );\n        }\n        console.error(`Unknown item type in root: ${JSON.stringify(item)}`);\n\n        return null;\n    }\n\n    changeLanguage = (): void => {\n        this.forceUpdate();\n    };\n\n    forceAttrUpdate = (attr: string | string[], data: any): void => {\n        if (Array.isArray(attr)) {\n            attr.forEach(a => this.forceUpdateHandlers[a] && this.forceUpdateHandlers[a](data));\n        } else if (this.forceUpdateHandlers[attr]) {\n            this.forceUpdateHandlers[attr](data);\n        }\n    };\n\n    registerOnForceUpdate = (attr: string, cb?: ((data: any) => void) | null): void => {\n        if (cb) {\n            this.forceUpdateHandlers[attr] = cb;\n        } else if (this.forceUpdateHandlers[attr]) {\n            delete this.forceUpdateHandlers[attr];\n        }\n    };\n\n    render(): JSX.Element {\n        if (!this.state.systemConfig || !this.oContext) {\n            return <LinearProgress />;\n        }\n\n        if (this.oContext._themeName !== this.props.themeName) {\n            this.oContext._themeName = this.props.themeName;\n            setTimeout(() => this.updateContext(true), 0);\n        }\n\n        return (\n            <div\n                style={{\n                    ...(!this.props.embedded ? styles.root : undefined),\n                    ...this.props.style,\n                    ...this.state.schema.style,\n                }}\n            >\n                {this.renderItem(this.state.schema)}\n            </div>\n        );\n    }\n}\n\nexport default JsonConfigComponent;\n","import React from 'react';\nimport JSON5 from 'json5';\nimport MD5 from 'crypto-js/md5';\n\nimport { Fab, Tooltip, LinearProgress } from '@mui/material';\nimport { Publish as PublishIcon } from '@mui/icons-material';\n\nimport {\n    I18n,\n    Router,\n    SaveCloseButtons,\n    Theme,\n    DialogConfirm,\n    type AdminConnection,\n    type IobTheme,\n    type ThemeName,\n    type ThemeType,\n    Utils,\n} from '@iobroker/adapter-react-v5';\n\nimport type { ConfigItemAny, ConfigItemPanel, ConfigItemTabs } from '#JC/types';\nimport ConfigGeneric, { type DeviceManagerPropsProps } from './JsonConfigComponent/ConfigGeneric';\nimport JsonConfigComponent from './JsonConfigComponent';\n\nconst styles: Record<string, React.CSSProperties> = {\n    root: {\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n        position: 'relative',\n    },\n    scroll: {\n        height: 'calc(100% - 48px)',\n        overflowY: 'auto',\n    },\n    exportImportButtons: {\n        position: 'absolute',\n        top: 5,\n        right: 0,\n        zIndex: 3,\n    },\n    button: {\n        marginRight: '5px',\n    },\n    tooltip: {\n        pointerEvents: 'none',\n    },\n};\n\n/**\n * Decrypt the password/value with given key\n *\n * @param key - Secret key\n * @param value - value to decrypt\n */\nfunction decryptLegacy(key: string, value: string): string {\n    let result = '';\n    for (let i = 0; i < value.length; i++) {\n        result += String.fromCharCode(key[i % key.length].charCodeAt(0) ^ value.charCodeAt(i));\n    }\n    return result;\n}\n\n/**\n * Encrypt the password/value with given key\n *\n * @param key - Secret key\n * @param value - value to encrypt\n */\nfunction encryptLegacy(key: string, value: string): string {\n    let result = '';\n    for (let i = 0; i < value.length; i++) {\n        result += String.fromCharCode(key[i % key.length].charCodeAt(0) ^ value.charCodeAt(i));\n    }\n    return result;\n}\n\n/**\n * Decrypt the password/value with given key\n *  Usage:\n *  ```js\n *     function load(settings, onChange) {\n *          if (settings.password) {\n *              settings.password = decrypt(systemSecret, settings.password);\n *              // same as\n *              settings.password = decrypt(settings.password);\n *          }\n *          // ...\n *     }\n *  ```\n *\n * @param key - Secret key\n * @param value - value to decrypt\n */\nfunction decrypt(key: string, value: string): string {\n    if (typeof value !== 'string') {\n        return value;\n    }\n\n    // if not encrypted as aes-192 or key not a valid 48-digit hex -> fallback\n    if (!value.startsWith('$/aes-192-cbc:') || !/^[0-9a-f]{48}$/.test(key)) {\n        return decryptLegacy(key, value);\n    }\n\n    // algorithm:iv:encryptedValue\n    const textParts = value.split(':', 3);\n\n    const _key = window.CryptoJS.enc.Hex.parse(key);\n    const iv = window.CryptoJS.enc.Hex.parse(textParts[1]);\n\n    const cipherParams = window.CryptoJS.lib.CipherParams.create({\n        ciphertext: window.CryptoJS.enc.Hex.parse(textParts[2]),\n    });\n\n    const decryptedBinary = window.CryptoJS.AES.decrypt(cipherParams, _key, { iv });\n\n    return window.CryptoJS.enc.Utf8.stringify(decryptedBinary);\n}\n\n/**\n * Encrypt the password/value with given key\n *  Usage:\n *  ```\n *     function save(callback) {\n *          ...\n *          if (obj.password) {\n *              obj.password = encrypt(systemSecret, obj.password);\n *              // same as\n *              obj.password = decrypt(obj.password);\n *          }\n *          ...\n *    }\n *  ```\n *\n * @param key - Secret key\n * @param value - value to encrypt\n * @param _iv - optional initial vector for tests\n */\nfunction encrypt(key: string, value: string, _iv?: string): string {\n    if (typeof value !== 'string') {\n        return value;\n    }\n\n    if (!/^[0-9a-f]{48}$/.test(key)) {\n        // key length is not matching for AES-192-CBC or key is no valid hex - fallback to old encryption\n        return encryptLegacy(key, value);\n    }\n\n    let iv;\n    if (_iv) {\n        iv = window.CryptoJS.enc.Hex.parse(_iv);\n    } else {\n        iv = window.CryptoJS.lib.WordArray.random(128 / 8);\n    }\n\n    const _key = window.CryptoJS.enc.Hex.parse(key);\n    const encrypted = window.CryptoJS.AES.encrypt(value, _key, { iv }).ciphertext;\n\n    return `$/aes-192-cbc:${window.CryptoJS.enc.Hex.stringify(iv)}:${encrypted}`;\n}\n\nfunction loadScript(src: string, id: string): ((this: GlobalEventHandlers, ev: Event) => any) | null | Promise<void> {\n    if (!id || !document.getElementById(id)) {\n        return new Promise(resolve => {\n            const script = document.createElement('script');\n            script.setAttribute('id', id);\n            script.onload = resolve as unknown as (this: GlobalEventHandlers, ev: Event) => any;\n            script.src = src;\n            document.getElementsByTagName('head')[0].appendChild(script);\n        });\n    }\n    return document.getElementById(id)?.onload;\n}\n\ninterface BufferObject {\n    type: 'Buffer';\n    data: Buffer;\n}\n\ninterface JsonConfigProps {\n    adapterName: string;\n    instance: number;\n    isFloatComma: boolean;\n    dateFormat: string;\n    secret?: string;\n    socket: AdminConnection;\n    theme: IobTheme;\n    themeName: ThemeName;\n    themeType: ThemeType;\n    expertMode?: boolean;\n    /** Translate method */\n    t: typeof I18n.t;\n    configStored: (notChanged: boolean) => void;\n    width: 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n    DeviceManager?: React.FC<DeviceManagerPropsProps>;\n}\n\ninterface JsonConfigState {\n    schema?: ConfigItemPanel | ConfigItemTabs;\n    data?: Record<string, unknown>;\n    originalData?: Record<string, unknown>;\n    updateData: number;\n    common?: ioBroker.InstanceCommon;\n    changed: boolean;\n    confirmDialog: boolean;\n    theme: IobTheme;\n    saveConfigDialog: boolean;\n    hash: string;\n    error?: boolean;\n}\n\nclass JsonConfig extends Router<JsonConfigProps, JsonConfigState> {\n    private fileSubscribed: string[] = [];\n\n    private fileLangSubscribed = '';\n\n    private secret: string;\n\n    constructor(props: JsonConfigProps) {\n        super(props);\n\n        this.state = {\n            updateData: 0,\n            changed: false,\n            confirmDialog: false,\n            theme: Theme(props.themeName), // buttons require special theme\n            saveConfigDialog: false,\n            hash: '_',\n        };\n\n        this.secret = props.secret || '';\n\n        void this.getInstanceObject().then(obj =>\n            this.getConfigFile().then(schema =>\n                // load language\n                JsonConfigComponent.loadI18n(this.props.socket, schema?.i18n, this.props.adapterName).then(\n                    (langFileName: string) => {\n                        if (langFileName) {\n                            // subscribe on changes\n                            if (!this.fileLangSubscribed) {\n                                this.fileLangSubscribed = langFileName;\n                                void this.props.socket.subscribeFiles(\n                                    `${this.props.adapterName}.admin`,\n                                    this.fileLangSubscribed,\n                                    this.onFileChange,\n                                );\n                            }\n                        }\n\n                        if (obj) {\n                            this.setState({\n                                schema,\n                                data: obj.native,\n                                common: obj.common,\n                                hash: MD5(JSON.stringify(schema)).toString(),\n                            });\n                        } else {\n                            window.alert(\n                                `Instance system.adapter.${this.props.adapterName}.${this.props.instance} not found!`,\n                            );\n                        }\n                    },\n                ),\n            ),\n        );\n    }\n\n    componentWillUnmount(): void {\n        super.componentWillUnmount();\n        if (this.fileSubscribed.length) {\n            this.props.socket.unsubscribeFiles(\n                `${this.props.adapterName}.admin`,\n                this.fileSubscribed,\n                this.onFileChange,\n            );\n            this.fileSubscribed = [];\n        }\n        if (this.fileLangSubscribed) {\n            this.props.socket.unsubscribeFiles(\n                `${this.props.adapterName}.admin`,\n                this.fileLangSubscribed,\n                this.onFileChange,\n            );\n            this.fileLangSubscribed = '';\n        }\n    }\n\n    private handleFileSelect = (evt: Record<string, any>): void => {\n        const f = evt.target.files[0];\n        if (f) {\n            const r = new FileReader();\n            r.onload = (e: ProgressEvent<FileReader>): void => {\n                if (!e.target) {\n                    return;\n                }\n\n                const contents = e.target.result as string;\n                try {\n                    const data = JSON.parse(contents);\n                    this.setState({ data, changed: JSON.stringify(data) !== JSON.stringify(this.state.originalData) });\n                } catch {\n                    window.alert(I18n.t('[JsonConfig] Failed to parse JSON file'));\n                }\n            };\n            r.readAsText(f);\n        } else {\n            window.alert(I18n.t('[JsonConfig] Failed to open JSON File'));\n        }\n    };\n\n    getExportImportButtons(): JSX.Element {\n        return (\n            <div style={styles.exportImportButtons}>\n                <Tooltip\n                    title={this.props.t('Import settings from JSON file')}\n                    slotProps={{ popper: { sx: styles.tooltip } }}\n                >\n                    <Fab\n                        size=\"small\"\n                        sx={{ '&.MuiFab-root': styles.button }}\n                        onClick={() => {\n                            const input = document.createElement('input');\n                            input.setAttribute('type', 'file');\n                            input.setAttribute('id', 'files');\n                            // @ts-expect-error check\n                            input.setAttribute('opacity', 0);\n                            input.addEventListener('change', e => this.handleFileSelect(e), false);\n                            input.click();\n                        }}\n                    >\n                        <PublishIcon />\n                    </Fab>\n                </Tooltip>\n                <Tooltip\n                    title={this.props.t('Export setting to JSON file')}\n                    slotProps={{ popper: { sx: styles.tooltip } }}\n                >\n                    <Fab\n                        size=\"small\"\n                        sx={{ '&.MuiFab-root': styles.button }}\n                        onClick={() => {\n                            if (!this.state.data) {\n                                return;\n                            }\n\n                            Utils.generateFile(\n                                `${this.props.adapterName}.${this.props.instance}.json`,\n                                this.state.data,\n                            );\n                        }}\n                    >\n                        <PublishIcon style={{ transform: 'rotate(180deg)' }} />\n                    </Fab>\n                </Tooltip>\n            </div>\n        );\n    }\n\n    onFileChange = async (id: string, fileName: string, size: number): Promise<void> => {\n        if (id === `${this.props.adapterName}.admin` && size) {\n            if (fileName === this.fileLangSubscribed) {\n                try {\n                    await JsonConfigComponent.loadI18n(\n                        this.props.socket,\n                        this.state.schema?.i18n,\n                        this.props.adapterName,\n                    );\n                    this.setState({ hash: `${this.state.hash}1` });\n                } catch {\n                    // ignore errors\n                }\n            } else if (this.fileSubscribed.includes(fileName)) {\n                try {\n                    const schema = await this.getConfigFile(this.fileSubscribed[0]);\n                    this.setState({ schema, hash: MD5(JSON.stringify(schema)).toString() });\n                } catch {\n                    // ignore errors\n                }\n            }\n        }\n    };\n\n    async getInstanceObject(): Promise<ioBroker.InstanceObject | null> {\n        try {\n            const obj = await this.props.socket.getObject(\n                `system.adapter.${this.props.adapterName}.${this.props.instance}`,\n            );\n            // decode all native attributes listed in obj.encryptedNative\n            if (Array.isArray(obj.encryptedNative)) {\n                if (!this.secret) {\n                    const systemConfig = await this.props.socket.getSystemConfig();\n                    await loadScript('../../lib/js/crypto-js/crypto-js.js', 'crypto-js');\n                    this.secret = systemConfig.native.secret;\n                }\n                obj.encryptedNative?.forEach(attr => {\n                    if (obj.native[attr]) {\n                        obj.native[attr] = decrypt(this.secret, obj.native[attr]);\n                    }\n                });\n                return obj;\n            }\n            return obj;\n        } catch (e) {\n            window.alert(`[JsonConfig] Cannot read instance object: ${e}`);\n        }\n        return null;\n    }\n\n    renderDialogConfirm(): JSX.Element | null {\n        if (!this.state.confirmDialog) {\n            return null;\n        }\n        return (\n            <DialogConfirm\n                title={I18n.t('ra_Please confirm')}\n                text={I18n.t('ra_Some data are not stored. Discard?')}\n                ok={I18n.t('ra_Discard')}\n                cancel={I18n.t('ra_Cancel')}\n                onClose={(isYes: boolean) =>\n                    this.setState({ confirmDialog: false }, () => isYes && Router.doNavigate(null))\n                }\n            />\n        );\n    }\n\n    async scanForInclude(json: Record<string, any>, filePaths: string[]): Promise<Record<string, any>> {\n        if (typeof json['#include'] === 'string') {\n            // load file\n            const data = await this._getConfigFile(json['#include'], [...filePaths]);\n            delete json['#include'];\n            if (data) {\n                // merge data\n                json = { ...json, ...data };\n            }\n            return json;\n        }\n        const keys = Object.keys(json);\n        for (let k = 0; k < keys.length; k++) {\n            if (json[keys[k]] && typeof json[keys[k]] === 'object') {\n                json[keys[k]] = await this.scanForInclude(json[keys[k]], filePaths);\n            }\n        }\n        return json;\n    }\n\n    async getConfigFile(fileName?: string): Promise<ConfigItemPanel | ConfigItemTabs> {\n        return this._getConfigFile(fileName);\n    }\n\n    async _getConfigFile(fileName?: string, _filePaths?: string[]): Promise<ConfigItemPanel | ConfigItemTabs> {\n        fileName = fileName || 'jsonConfig.json5';\n        _filePaths = _filePaths || [];\n\n        if (_filePaths.includes(fileName)) {\n            window.alert(`[JsonConfig] Circular reference in file: ${fileName} => ${_filePaths.join(' => ')}`);\n            return null;\n        }\n        _filePaths.push(fileName);\n\n        try {\n            const exist = await this.props.socket.fileExists(`${this.props.adapterName}.admin`, fileName);\n            if (!exist) {\n                fileName = 'jsonConfig.json';\n            }\n            const data: {\n                file: string;\n                mimeType: string;\n            } = await this.props.socket.readFile(`${this.props.adapterName}.admin`, fileName);\n            let content = '';\n            let file: string | BufferObject = '';\n\n            if (data.file !== undefined) {\n                file = data.file;\n            }\n\n            if (typeof file === 'string') {\n                content = file;\n                // @ts-expect-error revisit\n            } else if (file.type === 'Buffer') {\n                let binary = '';\n                // @ts-expect-error revisit\n                const bytes = new Uint8Array(file.data);\n                const len = bytes.byteLength;\n                for (let i = 0; i < len; i++) {\n                    binary += String.fromCharCode(bytes[i]);\n                }\n                content = binary;\n            }\n\n            // subscribe on changes\n            if (!this.fileSubscribed.includes(fileName)) {\n                this.fileSubscribed.push(fileName);\n                await this.props.socket.subscribeFiles(`${this.props.adapterName}.admin`, fileName, this.onFileChange);\n            }\n\n            try {\n                // detect #include attr\n                return (await this.scanForInclude(JSON5.parse(content), _filePaths)) as\n                    | ConfigItemPanel\n                    | ConfigItemTabs;\n            } catch (e) {\n                window.alert('[JsonConfig] Cannot parse json5 config!');\n                console.log(e);\n            }\n        } catch (e1) {\n            if (!this.state.schema) {\n                window.alert(`[JsonConfig] Cannot read file \"${fileName}: ${e1}`);\n            }\n        }\n        return null;\n    }\n\n    renderSaveConfigDialog(): JSX.Element | null {\n        if (!this.state.saveConfigDialog) {\n            return null;\n        }\n        return (\n            <DialogConfirm\n                title={I18n.t('ra_Please confirm')}\n                text={I18n.t('Save configuration?')}\n                ok={I18n.t('ra_Save')}\n                cancel={I18n.t('ra_Cancel')}\n                onClose={(isYes: boolean) =>\n                    this.setState({ saveConfigDialog: false }, () => isYes && this.onSave(true))\n                }\n            />\n        );\n    }\n\n    findAttr(attr: string, schema?: ConfigItemPanel | ConfigItemTabs): ConfigItemAny | null {\n        schema = schema || this.state.schema;\n        if (schema?.items) {\n            if (attr in schema.items) {\n                return schema.items[attr];\n            }\n            for (const _item of Object.values(schema.items)) {\n                const item = this.findAttr(attr, _item as ConfigItemPanel | ConfigItemTabs);\n                if (item) {\n                    return item;\n                }\n            }\n        }\n\n        return null;\n    }\n\n    // this function is called recursively and trims all text fields, that must be trimmed\n    postProcessing(data: Record<string, unknown>, attr: string, schema: ConfigItemAny): void {\n        schema = schema || this.state.schema;\n        if (!data) {\n            // should not happen\n            console.error(`Data is empty in postProcessing: ${attr}, ${JSON.stringify(schema)}`);\n            return;\n        }\n\n        const dataAttr = data[attr];\n\n        if ((schema as ConfigItemTabs).items) {\n            if (schema.type === 'table') {\n                const table = dataAttr;\n\n                if (!Array.isArray(table)) {\n                    return;\n                }\n\n                for (const entry of table) {\n                    for (const tItem of schema.items) {\n                        this.postProcessing(entry, tItem.attr, tItem as ConfigItemAny);\n                    }\n                }\n            } else {\n                for (const [_attr, item] of Object.entries((schema as ConfigItemTabs).items)) {\n                    if (\n                        (item as any).type === 'panel' ||\n                        (item as any).type === 'tabs' ||\n                        (item as any).type === 'accordion'\n                    ) {\n                        return;\n                    }\n                    this.postProcessing(data, _attr, item);\n                }\n            }\n        } else if (attr && typeof dataAttr === 'string') {\n            // postprocessing\n            if (schema.type === 'text') {\n                if (schema.trim !== false) {\n                    data[attr] = dataAttr.trim();\n                }\n            } else if (schema.type === 'ip') {\n                // should not happen\n                data[attr] = dataAttr.trim();\n            } else if (schema.type === 'number') {\n                const dataVal = parseFloat(dataAttr.toString().replace(',', '.'));\n\n                if (schema.min !== undefined && dataVal < schema.min) {\n                    data[attr] = schema.min;\n                } else if (schema.max !== undefined && dataVal > schema.max) {\n                    data[attr] = schema.max;\n                } else {\n                    data[attr] = dataVal;\n                }\n            } else if (schema.type === 'port') {\n                const dataVal = parseInt(dataAttr.toString(), 10);\n                if (schema.min !== undefined && dataVal < schema.min) {\n                    data[attr] = schema.min;\n                } else if (schema.max !== undefined && dataVal > schema.max) {\n                    data[attr] = schema.max;\n                }\n                if (data[attr] !== 0 && dataVal < 20) {\n                    data[attr] = 20;\n                } else if (dataVal > 0xffff) {\n                    data[attr] = 0xffff;\n                } else {\n                    data[attr] = dataVal;\n                }\n            } else if (schema.type === 'checkbox') {\n                // should not happen\n                data[attr] =\n                    data[attr] === true ||\n                    data[attr] === 'true' ||\n                    data[attr] === 'on' ||\n                    data[attr] === 1 ||\n                    data[attr] === '1';\n            }\n        }\n    }\n\n    async onSave(doSave: boolean, close?: boolean): Promise<void> {\n        if (doSave) {\n            const obj = await this.getInstanceObject();\n\n            if (!obj) {\n                console.error('Something went wrong: may be no connection?');\n                window.alert('Something went wrong: may be no connection?');\n                return;\n            }\n\n            if (!this.state.data || !this.state.schema) {\n                return;\n            }\n\n            const doNotSaveAttributes: Record<string, any> = {};\n\n            for (const attr of Object.keys(this.state.data)) {\n                const item = this.findAttr(attr);\n                if ((!item || !item.doNotSave || item.type === 'state') && !attr.startsWith('_')) {\n                    ConfigGeneric.setValue(obj.native, attr, this.state.data[attr]);\n                } else {\n                    ConfigGeneric.setValue(obj.native, attr, null);\n                    doNotSaveAttributes[attr] = this.state.data[attr];\n                }\n            }\n\n            try {\n                const encryptedObj = JSON.parse(JSON.stringify(obj));\n                // encode all native attributes listed in obj.encryptedNative\n                if (Array.isArray(encryptedObj.encryptedNative)) {\n                    await loadScript('../../lib/js/crypto-js/crypto-js.js', 'crypto-js');\n\n                    for (const attr of encryptedObj.encryptedNative) {\n                        if (encryptedObj.native[attr]) {\n                            encryptedObj.native[attr] = encrypt(this.secret, encryptedObj.native[attr]);\n                        }\n                    }\n                }\n\n                await this.props.socket.setObject(encryptedObj._id, encryptedObj);\n            } catch (e) {\n                window.alert(`[JsonConfig] Cannot set object: ${e}`);\n            }\n\n            /** We want to preserve the doNotSaveAttributes too, just not save it */\n            const nativeWithNonSaved = { ...obj.native, ...doNotSaveAttributes };\n            console.log(nativeWithNonSaved);\n\n            this.setState(\n                {\n                    changed: false,\n                    data: nativeWithNonSaved,\n                    updateData: this.state.updateData + 1,\n                    originalData: nativeWithNonSaved,\n                },\n                () => close && Router.doNavigate(null),\n            );\n        } else if (this.state.changed) {\n            this.setState({ confirmDialog: true });\n        } else {\n            Router.doNavigate(null);\n        }\n    }\n\n    componentDidUpdate(_prevProps: JsonConfigProps, prevState: JsonConfigState): void {\n        if (prevState.changed !== this.state.changed) {\n            this.props.configStored(!this.state.changed);\n        }\n    }\n\n    /**\n     * Validate the JSON config once on mount\n     */\n    async componentDidMount(): Promise<void> {\n        const link = `${window.location.protocol}//${window.location.host}${window.location.pathname}validate_config/${this.props.adapterName}`;\n        console.log(`fetch ${link}`);\n        await fetch(link);\n    }\n\n    render(): JSX.Element {\n        if (!this.state.data || !this.state.schema) {\n            return <LinearProgress />;\n        }\n\n        return (\n            <div style={styles.root}>\n                {this.renderDialogConfirm()}\n                {this.getExportImportButtons()}\n                {this.renderSaveConfigDialog()}\n                <JsonConfigComponent\n                    key={this.state.hash}\n                    style={styles.scroll}\n                    socket={this.props.socket}\n                    themeName={this.props.themeName}\n                    themeType={this.props.themeType}\n                    adapterName={this.props.adapterName}\n                    instance={this.props.instance}\n                    isFloatComma={this.props.isFloatComma}\n                    dateFormat={this.props.dateFormat}\n                    schema={this.state.schema}\n                    common={this.state.common}\n                    expertMode={this.props.expertMode}\n                    data={this.state.data}\n                    updateData={this.state.updateData}\n                    onError={error => this.setState({ error })}\n                    onChange={(data, changed, saveConfigDialog) => {\n                        if (saveConfigDialog && this.state.error) {\n                            window.alert(I18n.t('Cannot save configuration because of error in configuration'));\n                            saveConfigDialog = false;\n                        }\n                        if (saveConfigDialog && !this.state.changed && !changed) {\n                            saveConfigDialog = false;\n                        }\n                        if (data) {\n                            this.setState({ data, changed, saveConfigDialog });\n                        } else if (saveConfigDialog !== undefined) {\n                            this.setState({ saveConfigDialog });\n                        }\n                    }}\n                    DeviceManager={this.props.DeviceManager}\n                    theme={this.state.theme}\n                />\n                <SaveCloseButtons\n                    isIFrame={false}\n                    dense\n                    paddingLeft={0}\n                    newReact\n                    theme={this.state.theme}\n                    noTextOnButtons={\n                        this.props.width === 'xs' || this.props.width === 'sm' || this.props.width === 'md'\n                    }\n                    changed={!!(this.state.error || this.state.changed)}\n                    error={!!this.state.error}\n                    onSave={(close: boolean) => this.onSave(true, close)}\n                    onClose={() => this.onSave(false)}\n                />\n            </div>\n        );\n    }\n}\n\nexport default JsonConfig;\n"],"names":["DEFAULT_SM_SIZE","window","innerWidth","undefined","isObject","it","Object","prototype","toString","call","ConfigGeneric","Component","constructor","props","super","defaultValue","isError","lang","defaultSendToDone","sendToTimeout","noPlaceRequired","onUpdate","data","value","getValue","this","attr","state","setState","forceUpdate","confirmDialog","confirmNewValue","confirmAttr","confirmData","confirmCallback","schema","custom","defaultFunc","executeCustom","customObj","oContext","instanceObj","arrayIndex","globalData","default","type","execute","I18n","getLanguage","componentDidMount","registerOnForceUpdate","LIKE_SELECT","includes","setTimeout","onChange","setValue","defaultSendTo","sendTo","alive","jsonData","dataStr","getPattern","JSON","parse","console","error","socket","adapterName","instance","then","allowSaveWithError","onError","t","componentWillUnmount","clearTimeout","split","length","part","shift","getText","text","noTranslation","strText","func","en","renderDialogConfirm","confirm","icon","_jsx","IconWarning","IconError","IconInfo","DialogConfirm","title","ok","cancel","onClose","isOk","callback","stringify","confirmDepAttr","confirmDepNewValue","getIcon","iconSettings","IconAuth","IconSend","IconWeb","IconSearch","IconMenuBook","IconHelp","IconUploadFile","IconEdit","IconPerson","IconGroup","IconDelete","IconRefresh","IconAdd","IconLinkOff","LinkIcon","Save","OpenInNew","endsWith","startsWith","Icon","src","style","width","height","onChangeAsync","newValue","Promise","resolve","mayBePromise","catch","e","cb","condition","confirmDependsOn","z","dep","val","changed","onChangeDependsOn","_newValue","calculateFunc","push","hiddenDependsOn","hidden","labelDependsOn","helpDependsOn","ignoreOwnChanges","newValue_","forEach","_attr","i","fun","Function","f","originalData","systemConfig","common","calculate","disabled","validator","renderItem","_error","_disabled","_defaultValue","label","renderHelp","link","href","target","rel","color","themeType","textDecoration","children","Utils","renderTextWithA","escapeString","str","replace","_match","p1","pattern","patternStr","log","render","expertMode","keys","hideOnlyControl","item","Grid2","size","xs","sm","md","lg","xl","marginBottom","textAlign","darkStyle","newLine","_jsxs","_Fragment","flexBasis","validatorNoSaveOnError","validatorErrorText","renderedItem","commandRunning","tooltip","button","container","flex","Button","variant","onClick","buttonTooltip","buttonTooltipNoTranslation","DIFFERENT_VALUE","DIFFERENT_LABEL","NONE_VALUE","NONE_LABEL","styles","fullWidth","accordionSummary","theme","backgroundColor","palette","mode","accordionTitle","toolbar","borderRadius","pointerEvents","typingTimer","onDelete","index","splice","iteration","onChangeWrapper","onClone","cloned","clone","match","parseInt","find","activeIndex","mayByPromise","onAdd","newItem","items","reduce","accumulator","currentValue","Array","isArray","itemAccordion","idx","schemaItem","marginLeft","marginTop","ConfigPanel","themeName","valueChange","newObj","table","onMoveUp","newIndex","onMoveDown","Paper","noDelete","Toolbar","Typography","id","component","IconButton","AddIcon","map","Accordion","expanded","_e","AccordionSummary","expandIcon","ExpandMoreIcon","sx","getStyle","titleAttr","AccordionDetails","Tooltip","slotProps","popper","UpIcon","buttonEmpty","DownIcon","DeleteIcon","CopyContentIcon","rootTool","help","FormHelperText","helpLink","getInstance","getState","textAlive","textNotAlive","selectOptions","options","unshift","filter","_item","freeSolo","Autocomplete","isOptionEqualToValue","option","filterOptions","params","filtered","inputValue","toLowerCase","onInputChange","_","getOptionLabel","_option$label","renderInput","TextField","placeholder","helperText","arguments","initialized","localContext","askInstance","command","list","getContext","alsoDependsOn","htmlInput","maxLength","max","trim","display","minWidth","showDialog","FormControl","InputLabel","shrink","value_","DialogCron","simple","complex","cron","onOk","getCertificates","el","name","_this$state$selectOpt","_this$state$selectOpt2","Select","displayEmpty","renderValue","item_","MenuItem","opacity","leWidth","certWidth","marginRight","_collectionsOptionsOb","certificates","certsPublicOptions","certsPrivateOptions","certsChainOptions","collectionsOptions","collectionsOptionsObj","getObject","native","collections","_this$state$certsPubl","_this$state$certsPriv","_this$state$certsChai","_this$state$collectio","_this$state$certsPubl2","_this$state$certsPriv2","_this$state$certsChai2","leCollection","leCollectionName","certPublic","certPublicName","certPrivate","certPrivateName","certChained","certChainedName","itemCertPublic","itemCertPrivate","itemCertChained","fontWeight","licLabel","textTransform","licValue","errorTitle","okTitle","errorText","mb","ConfigCheckLicense","running","showLicenseData","foundSuitableLicense","licenseOfflineCheck","result","allLicenses","askForUpdate","showLinkToProfile","renderErrorDialog","content","open","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","license","validName","product","validVersion","version","validUuid","uuid","validTill","Date","toLocaleDateString","invoice","Dialog","maxWidth","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","startIcon","IconCheck","renderMessageDialog","pre","key","obj","key1","Box","parseJwt","token","base64","jsonPayload","decodeURIComponent","atob","c","charCodeAt","slice","join","isVersionValid","rule","major","substring","findInLicenseManager","_licenses$native","_licenses$native$lice","licenses","errors","useLicense","now","_uuidObj$native","uuidObj","_aObj$common","aObj","getTime","parts","used","checkLicense","_uuidObj$native2","_aObj$common2","controller","AbortController","timeout","abort","_data","response","fetch","method","body","json","headers","signal","valid_till","toLocaleString","Error","data_","_error$response","status","renderAskForUpdate","async","isYes","updateLicenses","alert","_onClick","secondRun","useLicenseManager","li","CircularProgress","isIndeterminate","FormControlLabel","preventDefault","stopPropagation","control","Checkbox","indeterminate","checked","readOnly","variantComponent","standard","Input","filled","FilledInput","outlined","OutlinedInput","light","bottomLineColor","root","inputRoot","flexWrap","boxSizing","paddingTop","input","textOverflow","overflow","whiteSpace","appearance","WebkitTapHighlightColor","float","chipContainer","flexFlow","alignItems","cursor","minHeight","paddingBottom","labeled","top","labelShrink","focused","underline","borderBottom","primary","left","bottom","position","right","transform","transition","transitions","create","duration","shorter","easing","easeOut","borderBottomColor","main","borderBottomStyle","chip","margin","marginDense","keyCodes","defaultChipRenderer","_ref","isFocused","isDisabled","isReadOnly","handleClick","handleDelete","Chip","blue","ChipInput","React","labelRef","labelNode","newChipKeyCodes","newChipKeys","actualInput","inputBlurTimeout","_keyPressed","_preventChipCreation","styleTheme","focus","_this$actualInput","focusedChip","handleInputBlur","event","onBlur","addChipOptions","blurBehavior","clearInputOnFail","delayBeforeAdd","numChipsBefore","chips","numChipsAfter","handleAddChip","clearInput","handleInputFocus","onFocus","handleKeyDown","onKeyDown","isDefaultPrevented","keyCode","handleDeleteChip","handleKeyUp","updateInput","onKeyUp","handleUpdateInput","onUpdateInput","setActualInputRef","ref","inputRef","chipsUpdated","prevPropsValue","ReactDOM","current","getDerivedStateFromProps","newState","clearInputValueOnChange","onBeforeAdd","allowDuplicates","updateChips","additionalUpdates","alwaysShowPlaceholder","chipRenderer","className","disableUnderline","FormHelperTextProps","fullWidthInput","InputProps","InputLabelProps","required","rootRef","actualInputValue","hasInput","shrinkFloatingLabel","chipComponents","InputMore","notched","labelWidth","offsetWidth","startAdornment","InputComponent","htmlFor","delimiter","a","_chip","renderColorDialog","showColorDialog","ChromePicker","colorDialogValue","hex","textColor","isUseBright","endAdornment","noClearButton","ClearIcon","inputLabel","width50","useSystemName","useSystem","longitudeName","latitudeName","longitude","latitude","autoInit","getCoordinates","getSystemCoordinates","getCompactSystemConfig","divider","navigator","geolocation","getCurrentPosition","coords","message","_this$state$longitude","_this$state$latitude","Fab","IconLocationOn","IconGpsFixed","loadComponent","remote","sharedScope","module","url","getOrLoadRemote","shareScope","remoteFallbackUrl","reject","existingRemote","document","querySelector","onload","__initialized","init","__webpack_share_scopes__","onerror","d","script","createElement","setAttribute","getElementsByTagName","appendChild","get","ConfigCustom","assign","location","protocol","host","uniqueName","fileToLoad","componentNameParts","componentName","setPromise","runningLoads","i18nPromise","i18n","pos","lastIndexOf","i18nURL","file","extendTranslations","err","all","CustomComponent","LinearProgress","DeviceManager","uploadImagesToInstance","selectedInstance","isFloatComma","dateFormat","fullWidthOneButton","fullWidthTwoButtons","fullWidthThreeButtons","dropZone","dropZoneEmpty","image","objectFit","uploadDiv","uploadDivDragging","background","uploadCenterDiv","border","uploadCenterIcon","uploadCenterText","fontSize","uploadCenterTextAndIcon","flexDirection","justifyContent","disabledOpacity","deleteButton","selectedImage","IMAGE_EXT","AUDIO_EXT","VIDEO_EXT","DOC_EXT","JS_EXT","ConfigFileSelector","dropzoneRef","imagePrefix","objectID","path","upload","updateFiles","readFiles","files","readFolder","folderName","dirFiles","readDir","isDir","RegExp","test","stats","formatBytes","pos_","folder","onDrop","acceptedFiles","reader","FileReader","maxSize","onabort","ext","pop","Math","round","btoa","Uint8Array","byte","String","fromCharCode","writeFile64","readAsArrayBuffer","renderDeleteDialog","deleteFile","base64ToArrayBuffer","binaryString","len","bytes","buffer","loadFile","readFile","play","AudioContext","buf","decodeAudioData","source","createBufferSource","connect","destination","start","getFileIcon","extension","backgroundImage","backgroundSize","backgroundRepeat","IconAudio","IconText","IconVideo","IconCode","folders","withFolder","noSize","noNone","buttons","refresh","element","ListItemIcon","ListItemText","delete","_this$dropzoneRef$cur","IconUpload","IconPlay","accept","fileTypes","last","Dropzone","multiple","noKeyboard","noClick","onDragEnter","uploadFile","onDragLeave","getRootProps","getInputProps","uploadError","UploadIcon","fullWidthIcon","indexOf","adapter","renderFileBrowser","showFileBrowser","DialogSelectFile","selected","_value","selectOnlyFolders","allowUpload","allowDownload","allowCreateFolder","allowView","showToolbar","limitPath","disableEdit","getEnums","enums","short","allowDeactivate","TextWithIcon","getHostByIp","ips","listenOnAllPorts","address","onlyIp4","family","onlyIp6","noInternal","internal","_this$state$ips","_this$state$ips2","alt","fileExists","exist","loadImage","_getUrl","update","port","hostname","res","blob","readAsDataURL","UploadImage","crop","removeIconFunc","onInstancesUpdate","_id","long","findIndex","getHistory","sort","b","getAdapterInstances","instances","_instance$common","adapters","_instance$common2","onlyEnabled","_instance$common3","enabled","subscribeObject","unsubscribeObject","_obj$native","_obj$native$hardware","interfaces","hardware","networkInterfaces","inter","ignoreInternal","_ip","ignoreLoopback","ip","_this$state$interface","_this$state$interface2","_this$state$interface3","modalDialog","overflowHidden","titleIcon","languageButton","languageButtonActive","toggleTranslation","progress","applyDisabled","applyButton","titleButtonApply","titleButtonClose","onApply","textInput","useState","useEffect","disableEscapeKeyDown","LanguageIcon","autoComplete","multiline","CheckIcon","CloseIcon","jsonError","jsonNoError","AceEditor","showPrintMargin","editValueMode","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","editorProps","$blockScrolling","wrapper","validateJson","allowEmpty","showSelectId","CustomModal","Editor","LANGUAGES","languages","system","changeGuiLanguage","setLanguage","changeLanguage","getSystemConfig","language","scrollRef","scrolledDown","offsetHeight","scrollTop","scrollHeight","licenseUrl","showLicenseDialog","loading","addEventListener","reason","overflowY","texts","checkBox","licenseChecked","Check","agreeText","Close","updateTimeout","multiEdit","oldValue","min","parseFloat","checkValue","Number","isNaN","isFinite","autoCompleteOptions","arr","getOptionSelected","inputProps","step","DialogSelectID","dialogName","filterFunc","types","customFilter","filters","halfWidth1","halfWidth2","PASSWORD_PLACEHOLDER","_repeat","_visible","_notEqual","onChangePassword","password","repeatPassword","repeat","visible","InputAdornment","tabIndex","edge","VisibilityOff","Visibility","form","passwordRepeat","copyToClipboard","IconCopy","warning","ownId","ownHostname","ports","_instance$native","_instance$native2","bind","secure","leEnabled","leUpdate","leCheckPort","lePort","v6bind","num","maybePromise","noMargin","initialValue","groupItem","group","ListSubheader","menuPaper","maxHeight","_getValue","_this$state$list","manual","gap","v","showAllValues","ip2int","ipInt","octet","openUrl","adminInstance","getCurrentInstance","_instanceObj$common","hostObj","localIp","hostIp","netmask","findNetworkAddressOfHost","warn","_message","onLoaded","DialogError","DialogMessage","onCommandRunning","_origin","pathname","_originIp","args","arg","onBackEndCommand","reloadBrowser","reload","useNative","entries","saveConfig","controlStyle","showProcess","_obj$common","_obj$common2","ack","okText","slider","unit","marks","gutterBottom","Slider","getAriaValueText","valueLabelDisplay","getIconByName","Edit","Delete","Refresh","Add","Search","LinkOff","NotListedLocation","PlayArrow","Stop","Pause","FastForward","FastRewind","Lightbulb","Fluorescent","WbIncandescent","Power","Settings","Group","Person","QrCode","Wifi","WifiOff","controlTimeout","delayedUpdate","timer","onStateChanged","controlType","stateValue","getObjectID","foreign","oid","detectType","subscribeState","unsubscribeState","controlled","read","write","falseImage","falseText","falseTextStyle","controlDelay","divStyle","blinkStyle","labelIcon","labelControl","narrow","addColon","blinkOnUpdate","animation","iconFalse","textFalse","iconTrue","textTrue","trueText","trueImage","Switch","trueTextStyle","flexGrow","valueLabelFormat","dangerouslySetInnerHTML","__html","borderStyle","secondary","header","contrastText","padding","marginBlockEnd","marginBlockStart","valueBlinkOnce","force","valueBlink","valueImage","valueAndUnit","valueTxt","booleanAsCheckbox","copyButton","multiLine","styleValue","valStyle","html","blink","style1","style2","styleUnit","ContentCopy","boxStyle","highlight","styleLabel","onLink","instanceId","_target","_url","hash","close","MAX_SIZE","paper","headerText","visuallyHidden","clip","paddingLeft","paddingRight","silver","filteredOut","buttonCell","outline","buttonRemoveWrapper","zIndex","arrayToObject","array","nameOfFirstAttr","nameOfSecondAttr","object","row","ConfigTable","_this","filterRefs","secret","handleRequestSort","property","orderCheck","order","orderBy","newOrder","stableSort","applyFilter","comparator","getComparator","stabilizedThis","order_","updateVisible","_updateVisible","encryptedAttributes","encrypt","objKeyName","objValue","objValueName","_schema$items","clear","visibleValue","valueInputRef","getFilterValue","setFilterValue","createRef","objectToArray","decrypt","filterOn","validateUniqueProps","itemTable","attrItem","schemaForAttribute","uniqueColumns","uniqueCol","allVals","entry","errorMessage","descendingComparator","_el$current","_el$current$children$","_el$current$children$2","filterValue","enhancedTableHead","buttonsWidth","doAnyFilterSet","headCell","align","sortDirection","showFirstAddOnTop","allowAddByFilter","TableSortLabel","active","direction","IconFilterOff","IconFilterOn","import","showImportDialog","ImportIcon","export","onExport","ExportIcon","lines","line","_row$it$attr","encodeURIComponent","getFullYear","getMonth","padStart","getDate","click","removeChild","onImport","it2","values","_this$state$value","p","showTypeOfImportDialog","isAnyFilterSet","IconClose","tdStyle","compact","hover","showSecondAddAt","colSpan","ErrorIcon","alignSelf","helper","time","actionButton","actionButtonStyle","minRows","TextareaAutosize","resize","maxRows","iconStyle","getLocalContext","_this$props$customObj","topic","namespace","convertID2Topic","getUsers","users","_users","user","_user$common","_user$common2","getObjectNameFromObj","_user$common3","_user$common4","_this$state$users$val4","_this$state$users$val5","_this$state$users$val","_this$state$users$val2","_this$state$users$val3","getInvertedColor","QRCode","QRCodeComponent","fgColor","bgColor","level","components","accordion","ConfigAccordion","ConfigAlive","autocomplete","ConfigAutocomplete","autocompleteSendTo","ConfigAutocompleteSendTo","certCollection","ConfigCertCollection","certificate","ConfigCertificateSelect","ConfigCertificates","checkbox","ConfigCheckbox","ConfigChip","ConfigColor","coordinates","ConfigCoordinates","ConfigCRON","datePicker","DatePicker","spacing","format","deviceManager","ConfigDeviceManager","ConfigStaticDivider","ConfigFile","fileSelector","ConfigFunc","ConfigStaticHeader","ConfigImageUpload","imageSendTo","ConfigImageSendTo","ConfigInstanceSelect","interface","ConfigInterface","ConfigIP","jsonEditor","ConfigJsonEditor","ConfigLanguage","ConfigLicense","number","ConfigNumber","objectId","ConfigObjectId","ConfigPassword","ConfigPattern","ConfigPort","qrCode","ConfigQrCode","room","ConfigRoom","select","ConfigSelect","selectSendTo","ConfigSelectSendTo","sendto","ConfigSendTo","ConfigSetState","ConfigSlider","ConfigState","staticImage","ConfigStaticImage","staticInfo","ConfigStaticInfo","staticLink","ConfigStaticText","staticText","ConfigText","textSendTo","ConfigTextSendTo","timePicker","shortFormat","returnFormat","TimePicker","ampm","timeSteps","timesteps","hours","minutes","seconds","strValue","toTimeString","views","ConfigTopic","ConfigUUID","ConfigUser","paperWithIcons","paperWithoutIcons","heading","collapsable","_localStorage","localStorage","getItem","renderItems","noMultiEdit","ItemComponent","customs","panel","schemaStyle","columnSpacing","rowSpacing","setItem","isParentTab","withIcons","innerStyle","tabs","panelWithIcons","panelWithoutIcons","tab","onHashTabsChanged","tabS","tabN","removeEventListener","Tabs","scrollButtons","tabsStyle","Tab","wrapped","iconPosition","JsonConfigComponent","forceUpdateHandlers","errorTimeout","errorCached","onAlive","attrOrData","onValueChange","forceAttrUpdate","updateData","buildDependencies","readData","loadI18n","fileName","exists","jsonFile","jsonStr","updateContext","flatten","_list","attrs","_attrs$attr$confirm","_attrs$attr$onChange","_attrs$attr$hidden","_attrs$attr$label","_attrs$attr$help","_attrs$attr$confirm2","_attrs$attr$onChange2","_attrs$attr$hidden2","_attrs$attr$label2","_attrs$attr$help2","depObj","embedded","_themeName","ConfigTabs","scroll","exportImportButtons","decryptLegacy","textParts","_key","CryptoJS","enc","Hex","iv","cipherParams","lib","CipherParams","ciphertext","decryptedBinary","AES","Utf8","_iv","encryptLegacy","WordArray","random","encrypted","loadScript","_document$getElementB","getElementById","JsonConfig","Router","fileSubscribed","fileLangSubscribed","handleFileSelect","evt","r","contents","readAsText","onFileChange","_this$state$schema","getConfigFile","MD5","Theme","saveConfigDialog","getInstanceObject","langFileName","subscribeFiles","unsubscribeFiles","getExportImportButtons","PublishIcon","generateFile","encryptedNative","_obj$encryptedNative","doNavigate","scanForInclude","filePaths","_getConfigFile","k","_filePaths","binary","byteLength","JSON5","e1","renderSaveConfigDialog","onSave","findAttr","_schema","postProcessing","dataAttr","tItem","dataVal","doSave","doNotSaveAttributes","doNotSave","encryptedObj","setObject","nativeWithNonSaved","componentDidUpdate","_prevProps","prevState","configStored","SaveCloseButtons","isIFrame","dense","newReact","noTextOnButtons"],"sourceRoot":""}