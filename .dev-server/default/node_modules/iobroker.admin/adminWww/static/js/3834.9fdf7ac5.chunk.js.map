{"version":3,"file":"static/js/3834.9fdf7ac5.chunk.js","mappings":"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","sources":["components/CustomModal.tsx","components/State.tsx","dialogs/AdapterUpdateDialog.tsx"],"sourcesContent":["import React, { useEffect, useState, type JSX } from 'react';\n\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    IconButton,\n    TextField,\n    Button,\n    InputAdornment,\n    type Breakpoint,\n} from '@mui/material';\n\nimport { Check as CheckIcon, Close as CloseIcon, Language as LanguageIcon } from '@mui/icons-material';\n\nimport { I18n, type IobTheme, Utils } from '@iobroker/adapter-react-v5';\n\nconst styles: Record<string, any> = {\n    modalDialog: {\n        minWidth: 400,\n        maxWidth: 800,\n    },\n    overflowHidden: {\n        display: 'flex',\n        overflow: 'hidden',\n    },\n    titleIcon: {\n        marginRight: 5,\n    },\n    content: {\n        fontSize: 16,\n    },\n    languageButton: {\n        position: 'absolute',\n        right: 8,\n        top: 8,\n    },\n    languageButtonActive: (theme: IobTheme) => ({\n        color: theme.palette.primary.main,\n    }),\n};\n\ninterface CustomModalProps {\n    icon?: React.FC<{ style?: React.CSSProperties }>;\n    onClose: () => void;\n    children?: JSX.Element | JSX.Element[];\n    title?: string;\n    titleButtonClose?: string;\n    titleButtonApply?: string;\n    onApply?: (value: string | number) => void;\n    fullWidth?: boolean;\n    maxWidth?: Breakpoint;\n    applyButton?: boolean;\n    disableApplyIfNotChanged?: boolean;\n    overflowHidden?: boolean;\n    help?: string;\n    noTranslation?: boolean;\n    toggleTranslation?: () => void;\n    textInput?: boolean;\n    defaultValue?: string | number;\n    progress?: boolean;\n    disableApply?: boolean;\n    theme: IobTheme;\n}\n\nconst CustomModal = ({\n    toggleTranslation,\n    noTranslation,\n    title,\n    fullWidth,\n    help,\n    maxWidth,\n    progress,\n    icon,\n    disableApplyIfNotChanged,\n    applyButton,\n    onClose,\n    children,\n    titleButtonApply,\n    titleButtonClose,\n    onApply,\n    textInput,\n    defaultValue,\n    overflowHidden,\n    disableApply,\n    theme,\n}: CustomModalProps): JSX.Element => {\n    const [value, setValue] = useState(defaultValue);\n    useEffect(() => {\n        setValue(defaultValue);\n    }, [defaultValue]);\n\n    let Icon: React.FC<{ style?: React.CSSProperties }> | null = null;\n\n    if (icon) {\n        Icon = icon;\n    }\n\n    const languageButtonActive = Utils.getStyle(theme, styles.languageButtonActive);\n\n    return (\n        <Dialog\n            open={!0}\n            maxWidth={maxWidth || 'md'}\n            fullWidth={!!fullWidth}\n            disableEscapeKeyDown={false}\n            onClose={onClose}\n            sx={{ '& .MuiPaper-root': styles.modalDialog /* paper: classes.background */ }}\n        >\n            {title && (\n                <DialogTitle>\n                    {icon ? <Icon style={styles.titleIcon} /> : null}\n                    {title}\n                    {I18n.getLanguage() !== 'en' && toggleTranslation ? (\n                        <IconButton\n                            size=\"large\"\n                            style={{ ...styles.languageButton, ...(noTranslation ? languageButtonActive : undefined) }}\n                            onClick={() => toggleTranslation()}\n                            title={I18n.t('Disable/Enable translation')}\n                        >\n                            <LanguageIcon />\n                        </IconButton>\n                    ) : null}\n                </DialogTitle>\n            )}\n            <DialogContent\n                style={{ ...(overflowHidden ? styles.overflowHidden : undefined), ...styles.content, paddingTop: 8 }}\n            >\n                {textInput && (\n                    <TextField\n                        // className={className}\n                        autoComplete=\"off\"\n                        fullWidth\n                        autoFocus\n                        variant=\"standard\"\n                        size=\"medium\"\n                        // rows={10}\n                        multiline\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        slotProps={{\n                            input: {\n                                endAdornment: value ? (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            size=\"small\"\n                                            onClick={() => setValue('')}\n                                        >\n                                            <CloseIcon />\n                                        </IconButton>\n                                    </InputAdornment>\n                                ) : null,\n                            },\n                        }}\n                        // customValue\n                    />\n                )}\n                {children}\n                {help ? <div>{help}</div> : null}\n            </DialogContent>\n            <DialogActions>\n                {(applyButton === undefined || applyButton) && (\n                    <Button\n                        startIcon={<CheckIcon />}\n                        disabled={disableApply || progress || (disableApplyIfNotChanged && defaultValue === value)}\n                        onClick={() => onApply && onApply(textInput ? value : '')}\n                        variant=\"contained\"\n                        color=\"primary\"\n                    >\n                        {I18n.t(titleButtonApply || 'Ok')}\n                    </Button>\n                )}\n                <Button\n                    color=\"grey\"\n                    onClick={onClose}\n                    disabled={progress}\n                    variant=\"contained\"\n                    startIcon={<CloseIcon />}\n                >\n                    {I18n.t(titleButtonClose || 'Cancel')}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default CustomModal;\n","import React, { type JSX } from 'react';\n\nimport { Grid2, Typography } from '@mui/material';\n\nimport { CheckCircle as CheckCircleIcon, Cancel as CancelIcon } from '@mui/icons-material';\n\nimport { green, red } from '@mui/material/colors';\n\nconst styles: Record<string, any> = {\n    checkIcon: {\n        color: green[700],\n    },\n    cancelIcon: {\n        color: red[700],\n    },\n    wrapperContent: {\n        display: 'flex',\n        flexFlow: 'nowrap',\n        alignItems: 'inherit',\n    },\n};\n\ninterface StateProps {\n    state: boolean;\n    children: JSX.Element | JSX.Element[] | string | string[];\n}\n\nfunction State(props: StateProps): JSX.Element {\n    return (\n        <Grid2\n            container\n            style={styles.wrapperContent}\n            alignItems=\"center\"\n            direction=\"row\"\n            spacing={1}\n        >\n            <Grid2>\n                {props.state ? <CheckCircleIcon style={styles.checkIcon} /> : <CancelIcon style={styles.cancelIcon} />}\n            </Grid2>\n            <Grid2>\n                <Typography>{props.children}</Typography>\n            </Grid2>\n        </Grid2>\n    );\n}\n\nexport default State;\n","import React, { Component, type JSX } from 'react';\nimport semver from 'semver';\nimport moment from 'moment';\n\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Grid2,\n    IconButton,\n    Typography,\n} from '@mui/material';\n\nimport {\n    Close as CloseIcon,\n    Check as CheckIcon,\n    Book as BookIcon,\n    Warning as IconWarning,\n    Error as IconError,\n    Info as IconInfo,\n    Public as IconWeb,\n    Language as LanguageIcon,\n} from '@mui/icons-material';\n\nimport { I18n, Utils, type IobTheme, type Translate } from '@iobroker/adapter-react-v5';\n\nimport { MOBILE_WIDTH } from '@/helpers/MobileDialog';\nimport type { RepoAdapterObject } from '@/components/Adapters/Utils';\n\nimport State from '../components/State';\n\nimport 'moment/locale/de';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/it';\nimport 'moment/locale/nl';\nimport 'moment/locale/pl';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/uk';\nimport 'moment/locale/zh-cn';\n\nconst styles: Record<string, any> = {\n    closeButton: (theme: IobTheme) => ({\n        position: 'absolute',\n        right: 8,\n        top: 8,\n        color: theme.palette.grey[500],\n    }),\n    languageButton: {\n        position: 'absolute',\n        right: 52 + 8,\n        top: 8,\n    },\n    languageButtonActive: (theme: IobTheme) => ({\n        color: theme.palette.primary.main,\n    }),\n    typography: {\n        paddingRight: 30,\n    },\n    version: (theme: IobTheme) => ({\n        background: '#4dabf5',\n        borderRadius: '3px',\n        pl: '10px',\n        fontWeight: 'bold',\n        color: theme.palette.mode === 'dark' ? 'black' : 'white',\n    }),\n    wrapperButton: {\n        '@media screen and (max-width: 465px)': {\n            '& *': {\n                fontSize: 10,\n            },\n        },\n        '@media screen and (max-width: 380px)': {\n            '& *': {\n                fontSize: 9,\n            },\n        },\n    },\n    messageText: {},\n    messageIcon: {\n        width: 32,\n        height: 32,\n        marginRight: 8,\n    },\n    messageColor_warn: {\n        color: '#cb7642',\n    },\n    messageColor_error: {\n        color: '#f5614d',\n    },\n    messageColor_info: {\n        color: '#5abd29',\n    },\n    messageTitle_warn: (theme: IobTheme) => ({\n        background: '#cb7642',\n        borderRadius: '3px',\n        pl: '10px',\n        fontWeight: 'bold',\n        color: theme.palette.mode === 'dark' ? 'black' : 'white',\n    }),\n    messageTitle_error: (theme: IobTheme) => ({\n        background: '#f5614d',\n        borderRadius: '3px',\n        pl: '10px',\n        fontWeight: 'bold',\n        color: theme.palette.mode === 'dark' ? 'black' : 'white',\n    }),\n    messageTitle_info: (theme: IobTheme) => ({\n        background: '#5abd29',\n        borderRadius: '3px',\n        pl: '10px',\n        fontWeight: 'bold',\n        color: theme.palette.mode === 'dark' ? 'black' : 'white',\n    }),\n    messageDialogText: {\n        fontSize: 18,\n    },\n    messageDialogTitle: {},\n    versionTime: {\n        fontSize: 'smaller',\n        opacity: 0.5,\n        marginLeft: 4,\n    },\n    dialogPaper: {\n        maxWidth: 880,\n    },\n};\n\nexport interface Message {\n    title: ioBroker.Translated;\n    text: ioBroker.Translated;\n    linkText?: ioBroker.Translated;\n    link?: string;\n    buttons?: ('agree' | 'cancel' | 'ok')[];\n    level?: 'warn' | 'error' | 'info';\n}\n\nexport interface News {\n    version: string;\n    news: string;\n    downloaded?: boolean;\n}\n\nexport interface CompactInstanceInfo {\n    adminTab: ioBroker.AdapterCommon['adminTab'];\n    name: ioBroker.InstanceCommon['name'];\n    icon: ioBroker.InstanceCommon['icon'];\n    enabled: ioBroker.InstanceCommon['enabled'];\n    version: ioBroker.InstanceCommon['version'];\n}\n\n/**\n * Check if the message should be shown\n */\nexport function checkCondition(\n    objMessages: ioBroker.MessageRule[] | false | null | undefined,\n    oldVersion: string | null,\n    newVersion: string,\n    instances?: Record<string, CompactInstanceInfo>,\n): Message[] | null {\n    let messages: Message[] | null = null;\n\n    if (objMessages) {\n        // const messages = {\n        //     \"condition\": {\n        //         \"operand\": \"and\",\n        //         \"rules\": [\n        //             \"oldVersion<=1.0.44\",\n        //             \"newVersion>=1.0.45\"\n        //         ]\n        //     },\n        //     \"title\": {\n        //         \"en\": \"Important notice\",\n        //     },\n        //     \"text\": {\n        //         \"en\": \"Main text\",\n        //     },\n        //     \"link\": \"https://iobroker.net/www/pricing\",\n        //     \"buttons\": [\"agree\", \"cancel\", \"ok\"],\n        //     \"linkText\" {\n        //          \"en\": \"More info\",\n        //     },\n        //     \"level\": \"warn\"\n        // };\n\n        objMessages.forEach(message => {\n            let show = !message.condition || !message.condition.rules;\n            if (message.condition && message.condition.rules) {\n                const results = (\n                    Array.isArray(message.condition.rules) ? message.condition.rules : [message.condition.rules]\n                ).map(rule => {\n                    // Possible rules:\n                    // - \"oldVersion<=1.0.44\"\n                    // - \"newVersion>=1.0.45\"\n                    // - \"installed\" - any version, same as 'oldVersion>=0.0.0'\n                    // - \"not-installed\" - if adapter is not installed, same as '!'\n                    // - \"vis-2>=1.0.0\"\n                    // - \"vis\"\n                    // - \"!vis-2\"\n                    let version;\n                    let op;\n                    let ver;\n\n                    if (rule.includes('oldVersion')) {\n                        version = oldVersion;\n                        rule = rule.substring('newVersion'.length);\n                    } else if (rule.includes('newVersion')) {\n                        version = newVersion;\n                        rule = rule.substring('newVersion'.length);\n                    } else {\n                        if (rule === 'installed') {\n                            return !!oldVersion;\n                        }\n                        if (rule === '!' || rule === 'not-installed') {\n                            return !oldVersion;\n                        }\n\n                        if (instances) {\n                            // it could be the name of required adapter, like vis-2\n                            const split = rule.match(/([a-z][-a-z_0-9]+)([!=<>]+)([.\\d]+)/);\n                            if (split) {\n                                // Check that adapter is installed in a desired version\n                                const instId = Object.keys(instances).find(id => instances[id]?.name === split[1]);\n                                if (instId) {\n                                    version = instances[instId].version;\n                                    op = split[2];\n                                    ver = split[3];\n                                    try {\n                                        if (op === '==') {\n                                            return semver.eq(version, ver);\n                                        }\n                                        if (op === '>') {\n                                            return semver.gt(version, ver);\n                                        }\n                                        if (op === '<') {\n                                            return semver.lt(version, ver);\n                                        }\n                                        if (op === '>=') {\n                                            return semver.gte(version, ver);\n                                        }\n                                        if (op === '<=') {\n                                            return semver.lte(version, ver);\n                                        }\n                                        if (op === '!=') {\n                                            return semver.neq(version, ver);\n                                        }\n                                        console.warn(`Unknown rule ${version}${rule}`);\n                                        return false;\n                                    } catch {\n                                        console.warn(`Cannot compare ${version}${rule}`);\n                                        return false;\n                                    }\n                                }\n                            } else if (!rule.match(/^[!=<>]+/)) {\n                                // Check if adapter is installed\n                                if (Object.keys(instances).find(id => instances[id]?.name === rule)) {\n                                    return true;\n                                }\n                            } else if (rule.startsWith('!')) {\n                                // Check if adapter is not installed\n                                const adapter = rule.substring(1);\n                                if (!Object.keys(instances).find(id => instances[id]?.name === adapter)) {\n                                    return true;\n                                }\n                            }\n                            // unknown rule\n                            return false;\n                        }\n                    }\n\n                    // If the first character is '>' or '<'\n                    if (rule[1] >= '0' && rule[1] <= '9') {\n                        op = rule[0];\n                        ver = rule.substring(1);\n                    } else {\n                        // The first 2 characters are '>=' or '<=' or '!=' or '=='\n                        op = rule.substring(0, 2);\n                        ver = rule.substring(2);\n                    }\n                    try {\n                        if (op === '==') {\n                            return semver.eq(version, ver);\n                        }\n                        if (op === '>') {\n                            return semver.gt(version, ver);\n                        }\n                        if (op === '<') {\n                            return semver.lt(version, ver);\n                        }\n                        if (op === '>=') {\n                            return semver.gte(version, ver);\n                        }\n                        if (op === '<=') {\n                            return semver.lte(version, ver);\n                        }\n                        if (op === '!=') {\n                            return semver.neq(version, ver);\n                        }\n                        console.warn(`Unknown rule ${version}${rule}`);\n                    } catch {\n                        console.warn(`Cannot compare ${version}${rule}`);\n                    }\n                    return false;\n                });\n\n                if (message.condition.operand === 'or') {\n                    show = results.find(res => res);\n                } else {\n                    show = results.findIndex(res => !res) === -1;\n                }\n            }\n\n            if (show) {\n                messages = messages || [];\n                messages.push({\n                    title: message.title,\n                    text: message.text,\n                    link: message.link,\n                    linkText: message.linkText,\n                    buttons: message.buttons,\n                    level: message.level,\n                });\n            }\n        });\n    }\n\n    return messages;\n}\n\ninterface AdapterUpdateDialogProps {\n    adapter: string;\n    adapterObject: RepoAdapterObject;\n    dependencies?: Record<string, any>[];\n    news: News[];\n    noTranslation: boolean;\n    toggleTranslation: () => void;\n    onUpdate: (version: string) => void;\n    onInstruction?: () => void;\n    onIgnore?: (version: string) => void;\n    onClose: () => void;\n    rightDependencies: boolean;\n    installedVersion: string;\n    t: Translate;\n    textUpdate?: string;\n    textInstruction?: string;\n    instances?: Record<string, CompactInstanceInfo>;\n    theme: IobTheme;\n}\n\ninterface AdapterUpdateDialogState {\n    showMessageDialog: boolean;\n}\n\nclass AdapterUpdateDialog extends Component<AdapterUpdateDialogProps, AdapterUpdateDialogState> {\n    private readonly t: Translate;\n\n    private readonly mobile: boolean;\n\n    private readonly messages: Message[] | null;\n\n    private readonly lang: string;\n\n    constructor(props: AdapterUpdateDialogProps) {\n        super(props);\n\n        this.t = props.t;\n        this.mobile = window.innerWidth < MOBILE_WIDTH;\n\n        this.state = {\n            showMessageDialog: false,\n        };\n\n        const messages = false; /* ioBroker.MessageRule[] = [\n            {\n                condition: {\n                    operand: 'and',\n                    rules: [\n                        'oldVersion<=1.5.0',\n                        'newVersion>=2.0.0',\n                    ],\n                },\n                title: {\n                    en: 'Important notice',\n                    de: 'Wichtiger Hinweis',\n                    ru: 'Важное замечание',\n                    pt: 'Notícia importante',\n                    nl: 'Belangrijke mededeling',\n                    fr: 'Avis important',\n                    it: 'Avviso IMPORTANTE',\n                    es: 'Noticia importante',\n                    pl: 'Ważna uwaga',\n                    uk: 'aaa',\n                    'zh-cn': '重要通知',\n                },\n                text: {\n                    en: 'From the ioBroker.knx@2.0.0 version only 500 data points can be used fro free. If you have more than 500 KNX data points, you must order the paid license',\n                    de: 'Ab der Version ioBroker.knx@2.0.0 können nur noch 500 Datenpunkte frei verwendet werden. Wenn Sie mehr als 500 KNX-Datenpunkte haben, müssen Sie die kostenpflichtige Lizenz bestellen',\n                    ru: 'Из версии ioBroker.knx@2.0.0 только 500 точек данных можно использовать бесплатно. Если у вас более 500 точек данных KNX, необходимо заказать платную лицензию.',\n                    pt: 'Na versão ioBroker.knx@2.0.0, apenas 500 pontos de dados podem ser usados gratuitamente. Se você tiver mais de 500 pontos de dados KNX, você deve solicitar a licença paga',\n                    nl: 'Van de ioBroker.knx@2.0.0 versie kunnen slechts 500 datapunten gratis worden gebruikt. Als u meer dan 500 KNX-datapunten heeft, moet u de betaalde licentie bestellen',\n                    fr: 'À partir de la version ioBroker.knx@2.0.0, seuls 500 points de données peuvent être utilisés gratuitement. Si vous avez plus de 500 points de données KNX, vous devez commander la licence payante',\n                    it: 'Dalla versione ioBroker.knx@2.0.0 è possibile utilizzare gratuitamente solo 500 punti dati. Se hai più di 500 punti dati KNX, devi ordinare la licenza a pagamento',\n                    es: 'Desde la versión ioBroker.knx@2.0.0, solo se pueden usar 500 puntos de datos de forma gratuita. Si tiene más de 500 puntos de datos KNX, debe solicitar la licencia paga',\n                    pl: 'Od wersji ioBroker.knx@2.0.0 można bezpłatnie korzystać tylko z 500 punktów danych. Jeśli masz więcej niż 500 punktów danych KNX, musisz zamówić płatną licencję',\n                    uk: 'aaa',\n                    'zh-cn': '从 ioBroker.knx@2.0.0 版本开始，只能免费使用 500 个数据点。如果您有超过 500 个 KNX 数据点，则必须订购付费许可证',\n                },\n                link: 'https://iobroker.net/www/pricing',\n                linkText: {\n                    en: 'Link text',\n                    de: 'Link text',\n                    ru: 'Из версии ioBroker.knx@2.0.0 только 500 точек данных можно использовать бесплатно. Если у вас более 500 точек данных KNX, необходимо заказать платную лицензию.',\n                    pt: 'Na versão ioBroker.knx@2.0.0, apenas 500 pontos de dados podem ser usados gratuitamente. Se você tiver mais de 500 pontos de dados KNX, você deve solicitar a licença paga',\n                    nl: 'Van de ioBroker.knx@2.0.0 versie kunnen slechts 500 datapunten gratis worden gebruikt. Als u meer dan 500 KNX-datapunten heeft, moet u de betaalde licentie bestellen',\n                    fr: 'À partir de la version ioBroker.knx@2.0.0, seuls 500 points de données peuvent être utilisés gratuitement. Si vous avez plus de 500 points de données KNX, vous devez commander la licence payante',\n                    it: 'Dalla versione ioBroker.knx@2.0.0 è possibile utilizzare gratuitamente solo 500 punti dati. Se hai più di 500 punti dati KNX, devi ordinare la licenza a pagamento',\n                    es: 'Desde la versión ioBroker.knx@2.0.0, solo se pueden usar 500 puntos de datos de forma gratuita. Si tiene más de 500 puntos de datos KNX, debe solicitar la licencia paga',\n                    pl: 'Od wersji ioBroker.knx@2.0.0 można bezpłatnie korzystać tylko z 500 punktów danych. Jeśli masz więcej niż 500 punktów danych KNX, musisz zamówić płatną licencję',\n                    uk: 'aaa',\n                    'zh-cn': '从 ioBroker.knx@2.0.0 版本开始，只能免费使用 500 个数据点。如果您有超过 500 个 KNX 数据点，则必须订购付费许可证',\n                },\n                level: 'warn',\n                buttons: ['agree', 'cancel'],\n            },\n        ] */\n\n        this.messages = checkCondition(\n            this.props.adapterObject?.messages || messages,\n            this.props.installedVersion,\n            this.props.adapterObject?.version,\n            this.props.instances,\n        );\n        this.lang = I18n.getLanguage();\n        moment.locale(this.lang);\n    }\n\n    getDependencies(): JSX.Element[] {\n        const result: JSX.Element[] = [];\n\n        this.props.dependencies?.forEach(dependency => {\n            result.push(\n                <State\n                    key={dependency.name}\n                    state={dependency.rightVersion}\n                >\n                    {`${dependency.name}${dependency.version ? ` (${dependency.version})` : ''}: ${dependency.installed ? dependency.installedVersion : '-'}`}\n                </State>,\n            );\n        });\n\n        return result;\n    }\n\n    getNews(): JSX.Element[] {\n        const result: JSX.Element[] = [];\n\n        this.props.news?.forEach(entry => {\n            const news: string[] = (entry.news ? entry.news.split('\\n') : [])\n                .map((line: string) =>\n                    line\n                        .trim()\n                        .replace(/^\\*\\s*/, '')\n                        .replace(/<!--[^>]*->/, '')\n                        .replace(/<! -[^>]*->/, '')\n                        .replace(/<!--|--!?>/g, '')\n                        .trim(),\n                )\n                .filter((line: string) => !!line);\n\n            if (\n                this.props.adapterObject?.version &&\n                entry.version &&\n                semver.gt(entry.version, this.props.adapterObject?.version)\n            ) {\n                return;\n            }\n\n            result.push(\n                <Grid2 key={entry.version}>\n                    <Typography sx={styles.version}>\n                        {entry.version}\n                        {this.props.adapterObject?.version === entry.version ? (\n                            <span style={styles.versionTime}>\n                                ({moment(this.props.adapterObject.versionDate).fromNow()})\n                            </span>\n                        ) : (\n                            ''\n                        )}\n                    </Typography>\n                    {news.map((value, index) => (\n                        <Typography\n                            key={`${entry.version}-${index}`}\n                            component=\"div\"\n                            variant=\"body2\"\n                        >\n                            {`• ${value}`}\n                        </Typography>\n                    ))}\n                </Grid2>,\n            );\n        });\n\n        return result;\n    }\n\n    getText(text: string | { [lang: string]: string }, noTranslation?: boolean): string {\n        if (text && typeof text === 'object') {\n            if (noTranslation) {\n                return text.en;\n            }\n            return text[this.lang] || text.en;\n        }\n        return typeof text === 'object' ? '' : text;\n    }\n\n    renderOneMessage(message: Message, index: number): JSX.Element {\n        return (\n            <Grid2 key={index}>\n                <Typography sx={styles[`messageTitle_${message.level || 'warn'}`]}>\n                    {this.getText(message.title, this.props.noTranslation) || ''}\n                </Typography>\n                <Typography\n                    component=\"div\"\n                    variant=\"body2\"\n                    style={styles.messageText}\n                >\n                    {this.getText(message.text, this.props.noTranslation) || ''}\n                </Typography>\n                {message.link ? (\n                    <Button\n                        onClick={() => {\n                            const w = window.open(message.link, '_blank');\n                            w.focus();\n                        }}\n                        startIcon={<IconWeb />}\n                        variant=\"contained\"\n                        color=\"grey\"\n                    >\n                        {this.getText(message.linkText, this.props.noTranslation) || this.props.t('More info')}\n                    </Button>\n                ) : null}\n            </Grid2>\n        );\n    }\n\n    renderMessages(): JSX.Element | null {\n        if (this.messages) {\n            return (\n                <Grid2\n                    container\n                    spacing={2}\n                    direction=\"column\"\n                    wrap=\"nowrap\"\n                    sx={{ marginBottom: 1 }}\n                >\n                    {this.messages.map((message, i) => this.renderOneMessage(message, i))}\n                </Grid2>\n            );\n        }\n        return null;\n    }\n\n    renderMessageDialog(): JSX.Element | null {\n        if (!this.state.showMessageDialog) {\n            return null;\n        }\n        const message = this.messages.find(m => m.buttons);\n        const version = this.props.adapterObject?.version;\n\n        return (\n            <Dialog\n                onClose={() => this.setState({ showMessageDialog: false })}\n                open={!0}\n            >\n                <DialogTitle style={styles.messageDialogTitle}>\n                    {this.getText(message.title, this.props.noTranslation) || this.props.t('Please confirm')}\n                </DialogTitle>\n                <DialogContent style={styles.messageDialogText}>\n                    {message.level === 'warn' ? (\n                        <IconWarning style={{ ...styles.messageIcon, ...styles.messageColor_warn }} />\n                    ) : null}\n                    {message.level === 'error' ? (\n                        <IconError style={{ ...styles.messageIcon, ...styles.messageColor_error }} />\n                    ) : null}\n                    {message.level === 'info' ? (\n                        <IconInfo style={{ ...styles.messageIcon, ...styles.messageColor_info }} />\n                    ) : null}\n                    {this.getText(message.text, this.props.noTranslation)}\n                </DialogContent>\n                <DialogActions>\n                    {message.link ? (\n                        <Button\n                            onClick={() => {\n                                const w = window.open(message.link, '_blank');\n                                w.focus();\n                            }}\n                            startIcon={<IconWeb />}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                        >\n                            {this.getText(message.linkText, this.props.noTranslation) || this.props.t('More info')}\n                        </Button>\n                    ) : null}\n                    {message.link ? <div style={{ flexGrow: 1 }} /> : null}\n                    {message.buttons.map((button, i) => {\n                        if (button === 'ok') {\n                            return (\n                                <Button\n                                    key={i}\n                                    variant=\"contained\"\n                                    onClick={() =>\n                                        this.setState({ showMessageDialog: false }, () => this.props.onUpdate(version))\n                                    }\n                                    color=\"primary\"\n                                    startIcon={<CheckIcon />}\n                                >\n                                    {this.t('Update')}\n                                </Button>\n                            );\n                        }\n                        if (button === 'agree') {\n                            return (\n                                <Button\n                                    key={i}\n                                    sx={styles[`messageTitle_${message.level || 'warn'}`]}\n                                    variant=\"contained\"\n                                    onClick={() =>\n                                        this.setState({ showMessageDialog: false }, () => this.props.onUpdate(version))\n                                    }\n                                    color=\"primary\"\n                                    startIcon={<CheckIcon />}\n                                >\n                                    {this.t('Agree')}\n                                </Button>\n                            );\n                        }\n                        if (button === 'cancel') {\n                            return (\n                                <Button\n                                    key={i}\n                                    variant=\"contained\"\n                                    onClick={() => this.setState({ showMessageDialog: false })}\n                                    startIcon={<CloseIcon />}\n                                    color=\"grey\"\n                                >\n                                    {this.t('Cancel')}\n                                </Button>\n                            );\n                        }\n                        return null;\n                    })}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n\n    render(): JSX.Element {\n        const version = this.props.adapterObject?.version;\n\n        const allDownloaded = this.props.news?.every(entry => entry.downloaded);\n        const news = this.getNews();\n\n        return (\n            <Dialog\n                onClose={this.props.onClose}\n                open={!0}\n                sx={{ '& .MuiDialog-paper': styles.dialogPaper }}\n            >\n                {this.renderMessageDialog()}\n                <DialogTitle>\n                    <Typography\n                        component=\"h2\"\n                        variant=\"h6\"\n                        sx={{ '&.MuiTypography-root': styles.typography }}\n                    >\n                        <div style={{ width: 'calc(100% - 60px)' }}>\n                            {this.t('Update \"%s\" to v%s', this.props.adapter, version)}\n                        </div>\n                        <IconButton\n                            size=\"large\"\n                            sx={styles.closeButton}\n                            onClick={this.props.onClose}\n                        >\n                            <CloseIcon />\n                        </IconButton>\n                        {this.lang !== 'en' && this.props.toggleTranslation && !allDownloaded ? (\n                            <IconButton\n                                size=\"large\"\n                                style={Utils.getStyle(\n                                    this.props.theme,\n                                    styles.languageButton,\n                                    this.props.noTranslation && styles.languageButtonActive,\n                                )}\n                                onClick={this.props.toggleTranslation}\n                                title={I18n.t('Disable/Enable translation')}\n                            >\n                                <LanguageIcon />\n                            </IconButton>\n                        ) : null}\n                    </Typography>\n                </DialogTitle>\n                <DialogContent dividers>\n                    {this.renderMessages()}\n                    <Grid2\n                        container\n                        direction=\"column\"\n                        spacing={2}\n                        wrap=\"nowrap\"\n                    >\n                        {this.props.dependencies &&\n                            this.props.dependencies.length > 0 &&\n                            this.props.dependencies.find(dependency => !dependency.rightVersion) && (\n                                <Grid2>\n                                    <Typography\n                                        variant=\"h6\"\n                                        gutterBottom\n                                    >\n                                        {this.t('Dependencies')}\n                                    </Typography>\n                                    {this.getDependencies()}\n                                </Grid2>\n                            )}\n                        {news.length ? (\n                            <Grid2>\n                                <Typography\n                                    variant=\"h6\"\n                                    gutterBottom\n                                >\n                                    {this.t('Change log')}\n                                </Typography>\n                                <Grid2\n                                    container\n                                    spacing={2}\n                                    direction=\"column\"\n                                    wrap=\"nowrap\"\n                                >\n                                    {news}\n                                </Grid2>\n                            </Grid2>\n                        ) : (\n                            this.t('No change log available')\n                        )}\n                    </Grid2>\n                </DialogContent>\n                <DialogActions sx={styles.wrapperButton}>\n                    {!!this.props.rightDependencies && this.props.onIgnore && version && (\n                        <Button\n                            id=\"adapter-update-dialog-ignore\"\n                            variant=\"outlined\"\n                            onClick={() => this.props.onIgnore(version)}\n                            color=\"primary\"\n                        >\n                            {this.t('Ignore version %s', version)}\n                        </Button>\n                    )}\n                    <Button\n                        variant=\"contained\"\n                        id=\"adapter-update-dialog-ok\"\n                        autoFocus\n                        disabled={!this.props.rightDependencies || !version || !this.props.adapterObject}\n                        onClick={() => {\n                            if (this.messages?.find(message => message.buttons)) {\n                                this.setState({ showMessageDialog: true });\n                            } else {\n                                this.props.onUpdate(version);\n                            }\n                        }}\n                        color=\"primary\"\n                        startIcon={<CheckIcon />}\n                    >\n                        {this.mobile ? null : this.props.textUpdate ? this.props.textUpdate : this.t('Update')}\n                    </Button>\n                    {this.props.textInstruction ? (\n                        <Button\n                            id=\"adapter-update-dialog-instructions\"\n                            variant=\"contained\"\n                            autoFocus\n                            disabled={!this.props.rightDependencies || !version || !this.props.adapterObject}\n                            onClick={() => {\n                                if (this.messages?.find(message => message.buttons)) {\n                                    this.setState({ showMessageDialog: true });\n                                } else {\n                                    this.props.onInstruction();\n                                }\n                            }}\n                            color=\"primary\"\n                            startIcon={<BookIcon />}\n                        >\n                            {this.mobile ? null : this.props.textInstruction}\n                        </Button>\n                    ) : null}\n                    <Button\n                        id=\"adapter-update-dialog-cancel\"\n                        variant=\"contained\"\n                        onClick={() => this.props.onClose()}\n                        color=\"grey\"\n                        startIcon={<CloseIcon />}\n                    >\n                        {this.mobile ? null : this.t('Close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default AdapterUpdateDialog;\n"],"names":["styles","modalDialog","minWidth","maxWidth","overflowHidden","display","overflow","titleIcon","marginRight","content","fontSize","languageButton","position","right","top","languageButtonActive","theme","color","palette","primary","main","_ref","toggleTranslation","noTranslation","title","fullWidth","help","progress","icon","disableApplyIfNotChanged","applyButton","onClose","children","titleButtonApply","titleButtonClose","onApply","textInput","defaultValue","disableApply","value","setValue","useState","useEffect","Icon","Utils","getStyle","_jsxs","Dialog","open","disableEscapeKeyDown","sx","DialogTitle","_jsx","style","I18n","getLanguage","IconButton","size","undefined","onClick","t","LanguageIcon","DialogContent","paddingTop","TextField","autoComplete","autoFocus","variant","multiline","onChange","e","target","slotProps","input","endAdornment","InputAdornment","CloseIcon","DialogActions","Button","startIcon","CheckIcon","disabled","checkIcon","green","cancelIcon","red","wrapperContent","flexFlow","alignItems","props","Grid2","container","direction","spacing","state","CheckCircleIcon","CancelIcon","Typography","closeButton","grey","typography","paddingRight","version","background","borderRadius","pl","fontWeight","mode","wrapperButton","messageText","messageIcon","width","height","messageColor_warn","messageColor_error","messageColor_info","messageTitle_warn","messageTitle_error","messageTitle_info","messageDialogText","messageDialogTitle","versionTime","opacity","marginLeft","dialogPaper","checkCondition","objMessages","oldVersion","newVersion","instances","messages","forEach","message","show","condition","rules","results","Array","isArray","map","rule","op","ver","includes","substring","split","match","instId","Object","keys","find","id","_instances$id","name","semver","console","warn","startsWith","adapter","_instances$id3","_instances$id2","operand","res","findIndex","push","text","link","linkText","buttons","level","AdapterUpdateDialog","Component","constructor","_this$props$adapterOb","_this$props$adapterOb2","super","mobile","lang","this","window","innerWidth","MOBILE_WIDTH","showMessageDialog","adapterObject","installedVersion","moment","getDependencies","_this$props$dependenc","result","dependencies","dependency","State","rightVersion","installed","getNews","_this$props$news","news","entry","_this$props$adapterOb3","_this$props$adapterOb4","_this$props$adapterOb5","line","trim","replace","filter","versionDate","fromNow","index","component","getText","en","renderOneMessage","focus","IconWeb","renderMessages","wrap","marginBottom","i","renderMessageDialog","_this$props$adapterOb6","m","setState","IconWarning","IconError","IconInfo","flexGrow","button","onUpdate","render","_this$props$adapterOb7","_this$props$news2","allDownloaded","every","downloaded","dividers","length","gutterBottom","rightDependencies","onIgnore","_this$messages","textUpdate","textInstruction","_this$messages2","onInstruction","BookIcon"],"sourceRoot":""}