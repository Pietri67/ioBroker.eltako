{"version":3,"file":"static/js/8144.c24735f9.chunk.js","mappings":"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","sources":["../node_modules/@devbookhq/splitter/src/utils/getInnerSize.ts","../node_modules/@devbookhq/splitter/src/useEventListener.ts","../node_modules/@devbookhq/splitter/node_modules/style-inject/dist/style-inject.es.js","../node_modules/@devbookhq/splitter/src/Gutter.tsx","../node_modules/@devbookhq/splitter/src/state/reducer.actions.ts","../node_modules/@devbookhq/splitter/src/utils/getGutterSize.ts","../node_modules/@devbookhq/splitter/src/state/reducer.ts","../node_modules/@devbookhq/splitter/src/utils/flattenChildren.ts","../node_modules/@devbookhq/splitter/src/utils/isTouchEvent.ts","../node_modules/@devbookhq/splitter/src/index.tsx","../node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-is/index.js","../node_modules/react-dnd-preview/dist/index.js"],"sourcesContent":["import { SplitDirection } from '../index';\n\nexport default function getInnerSize(direction: SplitDirection, element: HTMLElement) {\n  // Returns undefined if parent element has no layout yet.\n  // Or if the parent has no size.\n\n  const computedStyle = getComputedStyle(element);\n  if (!computedStyle) return;\n\n  let size = direction === SplitDirection.Horizontal ? element.clientWidth : element.clientHeight;\n\n  if (size === 0) return;\n\n  if (direction === SplitDirection.Horizontal) {\n    size -= parseFloat(computedStyle.paddingLeft) + parseFloat(computedStyle.paddingRight);\n  } else {\n    size -= parseFloat(computedStyle.paddingTop) + parseFloat(computedStyle.paddingBottom);\n  }\n\n  return size;\n}\n","import { useEffect } from 'react';\n\ninterface UseAddEventListenerOptions extends AddEventListenerOptions {\n  condition: boolean;\n}\n\nfunction useEventListener(event: string, handler: (event: any) => void, deps: any[] = [], useAddEventListenerOptions: UseAddEventListenerOptions = { condition: true }) {\n  const { condition, ...addEventListenerOptions } = useAddEventListenerOptions\n  useEffect(() => {\n    if (condition) {\n      window.addEventListener(event, handler, addEventListenerOptions);\n    }\n    return () => {\n      if (condition) {\n        window.removeEventListener(event, handler)\n      }\n    };\n\n// eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [event, handler, condition, ...deps]);\n}\n\nexport default useEventListener;\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from 'react';\nimport type { MouseEvent, TouchEvent } from 'react';\nimport { SplitDirection, GutterTheme, isTouchDevice } from './index';\n\ninterface GutterProps {\n  className?: string;\n  theme: GutterTheme;\n  draggerClassName?: string;\n  direction?: SplitDirection;\n  onDragging?: (e: MouseEvent | TouchEvent) => void;\n}\n\nconst Gutter = React.forwardRef<HTMLDivElement, GutterProps>((\n  {\n    className,\n    theme,\n    draggerClassName,\n    direction = SplitDirection.Vertical,\n    onDragging,\n  },\n  ref,\n) => {\n  const containerClass = `__dbk__gutter ${direction} ${className || theme}`;\n  const draggerClass = `__dbk__dragger ${direction} ${draggerClassName || theme}`;\n\n  return (\n    <div\n      className={containerClass}\n      ref={ref}\n      dir={direction}\n      onMouseDown={onDragging}\n      onTouchStart={isTouchDevice ? onDragging : undefined}\n    >\n      <div className={draggerClass}/>\n    </div>\n  );\n});\n\nexport default Gutter;\n\n","import type { SplitDirection } from 'index';\n\nexport enum ActionType {\n  SetIsReadyToCompute,\n  CreatePairs,\n  CalculateSizes,\n  StartDragging,\n  StopDragging,\n}\n\nexport interface SetIsReadyToCompute {\n  type: ActionType.SetIsReadyToCompute;\n  payload: {\n    isReady: boolean,\n  };\n}\n\nexport interface CreatePairs {\n  type: ActionType.CreatePairs;\n  payload: {\n    direction: SplitDirection,\n    children: HTMLElement[],\n    gutters: HTMLElement[],\n  };\n}\n\nexport interface CalculateSizes {\n  type: ActionType.CalculateSizes;\n  payload: {\n    direction: SplitDirection,\n    gutterIdx: number;\n  };\n}\n\nexport interface StartDragging {\n  type: ActionType.StartDragging;\n  payload: {\n    gutterIdx: number;\n  };\n}\n\ninterface StopDragging {\n  type: ActionType.StopDragging;\n}\n\nexport type Action = SetIsReadyToCompute\n  | CreatePairs\n  | CalculateSizes\n  | StartDragging\n  | StopDragging;\n\n\n","export default function getGutterSizes(gutterSize: number, isFirst: boolean, isLast: boolean) {\n  let aGutterSize: number;\n  let bGutterSize: number;\n\n  if (isFirst) {\n    aGutterSize = gutterSize / 2;\n    bGutterSize = gutterSize;\n  } else if (isLast) {\n    aGutterSize = gutterSize;\n    bGutterSize = gutterSize / 2;\n  } else {\n    aGutterSize = gutterSize;\n    bGutterSize = gutterSize;\n  }\n\n  return { aGutterSize, bGutterSize };\n};\n","import { SplitDirection } from '../index';\nimport { Action, ActionType } from './reducer.actions';\nimport Pair from '../pair';\n\nimport getInnerSize from '../utils/getInnerSize';\nimport getGutterSizes from '../utils/getGutterSize';\n\nexport interface State {\n  isReady: boolean;\n\n  isDragging: boolean;\n  draggingIdx?: number; // Index of a gutter that is being dragged.\n\n  pairs: Pair[];\n}\n\nexport default function reducer(state: State, action: Action) {\n  switch (action.type) {\n    case ActionType.SetIsReadyToCompute: {\n      return {\n        ...state,\n        isReady: action.payload.isReady,\n      }\n    }\n    // -----------------------------------------------------------------------\n    // |     i=0     |         i=1         |        i=2       |      i=3     |\n    // |             |                     |                  |              |\n    // |           pair 0                pair 1             pair 2           |\n    // |             |                     |                  |              |\n    // -----------------------------------------------------------------------\n    case ActionType.CreatePairs: {\n      const { direction, children, gutters } = action.payload;\n\n      // All children must have common parent.\n      const parent = children[0].parentNode;\n      if (!parent) throw new Error(`Cannot create pairs - parent is undefined.`);\n      const parentSize = getInnerSize(direction, parent as HTMLElement);\n      if (parentSize === undefined) throw new Error(`Cannot create pairs - parent has undefined or zero size: ${parentSize}.`);\n\n      const pairs: Pair[] = [];\n      children.forEach((_, idx) => {\n        if (idx > 0) {\n          const a = children[idx-1];\n          const b = children[idx];\n          const gutter = gutters[idx-1];\n\n          const start = direction === SplitDirection.Horizontal\n            ? a.getBoundingClientRect().left\n            : a.getBoundingClientRect().top;\n\n          const end = direction === SplitDirection.Horizontal\n            ? b.getBoundingClientRect().right\n            : b.getBoundingClientRect().bottom;\n\n          const size = direction === SplitDirection.Horizontal\n            ? a.getBoundingClientRect().width + gutter.getBoundingClientRect().width + b.getBoundingClientRect().width\n            : a.getBoundingClientRect().height + gutter.getBoundingClientRect().height + b.getBoundingClientRect().height\n\n          const gutterSize = direction === SplitDirection.Horizontal\n            ? gutter.getBoundingClientRect().width\n            : gutter.getBoundingClientRect().height;\n\n          const pair: Pair = {\n            idx: idx-1,\n            // TODO: Do we need to have a reference to the whole elements? Aren't indexes enough?\n            a,\n            b,\n            gutter,\n            parent: parent as HTMLElement,\n            start,\n            end,\n            size,\n            gutterSize,\n            // At the start, all elements has the same width.\n            aSizePct: 100 / children.length,\n            bSizePct: 100 / children.length,\n          };\n\n          pairs.push(pair);\n        }\n      });\n\n      return {\n        ...state,\n        pairs,\n      };\n    }\n    case ActionType.StartDragging: {\n      const { gutterIdx } = action.payload;\n      return {\n        ...state,\n        isDragging: true,\n        draggingIdx: gutterIdx,\n      };\n    }\n    case ActionType.StopDragging: {\n      return {\n        ...state,\n        isDragging: false,\n      };\n    }\n    // Recalculates the stored sizes based on the actual elements' sizes.\n    case ActionType.CalculateSizes: {\n      // We need to calculate sizes only for the pair\n      // that has the moved gutter.\n      const { direction, gutterIdx } = action.payload;\n      const pair = state.pairs[gutterIdx];\n\n      const parentSize = getInnerSize(direction, pair.parent);\n      if (!parentSize) throw new Error(`Cannot calculate sizes - 'pair.parent' has undefined or zero size.`);\n\n      const gutterSize = pair.gutter[direction === SplitDirection.Horizontal ? 'clientWidth' : 'clientHeight'];\n\n      const isFirst = gutterIdx === 0;\n      const isLast = gutterIdx === state.pairs.length - 1;\n      const { aGutterSize, bGutterSize } = getGutterSizes(gutterSize, isFirst, isLast);\n\n      let start: number;\n      let end: number;\n      let size: number;\n      let aSizePct: number;\n      let bSizePct: number;\n\n      if (direction === SplitDirection.Horizontal) {\n        start = pair.a.getBoundingClientRect().left;\n\n        end = pair.b.getBoundingClientRect().right;\n\n        aSizePct = ((pair.a.getBoundingClientRect().width + aGutterSize) / parentSize) * 100;\n        bSizePct = ((pair.b.getBoundingClientRect().width + bGutterSize) / parentSize) * 100;\n\n        size =\n          pair.a.getBoundingClientRect().width +\n          aGutterSize +\n          bGutterSize +\n          pair.b.getBoundingClientRect().width;\n      } else {\n        start = pair.a.getBoundingClientRect().top;\n\n        end = pair.b.getBoundingClientRect().bottom;\n\n        aSizePct = ((pair.a.getBoundingClientRect().height + aGutterSize) / parentSize) * 100;\n        bSizePct = ((pair.b.getBoundingClientRect().height + bGutterSize) / parentSize) * 100;\n\n        size =\n          pair.a.getBoundingClientRect().height +\n          aGutterSize +\n          bGutterSize +\n          pair.b.getBoundingClientRect().height;\n      }\n\n      state.pairs[gutterIdx] = {\n        ...pair,\n        start,\n        end,\n        size,\n        aSizePct,\n        bSizePct,\n        gutterSize,\n      };\n\n      return {\n        ...state\n      };\n    }\n    default:\n      return state;\n  }\n}\n\n","// Taken from https://github.com/grrowl/react-keyed-flatten-children\n\n/* Returns React children into an array, flattening fragments. */\nimport {\n  ReactNode,\n  ReactChild,\n  Children,\n  isValidElement,\n  cloneElement\n} from 'react';\nimport { isFragment } from 'react-is';\n\nexport default function flattenChildren(\n  children: ReactNode,\n  depth: number = 0,\n  keys: (string | number)[] = []\n): ReactChild[] {\n  return Children.toArray(children).reduce(\n    (acc: ReactChild[], node, nodeIndex) => {\n      if (isFragment(node)) {\n        acc.push.apply(\n          acc,\n          flattenChildren(\n            node.props.children,\n            depth + 1,\n            keys.concat(node.key || nodeIndex)\n          )\n        );\n      } else {\n        if (isValidElement(node)) {\n          acc.push(\n            cloneElement(node, {\n              key: keys.concat(String(node.key)).join('.')\n            })\n          );\n        } else if (typeof node === 'string' || typeof node === 'number') {\n          acc.push(node);\n        }\n      }\n      return acc;\n    },\n    []\n  );\n}\n","import type { MouseEvent, TouchEvent } from 'react';\n\nexport const isTouchEvent = (e: MouseEvent | TouchEvent): e is TouchEvent => {\n  return 'changedTouches' in e\n}\n","import React, {\n  useEffect,\n  useReducer,\n  useRef,\n} from 'react';\nimport type { MouseEvent, TouchEvent } from 'react';\n\nimport './index.css';\nimport getInnerSize from './utils/getInnerSize';\nimport useEventListener from './useEventListener';\nimport Gutter from './Gutter';\nimport { ActionType } from './state/reducer.actions';\nimport reducer, { State } from './state/reducer';\nimport getGutterSizes from './utils/getGutterSize';\nimport flattenChildren from './utils/flattenChildren';\nimport { isTouchEvent } from 'utils/isTouchEvent';\n\nexport enum SplitDirection {\n  Horizontal = 'Horizontal',\n  Vertical = 'Vertical',\n}\n\nexport enum GutterTheme {\n  Light = 'Light',\n  Dark = 'Dark',\n}\n\nconst DefaultMinSize = 16;\n\nexport const isTouchDevice = typeof window !== 'undefined' && 'ontouchstart' in window;\n\n// users touch or mouse position\nfunction getPosition(dir: SplitDirection, e: MouseEvent | TouchEvent) {\n  const targetsValueRef = isTouchEvent(e) ? e.changedTouches[0] : e;\n  if (dir === SplitDirection.Horizontal) return targetsValueRef.clientX;\n  return targetsValueRef.clientY;\n}\n\nfunction getCursorIcon(dir: SplitDirection) {\n  if (dir === SplitDirection.Horizontal) return 'col-resize';\n  return 'row-resize';\n}\n\n/*\nconst stateInit: State = (direction: SplitDirection = SplitDirection.Horizontal) => ({\n  direction,\n  isDragging: false,\n  pairs: [],\n});\n*/\n\nconst initialState: State = {\n  isReady: false,\n  isDragging: false,\n  pairs: [],\n}\n\ninterface SplitProps {\n  direction?: SplitDirection;\n  minWidths?: number[]; // In pixels.\n  minHeights?: number[]; // In pixels.\n  initialSizes?: number[]; // In percentage.\n  gutterTheme?: GutterTheme;\n  gutterClassName?: string;\n  draggerClassName?: string;\n  children?: React.ReactNode;\n  onResizeStarted?: (pairIdx: number) => void;\n  onResizeFinished?: (pairIdx: number, newSizes: number[]) => void;\n  classes?: string[];\n}\n\nfunction Split({\n  direction = SplitDirection.Horizontal,\n  minWidths = [],\n  minHeights = [],\n  initialSizes,\n  gutterTheme = GutterTheme.Dark,\n  gutterClassName,\n  draggerClassName,\n  children: reactChildren,\n  onResizeStarted,\n  onResizeFinished,\n  classes = [],\n}: SplitProps) {\n  const children = flattenChildren(reactChildren)\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const containerRef = useRef<HTMLDivElement>(null)\n  const childRefs = useRef<HTMLElement[]>([]);\n  const gutterRefs = useRef<HTMLElement[]>([]);\n  // We want to reset refs on each re-render so they don't contain old references.\n  childRefs.current = [];\n  gutterRefs.current = [];\n\n  // Helper dispatch functions.\n  const setIsReadyToCompute = React.useCallback((isReady: boolean) => {\n    dispatch({\n      type: ActionType.SetIsReadyToCompute,\n      payload: { isReady },\n    })\n  }, [])\n\n  const startDragging = React.useCallback((direction: SplitDirection, gutterIdx: number) => {\n    dispatch({\n      type: ActionType.StartDragging,\n      payload: { gutterIdx },\n    });\n\n    const pair = state.pairs[gutterIdx];\n    onResizeStarted?.(pair.idx)\n\n    // Disable selection.\n    pair.a.style.userSelect = 'none';\n    pair.b.style.userSelect = 'none';\n\n    // Set the mouse cursor.\n    // Must be done at multiple levels, nut just for a gutter.\n    // The mouse cursor might move outside of the gutter element.\n    pair.gutter.style.cursor = getCursorIcon(direction);\n    pair.parent.style.cursor = getCursorIcon(direction);\n    document.body.style.cursor = getCursorIcon(direction);\n  }, [state.pairs]);\n\n  const stopDragging = React.useCallback(() => {\n    dispatch({\n      type: ActionType.StopDragging,\n    });\n\n    // The callback receives an index of the resized pair and new sizes of all child elements.\n    const allSizes: number[] = [];\n    for (let idx = 0; idx < state.pairs.length; idx++) {\n      const pair = state.pairs[idx];\n      const parentSize = getInnerSize(direction, pair.parent);\n      if (parentSize === undefined) throw new Error(`Cannot call the 'onResizeFinished' callback - parentSize is undefined`);\n      if (pair.gutterSize === undefined) throw new Error(`Cannot call 'onResizeFinished' callback - gutterSize is undefined`);\n\n      const isFirst = idx === 0;\n      const isLast = idx === state.pairs.length - 1;\n\n      const aSize = pair.a.getBoundingClientRect()[direction === SplitDirection.Horizontal ? 'width' : 'height'];\n      const { aGutterSize, bGutterSize } = getGutterSizes(pair.gutterSize, isFirst, isLast);\n      const aSizePct = ((aSize + aGutterSize) / parentSize) * 100;\n      allSizes.push(aSizePct);\n\n      if (isLast) {\n        const bSize = pair.b.getBoundingClientRect()[direction === SplitDirection.Horizontal ? 'width' : 'height'];\n        const bSizePct = ((bSize + bGutterSize) / parentSize) * 100;\n        allSizes.push(bSizePct);\n      }\n    }\n\n    if (state.draggingIdx === undefined) throw new Error(`Could not reset cursor and user-select because 'state.draggingIdx' is undefined`);\n    const pair = state.pairs[state.draggingIdx];\n    onResizeFinished?.(pair.idx, allSizes);\n\n    // Disable selection.\n    pair.a.style.userSelect = '';\n    pair.b.style.userSelect = '';\n\n    // Set the mouse cursor.\n    // Must be done at multiple levels, not just for a gutter.\n    // The mouse cursor might move outside of the gutter element.\n    pair.gutter.style.cursor = '';\n    pair.parent.style.cursor = '';\n    document.body.style.cursor = '';\n  }, [state.draggingIdx, state.pairs, direction]);\n\n  const calculateSizes = React.useCallback((direction: SplitDirection, gutterIdx: number) => {\n    dispatch({\n      type: ActionType.CalculateSizes,\n      payload: { direction, gutterIdx },\n    });\n  }, []);\n\n  const createPairs = React.useCallback((direction: SplitDirection, children: HTMLElement[], gutters: HTMLElement[]) => {\n    dispatch({\n      type: ActionType.CreatePairs,\n      payload: { direction, children, gutters },\n    });\n  }, []);\n  /////////\n\n  // This method is called on the initial render.\n  // It iterates through the all children sets their initial sizes.\n  const setInitialSizes = React.useCallback((\n    direction: SplitDirection,\n    children: HTMLElement[],\n    gutters: HTMLElement[],\n    initialSizes?: number[],\n  ) => {\n    // All children must have common parent.\n    const parent = children[0].parentNode;\n    if (!parent) throw new Error(`Cannot set initial sizes - parent is undefined`);\n    const parentSize = getInnerSize(direction, parent as HTMLElement);\n    if (parentSize === undefined) throw new Error(`Cannot set initial sizes - parent has undefined size`);\n\n    children.forEach((c, idx) => {\n      const isFirst = idx === 0;\n      const isLast = idx === children.length - 1;\n\n      let gutterSize = 0\n      if (children.length > 1) {\n        const gutter = gutters[isLast ? idx-1 : idx];\n        gutterSize = gutter.getBoundingClientRect()[direction === SplitDirection.Horizontal ? 'width' : 'height'];\n        gutterSize = isFirst || isLast ? gutterSize / 2 : gutterSize;\n      }\n\n      let calc: string;\n      if (initialSizes && idx < initialSizes.length)  {\n        calc = `calc(${initialSizes[idx]}% - ${gutterSize}px)`;\n      } else {\n        // '100 / children.length' makes all the children same wide.\n        calc = `calc(${100 / children.length}% - ${gutterSize}px)`;\n      }\n\n      if (direction === SplitDirection.Horizontal) {\n        c.style.width = calc;\n        // Reset the child wrapper's height because the direction could have changed.\n        c.style.height = '100%';\n      } else {\n        c.style.height = calc;\n        // Reset the child wrapper's width because the direction could have changed.\n        c.style.width = '100%';\n      }\n    });\n  }, []);\n\n  // Here we actually change the width of children.\n  // We convert the element's sizes into percentage\n  // and let the CSS 'calc' function do the heavy lifting.\n  // Size of 'pair.a' is same as 'offset'.\n  //\n  // For just 2 children total, the percentage adds up always to 100.\n  // For >2 children total, the percentage adds to less than 100.\n  // That's because a single gutter changes sizes of only the given pair of children.\n  // Each gutter changes size only of the two adjacent elements.\n  // -----------------------------------------------------------------------\n  // |                     |||                     |||                     |\n  // |       33.3%         |||        33.3%        |||       33.3%         |\n  // |                     |||                     |||                     |\n  // |                     |||                     |||                     |\n  // -----------------------------------------------------------------------\n  const adjustSize = React.useCallback((direction: SplitDirection, offset: number) => {\n    if (state.draggingIdx === undefined) throw new Error(`Cannot adjust size - 'draggingIdx' is undefined`);\n\n    const pair = state.pairs[state.draggingIdx];\n    if (pair.size === undefined) throw new Error(`Cannot adjust size - 'pair.size' is undefined`);\n    if (pair.gutterSize === undefined) throw new Error(`Cannot adjust size - 'pair.gutterSize' is undefined`);\n    const percentage = pair.aSizePct + pair.bSizePct;\n\n    const aSizePct = (offset / pair.size) * percentage;\n    const bSizePct = percentage - (offset / pair.size) * percentage;\n\n    const isFirst = state.draggingIdx === 0;\n    const isLast = state.draggingIdx === state.pairs.length - 1;\n    const { aGutterSize, bGutterSize } = getGutterSizes(pair.gutterSize, isFirst, isLast);\n\n    const aCalc = `calc(${aSizePct}% - ${aGutterSize}px)`;\n    const bCalc = `calc(${bSizePct}% - ${bGutterSize}px)`;\n    if (direction === SplitDirection.Horizontal) {\n      pair.a.style.width = aCalc;\n      pair.b.style.width = bCalc;\n    } else {\n      pair.a.style.height = aCalc;\n      pair.b.style.height = bCalc;\n    }\n  }, [state.draggingIdx, state.pairs, direction]);\n\n  const drag = React.useCallback((e: MouseEvent | TouchEvent, direction: SplitDirection, minSizes: number[]) => {\n    if (!state.isDragging) return\n    if (state.draggingIdx === undefined) throw new Error(`Cannot drag - 'draggingIdx' is undefined`);\n\n    const pair = state.pairs[state.draggingIdx];\n    if (pair.start === undefined) throw new Error(`Cannot drag - 'pair.start' is undefined`);\n    if (pair.size === undefined) throw new Error(`Cannot drag - 'pair.size' is undefined`);\n    if (pair.gutterSize === undefined) throw new Error(`Cannot drag - 'pair.gutterSize' is undefined`);\n\n    // 'offset' is the width of the 'a' element in a pair.\n    let offset = getPosition(direction, e) - pair.start;\n\n    // Limit the maximum size and the minimum size of resized children.\n\n    let aMinSize = DefaultMinSize;\n    let bMinSize = DefaultMinSize;\n    if (minSizes.length > state.draggingIdx) {\n      aMinSize = minSizes[state.draggingIdx];\n    }\n    if (minSizes.length >= state.draggingIdx + 1) {\n      bMinSize = minSizes[state.draggingIdx + 1];\n    }\n\n    // TODO: We should check whether the parent is big enough\n    // to support these min sizes.\n    if (offset < pair.gutterSize + aMinSize) {\n      offset = pair.gutterSize + aMinSize;\n    }\n\n    if (offset >= pair.size - (pair.gutterSize + bMinSize)) {\n      offset = pair.size - (pair.gutterSize + bMinSize);\n    }\n\n    adjustSize(direction, offset);\n  }, [state.isDragging, state.draggingIdx, state.pairs, adjustSize]);\n\n  function handleStartDragging(gutterIdx: number) {\n    calculateSizes(direction, gutterIdx);\n    startDragging(direction, gutterIdx);\n  }\n\n  const onStopDragging = () => {\n    if (!state.isDragging) return;\n    if (state.draggingIdx === undefined)\n      throw new Error(`Cannot calculate sizes after dragging = 'state.draggingIdx' is undefined`);\n    calculateSizes(direction, state.draggingIdx);\n    stopDragging();\n  };\n\n  const onMove = (e: MouseEvent | TouchEvent) => {\n    if (!state.isDragging) return;\n    if (isTouchEvent(e)) {\n      // touch event also scrolls the page, so we need to prevent that\n      e.preventDefault();\n    }\n    drag(e, direction, direction === SplitDirection.Horizontal ? minWidths : minHeights);\n  };\n\n  useEventListener(\"mouseup\", onStopDragging, [state.isDragging, stopDragging]);\n  useEventListener(\"mousemove\", onMove, [direction, state.isDragging, drag, minWidths, minHeights]);\n\n  useEventListener(\"touchend\", onStopDragging, [state.isDragging, stopDragging], { condition: isTouchDevice });\n  useEventListener(\"touchmove\", onMove, [direction, state.isDragging, drag, minWidths, minHeights], { condition: isTouchDevice, passive: !isTouchDevice });\n\n  // This makes sure that Splitter properly re-renders if parent's size changes dynamically.\n  useEffect(function watchParentSize() {\n    if (!containerRef.current) return\n    const el = containerRef.current.parentElement\n\n    // Splitter must have a parent element. In the most trivial example it's either <body> or <html>.\n    if (!el) return\n\n    // TODO: Potential performance issue!\n    // When nesting Splitters the `observer` is registered for each nesting \"level\".\n    // Splitter's parent element is another Splitter in the nesting use case.\n    const observer = new ResizeObserver(() => {\n      const style = getComputedStyle(el)\n      const size = direction === SplitDirection.Horizontal ? el.clientWidth : el.clientHeight\n      const isReady = !!style && !!size\n      setIsReadyToCompute(isReady)\n    })\n    observer.observe(el)\n\n    return () => {\n      observer.disconnect()\n    }\n  }, [\n    containerRef.current,\n    direction,\n  ])\n\n  // Initial setup, runs every time the child views change.\n  useEffect(function initialSetup() {\n    if (!state.isReady) return;\n    if (childRefs.current && !(childRefs.current[0] as any).offsetParent) return;\n    // By the time first useEffect runs refs should be already set, unless something really bad happened.\n    if (!childRefs.current || !gutterRefs.current) {\n      throw new Error(`Cannot create pairs - either variable 'childRefs' or 'gutterRefs' is undefined`);\n    }\n\n    // Don't create pairs if there's only one child.\n    if (children.length <= 1) {\n      setInitialSizes(direction, childRefs.current, gutterRefs.current, initialSizes);\n    } else {\n      setInitialSizes(direction, childRefs.current, gutterRefs.current, initialSizes);\n      createPairs(direction, childRefs.current, gutterRefs.current);\n    }\n\n  }, [\n    reactChildren,\n    state.isReady,\n    direction,\n    setInitialSizes,\n    createPairs,\n    initialSizes,\n  ]);\n\n  function addRef(refs: typeof childRefs | typeof gutterRefs, el: any) {\n    if (!refs.current) throw new Error(`Can't add element to ref object - ref isn't initialized`);\n    if (el && !refs.current.includes(el)) {\n      refs.current.push(el);\n    }\n  }\n\n  return (\n    <div\n      className={'__dbk__container ' + `${direction}`}\n      ref={containerRef}\n    >\n      {state.isReady && children.map((c, idx) => (\n        <React.Fragment key={idx}>\n          <div\n            ref={el => addRef(childRefs, el)}\n            className={'__dbk__child-wrapper ' + (idx < classes.length ? classes[idx] : '')}\n          >{c}\n          </div>\n\n          {/* Gutter is between each two child views. */}\n          {idx < (children as React.ReactNodeArray).length - 1 &&\n            <Gutter\n              ref={el => addRef(gutterRefs, el)}\n              className={gutterClassName}\n              theme={gutterTheme}\n              draggerClassName={draggerClassName}\n              direction={direction}\n              onDragging={() => handleStartDragging(idx)}\n            />\n          }\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n\nexport type {\n  SplitProps\n}\nexport default Split;\n","/** @license React v17.0.2\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=60103,c=60106,d=60107,e=60108,f=60114,g=60109,h=60110,k=60112,l=60113,m=60120,n=60115,p=60116,q=60121,r=60122,u=60117,v=60129,w=60131;\nif(\"function\"===typeof Symbol&&Symbol.for){var x=Symbol.for;b=x(\"react.element\");c=x(\"react.portal\");d=x(\"react.fragment\");e=x(\"react.strict_mode\");f=x(\"react.profiler\");g=x(\"react.provider\");h=x(\"react.context\");k=x(\"react.forward_ref\");l=x(\"react.suspense\");m=x(\"react.suspense_list\");n=x(\"react.memo\");p=x(\"react.lazy\");q=x(\"react.block\");r=x(\"react.server.block\");u=x(\"react.fundamental\");v=x(\"react.debug_trace_mode\");w=x(\"react.legacy_hidden\")}\nfunction y(a){if(\"object\"===typeof a&&null!==a){var t=a.$$typeof;switch(t){case b:switch(a=a.type,a){case d:case f:case e:case l:case m:return a;default:switch(a=a&&a.$$typeof,a){case h:case k:case p:case n:case g:return a;default:return t}}case c:return t}}}var z=g,A=b,B=k,C=d,D=p,E=n,F=c,G=f,H=e,I=l;exports.ContextConsumer=h;exports.ContextProvider=z;exports.Element=A;exports.ForwardRef=B;exports.Fragment=C;exports.Lazy=D;exports.Memo=E;exports.Portal=F;exports.Profiler=G;exports.StrictMode=H;\nexports.Suspense=I;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return y(a)===h};exports.isContextProvider=function(a){return y(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return y(a)===k};exports.isFragment=function(a){return y(a)===d};exports.isLazy=function(a){return y(a)===p};exports.isMemo=function(a){return y(a)===n};\nexports.isPortal=function(a){return y(a)===c};exports.isProfiler=function(a){return y(a)===f};exports.isStrictMode=function(a){return y(a)===e};exports.isSuspense=function(a){return y(a)===l};exports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===v||a===e||a===l||a===m||a===w||\"object\"===typeof a&&null!==a&&(a.$$typeof===p||a.$$typeof===n||a.$$typeof===g||a.$$typeof===h||a.$$typeof===k||a.$$typeof===u||a.$$typeof===q||a[0]===r)?!0:!1};\nexports.typeOf=y;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","import c from\"react\";import{useRef as m}from\"react\";import{useDragLayer as f}from\"react-dnd\";var i=(t,e)=>({x:t.x-e.x,y:t.y-e.y}),a=t=>{let e=t.getInitialClientOffset(),r=t.getInitialSourceClientOffset();return e===null||r===null?{x:0,y:0}:i(e,r)},u=(t,e)=>{let r=t.getClientOffset();if(r===null)return null;if(!e.current||!e.current.getBoundingClientRect)return i(r,a(t));let n=e.current.getBoundingClientRect(),o={x:n.width/2,y:n.height/2};return i(r,o)};var p=t=>{let e=`translate(${t.x.toFixed(1)}px, ${t.y.toFixed(1)}px)`;return{pointerEvents:\"none\",position:\"fixed\",top:0,left:0,transform:e,WebkitTransform:e}},l=()=>{let t=m(null),e=f(r=>({currentOffset:u(r,t),isDragging:r.isDragging(),itemType:r.getItemType(),item:r.getItem(),monitor:r}));return!e.isDragging||e.currentOffset===null?{display:!1}:{display:!0,itemType:e.itemType,item:e.item,style:p(e.currentOffset),monitor:e.monitor,ref:t}};import{createContext as P}from\"react\";var s=P(void 0);var x=t=>{let e=l();if(!e.display)return null;let{display:r,...n}=e,o;return\"children\"in t?typeof t.children==\"function\"?o=t.children(n):o=t.children:o=t.generator(n),c.createElement(s.Provider,{value:n},o)};export{s as Context,x as Preview,l as usePreview};\n"],"names":["c","e","t","n","getComputedStyle","i","z","Horizontal","clientWidth","clientHeight","parseFloat","paddingLeft","paddingRight","paddingTop","paddingBottom","l","arguments","length","undefined","r","condition","a","o","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","propertyIsEnumerable","window","addEventListener","removeEventListener","insertAt","document","head","getElementsByTagName","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","u","_ref","className","theme","draggerClassName","direction","Vertical","onDragging","g","d","assign","ref","dir","onMouseDown","onTouchStart","C","children","h","p","aGutterSize","bGutterSize","f","SetIsReadyToCompute","isReady","payload","CreatePairs","gutters","parentNode","Error","forEach","s","getBoundingClientRect","left","top","right","bottom","width","height","idx","b","gutter","parent","start","end","size","gutterSize","aSizePct","bSizePct","push","pairs","StartDragging","gutterIdx","isDragging","draggingIdx","StopDragging","CalculateSizes","_","toArray","reduce","apply","props","concat","key","String","join","w","Light","Dark","y","S","m","_ref2","minWidths","minHeights","initialSizes","gutterTheme","gutterClassName","x","k","v","onResizeStarted","R","onResizeFinished","B","classes","D","I","E","H","j","O","N","current","P","$","style","userSelect","cursor","body","T","F","G","L","V","A","changedTouches","clientX","clientY","W","onStopDragging","M","preventDefault","X","includes","passive","parentElement","ResizeObserver","observe","disconnect","offsetParent","map","q","Symbol","for","$$typeof","exports","isFragment","module","getClientOffset","getInitialClientOffset","getInitialSourceClientOffset","toFixed","pointerEvents","position","transform","WebkitTransform","currentOffset","itemType","getItemType","item","getItem","monitor","display"],"sourceRoot":""}