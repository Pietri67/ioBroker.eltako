{"version":3,"file":"static/js/471.15555b06.chunk.js","mappings":"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","sources":["assets/sentry.svg","components/CustomModal.tsx","components/CustomSelectButton.tsx","components/State.tsx","helpers/MaterialDynamicIcon.tsx","tabs/Config.tsx","components/Instances/InstanceInfo.tsx","assets/sentryNo.svg","components/Instances/LinksDialog.tsx","components/Instances/InstanceGeneric.tsx","components/Instances/InstanceCard.tsx","components/Instances/InstanceRow.tsx","assets/filter.svg","components/Instances/InstanceFilterDialog.tsx","components/Instances/InstanceCategory.tsx","tabs/Instances.tsx"],"sourcesContent":["var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgSentry(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 256 230\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M251.22 187.856c5.785 10.045 6.345 20.608 1.538 28.958-4.8 8.357-14.192 13.143-25.768 13.143h-21.816c.259-4.068.431-8.17.431-12.302 0-4.628-.215-9.198-.531-13.754l14.35-.014c3.528 0 6.38-2.867 6.38-6.403a6.46 6.46 0 0 0-.768-3.053l-91.46-158.97a6.349 6.349 0 0 0-5.54-3.24 6.374 6.374 0 0 0-5.461 3.09l-14.522 25.243c44.134 33.27 73.804 84.813 77.864 143.333.316 4.548.531 9.119.531 13.753 0 4.132-.172 8.228-.424 12.302h-71.246c.388-4.053.611-8.148.611-12.302 0-4.649-.273-9.233-.776-13.753-3.52-32.206-19.286-60.748-42.503-80.89l-10.003 17.376c17.54 16.325 29.512 38.558 32.767 63.514.59 4.505.92 9.09.92 13.753 0 4.154-.273 8.264-.74 12.302H29.01c-11.576 0-20.968-4.793-25.768-13.15-4.807-8.35-4.247-18.905 1.538-28.958l13.56-23.238a79.42 79.42 0 0 1 20.715 16.052l-8.083 13.768a6.523 6.523 0 0 0-.77 3.054 6.383 6.383 0 0 0 6.382 6.395l32.033.015c-2.687-15.356-9.772-29.21-19.918-40.183-5.979-6.445-12.963-11.9-20.738-16.074l35.77-62.15a151.427 151.427 0 0 1 21.564 14.624c30.827 25.013 51.644 61.955 55.416 103.776h19.172c-3.91-48.892-28.477-92.006-64.937-120.548a171.205 171.205 0 0 0-21.672-14.457l30.532-53.045C109.583 5.77 118.42 0 128.036 0c9.607 0 18.438 5.77 24.223 15.823l98.961 172.033z\",\n    fill: \"#FB2D26\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSentry);\nexport default __webpack_public_path__ + \"static/media/sentry.e732e10c5c1ceed0955b2fec6dab33f8.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState, type JSX } from 'react';\n\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    IconButton,\n    TextField,\n    Button,\n    InputAdornment,\n    type Breakpoint,\n} from '@mui/material';\n\nimport { Check as CheckIcon, Close as CloseIcon, Language as LanguageIcon } from '@mui/icons-material';\n\nimport { I18n, type IobTheme, Utils } from '@iobroker/adapter-react-v5';\n\nconst styles: Record<string, any> = {\n    modalDialog: {\n        minWidth: 400,\n        maxWidth: 800,\n    },\n    overflowHidden: {\n        display: 'flex',\n        overflow: 'hidden',\n    },\n    titleIcon: {\n        marginRight: 5,\n    },\n    content: {\n        fontSize: 16,\n    },\n    languageButton: {\n        position: 'absolute',\n        right: 8,\n        top: 8,\n    },\n    languageButtonActive: (theme: IobTheme) => ({\n        color: theme.palette.primary.main,\n    }),\n};\n\ninterface CustomModalProps {\n    icon?: React.FC<{ style?: React.CSSProperties }>;\n    onClose: () => void;\n    children?: JSX.Element | JSX.Element[];\n    title?: string;\n    titleButtonClose?: string;\n    titleButtonApply?: string;\n    onApply?: (value: string | number) => void;\n    fullWidth?: boolean;\n    maxWidth?: Breakpoint;\n    applyButton?: boolean;\n    disableApplyIfNotChanged?: boolean;\n    overflowHidden?: boolean;\n    help?: string;\n    noTranslation?: boolean;\n    toggleTranslation?: () => void;\n    textInput?: boolean;\n    defaultValue?: string | number;\n    progress?: boolean;\n    disableApply?: boolean;\n    theme: IobTheme;\n}\n\nconst CustomModal = ({\n    toggleTranslation,\n    noTranslation,\n    title,\n    fullWidth,\n    help,\n    maxWidth,\n    progress,\n    icon,\n    disableApplyIfNotChanged,\n    applyButton,\n    onClose,\n    children,\n    titleButtonApply,\n    titleButtonClose,\n    onApply,\n    textInput,\n    defaultValue,\n    overflowHidden,\n    disableApply,\n    theme,\n}: CustomModalProps): JSX.Element => {\n    const [value, setValue] = useState(defaultValue);\n    useEffect(() => {\n        setValue(defaultValue);\n    }, [defaultValue]);\n\n    let Icon: React.FC<{ style?: React.CSSProperties }> | null = null;\n\n    if (icon) {\n        Icon = icon;\n    }\n\n    const languageButtonActive = Utils.getStyle(theme, styles.languageButtonActive);\n\n    return (\n        <Dialog\n            open={!0}\n            maxWidth={maxWidth || 'md'}\n            fullWidth={!!fullWidth}\n            disableEscapeKeyDown={false}\n            onClose={onClose}\n            sx={{ '& .MuiPaper-root': styles.modalDialog /* paper: classes.background */ }}\n        >\n            {title && (\n                <DialogTitle>\n                    {icon ? <Icon style={styles.titleIcon} /> : null}\n                    {title}\n                    {I18n.getLanguage() !== 'en' && toggleTranslation ? (\n                        <IconButton\n                            size=\"large\"\n                            style={{ ...styles.languageButton, ...(noTranslation ? languageButtonActive : undefined) }}\n                            onClick={() => toggleTranslation()}\n                            title={I18n.t('Disable/Enable translation')}\n                        >\n                            <LanguageIcon />\n                        </IconButton>\n                    ) : null}\n                </DialogTitle>\n            )}\n            <DialogContent\n                style={{ ...(overflowHidden ? styles.overflowHidden : undefined), ...styles.content, paddingTop: 8 }}\n            >\n                {textInput && (\n                    <TextField\n                        // className={className}\n                        autoComplete=\"off\"\n                        fullWidth\n                        autoFocus\n                        variant=\"standard\"\n                        size=\"medium\"\n                        // rows={10}\n                        multiline\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        slotProps={{\n                            input: {\n                                endAdornment: value ? (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            size=\"small\"\n                                            onClick={() => setValue('')}\n                                        >\n                                            <CloseIcon />\n                                        </IconButton>\n                                    </InputAdornment>\n                                ) : null,\n                            },\n                        }}\n                        // customValue\n                    />\n                )}\n                {children}\n                {help ? <div>{help}</div> : null}\n            </DialogContent>\n            <DialogActions>\n                {(applyButton === undefined || applyButton) && (\n                    <Button\n                        startIcon={<CheckIcon />}\n                        disabled={disableApply || progress || (disableApplyIfNotChanged && defaultValue === value)}\n                        onClick={() => onApply && onApply(textInput ? value : '')}\n                        variant=\"contained\"\n                        color=\"primary\"\n                    >\n                        {I18n.t(titleButtonApply || 'Ok')}\n                    </Button>\n                )}\n                <Button\n                    color=\"grey\"\n                    onClick={onClose}\n                    disabled={progress}\n                    variant=\"contained\"\n                    startIcon={<CloseIcon />}\n                >\n                    {I18n.t(titleButtonClose || 'Cancel')}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default CustomModal;\n","import React, { useState, type JSX } from 'react';\n\nimport { Button, Menu, MenuItem, Tooltip } from '@mui/material';\n\nimport type { Translate } from '@iobroker/adapter-react-v5';\nimport MaterialDynamicIcon from '../helpers/MaterialDynamicIcon';\n\nconst styles: Record<string, React.CSSProperties> = {\n    button: {\n        marginLeft: 10,\n        marginRight: 10,\n    },\n    icon: {\n        marginRight: 5,\n    },\n};\n\ninterface CustomSelectButtonProps {\n    arrayItem: { name: string | number }[];\n    title?: string;\n    onClick: (name: string | number) => void;\n    value: string | number;\n    contained?: boolean;\n    buttonIcon?: JSX.Element;\n    icons?: boolean;\n    t: Translate;\n    translateSuffix?: string;\n    noTranslation?: boolean;\n}\n\nfunction CustomSelectButton({\n    arrayItem,\n    title,\n    onClick,\n    value,\n    contained,\n    buttonIcon,\n    icons,\n    t,\n    translateSuffix,\n    noTranslation,\n}: CustomSelectButtonProps): JSX.Element {\n    const [anchorEl, setAnchorEl] = useState(null);\n    translateSuffix = translateSuffix || '';\n\n    return (\n        <>\n            <Tooltip\n                title={title || ''}\n                slotProps={{ popper: { sx: { pointerEvents: 'none' } } }}\n            >\n                <Button\n                    style={styles.button}\n                    variant={contained ? 'contained' : 'outlined'}\n                    color=\"primary\"\n                    onClick={e => setAnchorEl(e.currentTarget)}\n                >\n                    {buttonIcon ||\n                        (icons && (\n                            <MaterialDynamicIcon\n                                iconName={value as string}\n                                style={styles.icon}\n                            />\n                        ))}\n                    {typeof value === 'number' ? value : noTranslation ? value : t(value + translateSuffix)}\n                </Button>\n            </Tooltip>\n            <Menu\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={() => setAnchorEl(null)}\n            >\n                {arrayItem.map(({ name }, idx) => (\n                    <MenuItem\n                        key={name}\n                        selected={value ? name === value : value === 0 ? name === value : idx === 0}\n                        disabled={value ? name === value : value === 0 ? name === value : idx === 0}\n                        className={`tag-card-${name}`}\n                        style={{ placeContent: 'space-between' }}\n                        value={name}\n                        onClick={() => {\n                            onClick(name);\n                            setAnchorEl(null);\n                        }}\n                    >\n                        {icons && (\n                            <MaterialDynamicIcon\n                                iconName={name as string}\n                                style={styles.icon}\n                            />\n                        )}\n                        {typeof name === 'number' ? name : noTranslation ? name : t(name + translateSuffix)}\n                    </MenuItem>\n                ))}\n            </Menu>\n        </>\n    );\n}\n\nexport default CustomSelectButton;\n","import React, { type JSX } from 'react';\n\nimport { Grid2, Typography } from '@mui/material';\n\nimport { CheckCircle as CheckCircleIcon, Cancel as CancelIcon } from '@mui/icons-material';\n\nimport { green, red } from '@mui/material/colors';\n\nconst styles: Record<string, any> = {\n    checkIcon: {\n        color: green[700],\n    },\n    cancelIcon: {\n        color: red[700],\n    },\n    wrapperContent: {\n        display: 'flex',\n        flexFlow: 'nowrap',\n        alignItems: 'inherit',\n    },\n};\n\ninterface StateProps {\n    state: boolean;\n    children: JSX.Element | JSX.Element[] | string | string[];\n}\n\nfunction State(props: StateProps): JSX.Element {\n    return (\n        <Grid2\n            container\n            style={styles.wrapperContent}\n            alignItems=\"center\"\n            direction=\"row\"\n            spacing={1}\n        >\n            <Grid2>\n                {props.state ? <CheckCircleIcon style={styles.checkIcon} /> : <CancelIcon style={styles.cancelIcon} />}\n            </Grid2>\n            <Grid2>\n                <Typography>{props.children}</Typography>\n            </Grid2>\n        </Grid2>\n    );\n}\n\nexport default State;\n","import React, { useState, useEffect, type JSX } from 'react';\nimport {\n    AllInclusive,\n    Message,\n    WifiTethering,\n    Apps,\n    VpnKey,\n    NotificationsActive,\n    SystemUpdateAlt,\n    EmojiSymbols,\n    PermMedia,\n    SettingsEthernet,\n    Storage,\n    Visibility,\n    SettingsBrightness,\n    DateRange,\n    BatteryChargingFull,\n    FilterVintage,\n    LocationOn,\n    Phonelink,\n    Favorite,\n    House,\n    Apartment,\n    EmojiObjects,\n    DialerSip,\n    PhonelinkSetup,\n    AirportShuttle,\n    BubbleChart,\n    Widgets,\n    Brightness6,\n    LinearScale,\n    Help,\n} from '@mui/icons-material';\nimport { type SvgIconComponent } from '@mui/icons-material';\n\nconst ICON_CACHE: Record<string, Promise<ioBroker.AdapterObject>> = {};\n\nconst objIcon: Record<string, SvgIconComponent> = {\n    All: AllInclusive,\n    messaging: Message,\n    communication: WifiTethering,\n    general: Apps,\n    logic: VpnKey,\n    alarm: NotificationsActive,\n    'iot-systems': SystemUpdateAlt,\n    'misc-data': EmojiSymbols,\n    multimedia: PermMedia,\n    network: SettingsEthernet,\n    storage: Storage,\n    visualization: Visibility,\n    'climate-control': SettingsBrightness,\n    'date-and-time': DateRange,\n    energy: BatteryChargingFull,\n    garden: FilterVintage,\n    geoposition: LocationOn,\n    hardware: Phonelink,\n    health: Favorite,\n    household: House,\n    infrastructure: Apartment,\n    lighting: EmojiObjects,\n    protocols: DialerSip,\n    utility: PhonelinkSetup,\n    vehicle: AirportShuttle,\n    'visualization-icons': BubbleChart,\n    'visualization-widgets': Widgets,\n    weather: Brightness6,\n    metering: LinearScale,\n};\n\ninterface MaterialDynamicIconProps {\n    iconName?: string;\n    className?: string;\n    style?: React.CSSProperties;\n    adapter?: string;\n    socket?: any;\n    onClick?: (e: React.MouseEvent) => void;\n}\n\nfunction MaterialDynamicIcon({\n    iconName,\n    className,\n    adapter,\n    socket,\n    onClick,\n    style,\n}: MaterialDynamicIconProps): JSX.Element {\n    const [url, setUrl] = useState('');\n\n    useEffect(() => {\n        if (adapter && socket) {\n            if (!(ICON_CACHE[adapter] instanceof Promise)) {\n                ICON_CACHE[adapter] = socket.getObject(`system.adapter.${adapter}`);\n            }\n            void ICON_CACHE[adapter].then(\n                obj => obj?.common?.icon && setUrl(`../../adapter/${adapter}/${obj.common.icon}`),\n            );\n        }\n    }, [adapter, socket]);\n\n    if (adapter) {\n        return (\n            <img\n                onClick={e => onClick && onClick(e)}\n                src={url || ''}\n                className={className}\n                style={style}\n                alt=\"\"\n            />\n        );\n    }\n    const Element = objIcon[iconName] || Help;\n\n    return (\n        <Element\n            className={className}\n            style={style}\n            onClick={(e: React.MouseEvent) => onClick && onClick(e)}\n        />\n    );\n}\n\nexport default MaterialDynamicIcon;\n","import React, { Component, type JSX } from 'react';\n\nimport { green, grey, orange, red } from '@mui/material/colors';\n\nimport {\n    AppBar,\n    Tooltip,\n    Paper,\n    Fab,\n    Toolbar,\n    Typography,\n    Checkbox,\n    FormControl,\n    FormControlLabel,\n    FormHelperText,\n    IconButton,\n    InputLabel,\n    MenuItem,\n    Select,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Button,\n} from '@mui/material';\n\nimport {\n    Help as HelpIcon,\n    Pause as PauseIcon,\n    PlayArrow as PlayArrowIcon,\n    Refresh as RefreshIcon,\n    Edit as EditIcon,\n    ArrowBack,\n} from '@mui/icons-material';\n\nimport {\n    Icon,\n    DialogConfirm,\n    type IobTheme,\n    type AdminConnection,\n    type ThemeName,\n    type ThemeType,\n    type Translate,\n} from '@iobroker/adapter-react-v5';\n\nimport { type DeviceManagerPropsProps, JsonConfig } from '@iobroker/json-config';\nimport DeviceManager from '@iobroker/dm-gui-components';\n\nimport AdminUtils from '../helpers/AdminUtils';\n\nconst arrayLogLevel: ioBroker.LogLevel[] = ['silly', 'debug', 'info', 'warn', 'error'];\n\ndeclare global {\n    interface Window {\n        // @deprecated\n        attachEvent: any;\n        // @deprecated\n        detachEvent: any;\n    }\n}\n\nconst styles: Record<string, any> = {\n    root: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'hidden',\n    },\n    scroll: {\n        height: '100%',\n        overflowY: 'auto',\n    },\n    instanceIcon: {\n        width: 42,\n        height: 42,\n        marginRight: 16,\n        verticalAlign: 'middle',\n    },\n    button: {\n        marginRight: 5,\n        width: 36,\n        height: 36,\n    },\n    version: {\n        fontSize: 12,\n        opacity: 0.8,\n        marginLeft: 20,\n        marginRight: 10,\n    },\n    versionAliveConnected: (theme: IobTheme) => ({\n        color: theme.palette.mode === 'dark' ? '#23a623' : '#60ff60',\n    }),\n    versionAliveNotConnected: {\n        color: '#a67223',\n    },\n    buttonControl: {\n        padding: '5px',\n        transition: 'opacity 0.2s',\n        height: 34,\n    },\n    enabled: {\n        color: green[400],\n        '&:hover': {\n            backgroundColor: green[200],\n        },\n    },\n    disabled: {\n        color: red[400],\n        '&:hover': {\n            backgroundColor: red[200],\n        },\n    },\n    hide: {\n        visibility: 'hidden',\n    },\n    formControl: {\n        width: '100%',\n        marginBottom: 5,\n    },\n    logLevel: {\n        fontSize: 12,\n        marginLeft: 10,\n    },\n    green: {\n        color: green[700],\n    },\n    red: {\n        color: red[700],\n    },\n    grey: {\n        color: grey[700],\n    },\n    blue: {\n        color: '#0055a9',\n    },\n    orange: {\n        color: orange[400],\n    },\n    orangeDevice: {\n        color: orange[300],\n    },\n    tooltip: {\n        pointerEvents: 'none',\n    },\n};\n\ninterface ConfigProps {\n    adapter: string;\n    instance: number;\n    materialize: boolean;\n    tab?: boolean;\n    expertMode: boolean;\n    jsonConfig: boolean;\n    socket: AdminConnection;\n    themeName: ThemeName;\n    themeType: ThemeType;\n    t: Translate;\n    isFloatComma: boolean;\n    dateFormat: string;\n    style: Record<string, React.CSSProperties>;\n    icon: string;\n    lang: ioBroker.Languages;\n    easyMode?: boolean;\n    adminInstance: string;\n    onRegisterIframeRef: (ref: HTMLIFrameElement) => void;\n    onUnregisterIframeRef: (ref: HTMLIFrameElement) => void;\n    configStored: (allStored: boolean) => void;\n    theme: IobTheme;\n    width: 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n    version?: string;\n    handleNavigation: (tab: string, subTab?: string, param?: string) => void;\n}\n\ninterface ConfigState {\n    checkedExist: boolean | string;\n    showStopAdminDialog: boolean;\n    running: boolean;\n    canStart: boolean;\n    alive: boolean;\n    connected: boolean | null;\n    connectedToHost: boolean;\n    logOnTheFlyValue: boolean;\n    logLevel: ioBroker.LogLevel;\n    logLevelValue: ioBroker.LogLevel;\n    tempLogLevel: ioBroker.LogLevel;\n    common?: Record<string, any>;\n    native?: Record<string, any>;\n    adapterDocLangs?: ioBroker.Languages[];\n    extension?: boolean | null;\n    showLogLevelDialog: boolean;\n}\n\nclass Config extends Component<ConfigProps, ConfigState> {\n    private refIframe: HTMLIFrameElement | null;\n\n    private registered: boolean;\n\n    constructor(props: ConfigProps) {\n        super(props);\n\n        this.state = {\n            checkedExist: false,\n            showStopAdminDialog: false,\n            running: false,\n            canStart: false,\n            alive: false,\n            connected: false,\n            connectedToHost: false,\n            logOnTheFlyValue: false,\n            logLevel: 'info',\n            logLevelValue: 'info',\n            tempLogLevel: 'info',\n            showLogLevelDialog: false,\n        };\n\n        this.refIframe = null;\n        this.registered = false;\n    }\n\n    componentDidUpdate(/* prevProps, prevState, snapshot */): void {\n        if (!this.registered && this.refIframe?.contentWindow) {\n            this.registered = true;\n            this.props.onRegisterIframeRef(this.refIframe);\n        }\n    }\n\n    componentDidMount(): void {\n        // receive messages from IFRAME\n        if (this.props.tab) {\n            void this.props.socket.fileExists(`${this.props.adapter}.admin`, 'tab.html').then(exist => {\n                if (exist) {\n                    this.setState({ checkedExist: 'tab.html' });\n                } else {\n                    return this.props.socket\n                        .fileExists(`${this.props.adapter}.admin`, 'tab_m.html')\n                        .then(exists =>\n                            exists\n                                ? this.setState({ checkedExist: 'tab_m.html' })\n                                : window.alert('Cannot find tab(_m).html'),\n                        );\n                }\n            });\n        } else {\n            // this.props.socket.getState('system.adapter.' + this.props.adapter + '.' + this.props.instance + '.')\n            const instanceId = `system.adapter.${this.props.adapter}.${this.props.instance}`;\n            void this.props.socket.subscribeObject(instanceId, this.onObjectChange);\n            this.props.socket\n                .getObject(instanceId)\n                .then(async obj => {\n                    const tempLogLevel = await this.props.socket.getState(`${instanceId}.logLevel`);\n                    await this.props.socket.subscribeState(`${instanceId}.logLevel`, this.onStateChange);\n\n                    const alive = await this.props.socket.getState(`${instanceId}.alive`);\n                    await this.props.socket.subscribeState(`${instanceId}.alive`, this.onStateChange);\n\n                    const connectedToHost = await this.props.socket.getState(`${instanceId}.connected`);\n                    await this.props.socket.subscribeState(`${instanceId}.connected`, this.onStateChange);\n\n                    let connected;\n                    try {\n                        connected = await this.props.socket.getState(\n                            `${this.props.adapter}.${this.props.instance}.info.connection`,\n                        );\n                        void this.props.socket.subscribeState(\n                            `${this.props.adapter}.${this.props.instance}.info.connection`,\n                            this.onStateChange,\n                        );\n                    } catch {\n                        // ignore\n                        connected = null;\n                    }\n\n                    let extension;\n                    try {\n                        extension = await this.props.socket.getState(\n                            `${this.props.adapter}.${this.props.instance}.info.extension`,\n                        );\n                        void this.props.socket.subscribeState(\n                            `${this.props.adapter}.${this.props.instance}.info.extension`,\n                            this.onStateChange,\n                        );\n                    } catch {\n                        // ignore\n                        extension = null;\n                    }\n\n                    this.setState({\n                        checkedExist: true,\n                        running: obj?.common?.onlyWWW || obj?.common?.enabled,\n                        canStart: !obj?.common?.onlyWWW,\n                        alive: !!alive?.val,\n                        extension: extension ? !!extension?.val : null,\n                        connectedToHost: !!connectedToHost?.val,\n                        connected: connected ? !!connected.val : null,\n                        logLevel: obj?.common?.loglevel || 'info',\n                        logLevelValue: obj?.common?.loglevel || 'info',\n                        tempLogLevel: tempLogLevel?.val || obj?.common?.loglevel || 'info',\n                        common: obj?.common || {},\n                        native: obj?.native || {},\n                        adapterDocLangs: obj?.common?.docs\n                            ? (Object.keys(obj.common.docs) as ioBroker.Languages[])\n                            : ['en'],\n                    });\n                })\n                .catch(error => {\n                    console.error(error);\n                    this.setState({ checkedExist: true, running: false });\n                });\n        }\n\n        if (!this.registered && this.refIframe?.contentWindow) {\n            this.registered = true;\n            this.props.onRegisterIframeRef(this.refIframe);\n        }\n\n        (window.addEventListener || window.attachEvent)(\n            window.addEventListener ? 'message' : 'onmessage',\n            this.closeConfig,\n            false,\n        );\n    }\n\n    onObjectChange = (id: string, obj: ioBroker.InstanceObject | null): void => {\n        if (id === `system.adapter.${this.props.adapter}.${this.props.instance}`) {\n            this.setState({\n                running: obj?.common?.onlyWWW || obj?.common?.enabled,\n                canStart: !obj?.common?.onlyWWW,\n                logLevel: obj?.common?.loglevel || 'info',\n            });\n        }\n    };\n\n    // returns:\n    // grey   - daemon / disabled\n    // green  - daemon / run,connected,alive\n    // blue   - schedule\n    // orangeDevice - daemon / run, connected to controller, not connected to device\n    // orange - daemon / run,not connected\n    // red    - daemon / not run, not connected\n    getInstanceStatus(): string {\n        const mode = this.state.common?.mode || '';\n        let status = mode === 'daemon' ? 'green' : 'blue';\n\n        if (\n            this.state.common?.enabled &&\n            (!this.state.common.webExtension || !this.state.native?.webInstance || mode === 'daemon')\n        ) {\n            if (this.state.common.webExtension && this.state.native?.webInstance) {\n                if (this.state.extension !== null) {\n                    return this.state.extension ? 'green' : 'red';\n                }\n            }\n\n            if (!this.state.connectedToHost || !this.state.alive) {\n                status = mode === 'daemon' ? 'red' : 'orangeDevice';\n            }\n            if (this.state.connected !== null && !this.state.connected && status !== 'red') {\n                status = 'orange';\n            }\n        } else {\n            status = mode === 'daemon' ? 'grey' : 'blue';\n        }\n\n        return status;\n    }\n\n    onStateChange = (id: string, state?: ioBroker.State | null): void => {\n        const instanceId = `system.adapter.${this.props.adapter}.${this.props.instance}`;\n        if (id === `${instanceId}.alive`) {\n            this.setState({ alive: !!state?.val });\n        } else if (id === `${instanceId}.connected`) {\n            this.setState({ connectedToHost: !!state?.val });\n        } else if (id === `${this.props.adapter}.${this.props.instance}.info.connection`) {\n            this.setState({ connected: state ? !!state.val : null });\n        } else if (id === `${this.props.adapter}.${this.props.instance}.info.extension`) {\n            this.setState({ extension: state ? !!state.val : null });\n        } else if (id === `${instanceId}.logLevel`) {\n            this.setState({ tempLogLevel: state ? (state.val as ioBroker.LogLevel) : null });\n        }\n    };\n\n    componentWillUnmount(): void {\n        void this.props.socket.unsubscribeObject(\n            `system.adapter.${this.props.adapter}.${this.props.instance}`,\n            this.onObjectChange,\n        );\n\n        (window.removeEventListener || window.detachEvent)(\n            window.removeEventListener ? 'message' : 'onmessage',\n            this.closeConfig,\n            false,\n        );\n\n        if (this.registered && this.refIframe) {\n            this.props.onUnregisterIframeRef(this.refIframe);\n        }\n        this.refIframe = null;\n    }\n\n    closeConfig = (event: MessageEvent & { message: string }): void => {\n        if (event.origin !== window.location.origin) {\n            return;\n        }\n\n        if (event.data === 'close' || event.message === 'close') {\n            if (this.props.easyMode) {\n                this.props.handleNavigation('easy');\n            } else {\n                this.props.handleNavigation('tab-instances');\n            }\n        } else if (event.data === 'change' || event.message === 'change') {\n            this.props.configStored(false);\n        } else if (event.data === 'nochange' || event.message === 'nochange') {\n            this.props.configStored(true);\n        } else if (\n            (typeof event.data === 'string' && event.data.startsWith('goto:')) ||\n            (typeof event.message === 'string' && event.message.startsWith('goto:'))\n        ) {\n            const [, url] = (event.data || event.message).split(':');\n            const [tab, subTab, parameter] = url.split('/');\n            this.props.handleNavigation(tab, subTab, parameter);\n        }\n    };\n\n    renderHelpButton(): JSX.Element | null {\n        if (this.props.jsonConfig) {\n            return (\n                <div\n                    style={{\n                        display: 'inline-block',\n                        position: 'absolute',\n                        right: 0,\n                        top: 5,\n                    }}\n                >\n                    <Tooltip\n                        title={this.props.t('Show help for this adapter')}\n                        slotProps={{ popper: { sx: styles.tooltip } }}\n                    >\n                        <Fab\n                            sx={{ '&.MuiFab-root': styles.button }}\n                            onClick={() => {\n                                const lang = this.state.adapterDocLangs?.includes(this.props.lang)\n                                    ? this.props.lang\n                                    : 'en';\n                                window.open(\n                                    AdminUtils.getDocsLinkForAdapter({ lang, adapterName: this.props.adapter }),\n                                    'help',\n                                );\n                            }}\n                        >\n                            <HelpIcon />\n                        </Fab>\n                    </Tooltip>\n                </div>\n            );\n        }\n        return null;\n    }\n\n    getConfigurator(): JSX.Element | null {\n        if (this.props.jsonConfig) {\n            return (\n                <JsonConfig\n                    expertMode={this.props.expertMode}\n                    theme={this.props.theme}\n                    width={this.props.width}\n                    adapterName={this.props.adapter}\n                    instance={this.props.instance}\n                    socket={this.props.socket}\n                    themeName={this.props.themeName}\n                    themeType={this.props.themeType}\n                    dateFormat={this.props.dateFormat}\n                    isFloatComma={this.props.isFloatComma}\n                    configStored={this.props.configStored}\n                    t={this.props.t}\n                    DeviceManager={DeviceManager as unknown as React.FC<DeviceManagerPropsProps>}\n                />\n            );\n        }\n        const src =\n            `adapter/${this.props.adapter}/` +\n            `${this.props.tab ? this.state.checkedExist : this.props.materialize ? 'index_m.html' : 'index.html'}?` +\n            `${this.props.instance || 0}&newReact=true&${this.props.instance || 0}&react=${this.props.themeName}`;\n\n        if (this.state.checkedExist) {\n            return (\n                <iframe\n                    ref={el => this && (this.refIframe = el)}\n                    title=\"config\"\n                    style={this.props.style}\n                    src={src}\n                ></iframe>\n            );\n        }\n        return null;\n    }\n\n    returnStopAdminDialog(): JSX.Element | null {\n        return this.state.showStopAdminDialog ? (\n            <DialogConfirm\n                title={this.props.t('Please confirm')}\n                text={this.props.t('stop_admin', this.props.instance)}\n                ok={this.props.t('Stop admin')}\n                onClose={result => {\n                    if (result) {\n                        this.props.socket\n                            .extendObject(`system.adapter.${this.props.adapter}.${this.props.instance}`, {\n                                common: { enabled: false },\n                            })\n                            .catch(error => window.alert(error));\n                    }\n                    this.setState({ showStopAdminDialog: false });\n                }}\n            />\n        ) : null;\n    }\n\n    renderLogLevelDialog(): JSX.Element | null {\n        if (!this.state.showLogLevelDialog) {\n            return null;\n        }\n        return (\n            <Dialog\n                open={!0}\n                onClose={() => this.setState({ showLogLevelDialog: false })}\n            >\n                <DialogTitle>\n                    {this.props.t('Edit log level rule for %s', `${this.props.adapter}.${this.props.instance}`)}\n                </DialogTitle>\n                <DialogContent>\n                    <FormControl\n                        style={{ ...styles.formControl, marginTop: 10 }}\n                        variant=\"outlined\"\n                    >\n                        <InputLabel>{this.props.t('log level')}</InputLabel>\n                        <Select\n                            variant=\"standard\"\n                            value={this.state.logLevelValue}\n                            fullWidth\n                            onChange={el => this.setState({ logLevelValue: el.target.value as ioBroker.LogLevel })}\n                        >\n                            {arrayLogLevel.map(el => (\n                                <MenuItem\n                                    key={el}\n                                    value={el}\n                                >\n                                    {this.props.t(el)}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                    <FormControl\n                        style={styles.formControl}\n                        variant=\"outlined\"\n                    >\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={this.state.logOnTheFlyValue}\n                                    onChange={e => this.setState({ logOnTheFlyValue: e.target.checked })}\n                                />\n                            }\n                            label={this.props.t('Without restart')}\n                        />\n                        <FormHelperText>\n                            {this.state.logOnTheFlyValue\n                                ? this.props.t('Will be reset to the saved log level after restart of adapter')\n                                : this.props.t('Log level will be saved permanently')}\n                        </FormHelperText>\n                    </FormControl>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={() => {\n                            if (this.state.logOnTheFlyValue) {\n                                void this.props.socket.setState(\n                                    `system.adapter.${this.props.adapter}.${this.props.instance}.logLevel`,\n                                    this.state.logLevelValue,\n                                );\n                            } else {\n                                this.props.socket\n                                    .extendObject(`system.adapter.${this.props.adapter}.${this.props.instance}`, {\n                                        common: { loglevel: this.state.logLevelValue },\n                                    })\n                                    .catch(error => window.alert(`Cannot set log level: ${error}`));\n                            }\n                            this.setState({ showLogLevelDialog: false });\n                        }}\n                    >\n                        {this.props.t('Ok')}\n                    </Button>\n                    <Button\n                        color=\"grey\"\n                        variant=\"contained\"\n                        onClick={() => this.setState({ showLogLevelDialog: false })}\n                    >\n                        {this.props.t('Cancel')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n\n    render(): JSX.Element {\n        return (\n            <Paper style={styles.root}>\n                <AppBar\n                    color=\"default\"\n                    position=\"static\"\n                >\n                    <Toolbar\n                        variant=\"dense\"\n                        style={{ marginLeft: 8 }}\n                    >\n                        <Typography\n                            variant=\"h6\"\n                            color=\"inherit\"\n                        >\n                            <IconButton\n                                size=\"small\"\n                                onClick={() => {\n                                    if (this.props.easyMode) {\n                                        this.props.handleNavigation('easy');\n                                    } else {\n                                        this.props.handleNavigation('tab-instances');\n                                    }\n                                }}\n                                onFocus={event => event.stopPropagation()}\n                                style={{\n                                    marginRight: 10,\n                                }}\n                            >\n                                <ArrowBack />\n                            </IconButton>\n                            {this.props.jsonConfig ? (\n                                <Icon\n                                    src={this.props.icon}\n                                    style={styles.instanceIcon}\n                                />\n                            ) : null}\n                            {`${this.props.t('Instance settings')}: ${this.props.adapter}.${this.props.instance}`}\n                            {this.props.version ? (\n                                <span\n                                    style={{\n                                        ...styles.version,\n                                        ...styles[this.getInstanceStatus()],\n                                    }}\n                                >\n                                    v{this.props.version}\n                                </span>\n                            ) : null}\n                            <Tooltip\n                                title={this.props.t('Start/stop')}\n                                slotProps={{ popper: { sx: styles.tooltip } }}\n                            >\n                                <span>\n                                    <IconButton\n                                        size=\"small\"\n                                        onClick={event => {\n                                            event.stopPropagation();\n                                            event.preventDefault();\n                                            if (\n                                                this.state.running &&\n                                                `${this.props.adapter}.${this.props.instance}` ===\n                                                    this.props.adminInstance\n                                            ) {\n                                                this.setState({ showStopAdminDialog: true });\n                                            } else {\n                                                this.props.socket\n                                                    .extendObject(\n                                                        `system.adapter.${this.props.adapter}.${this.props.instance}`,\n                                                        { common: { enabled: !this.state.running } },\n                                                    )\n                                                    .catch(error => window.alert(`Cannot set log level: ${error}`));\n                                            }\n                                        }}\n                                        onFocus={event => event.stopPropagation()}\n                                        sx={{\n                                            ...styles.buttonControl,\n                                            ...(this.state.canStart\n                                                ? this.state.running\n                                                    ? styles.enabled\n                                                    : styles.disabled\n                                                : styles.hide),\n                                        }}\n                                    >\n                                        {this.state.running ? <PauseIcon /> : <PlayArrowIcon />}\n                                    </IconButton>\n                                </span>\n                            </Tooltip>\n                            <Tooltip\n                                title={this.props.t('Restart')}\n                                slotProps={{ popper: { sx: styles.tooltip } }}\n                            >\n                                <span>\n                                    <IconButton\n                                        size=\"small\"\n                                        onClick={event => {\n                                            event.stopPropagation();\n                                            this.props.socket\n                                                .extendObject(\n                                                    `system.adapter.${this.props.adapter}.${this.props.instance}`,\n                                                    {},\n                                                )\n                                                .catch(error => window.alert(`Cannot set log level: ${error}`));\n                                        }}\n                                        onFocus={event => event.stopPropagation()}\n                                        style={{\n                                            ...styles.buttonControl,\n                                            ...(!this.state.canStart ? styles.hide : undefined),\n                                        }}\n                                        disabled={!this.state.running}\n                                    >\n                                        <RefreshIcon />\n                                    </IconButton>\n                                </span>\n                            </Tooltip>\n                            {this.state.tempLogLevel !== this.state.logLevel ? (\n                                <Tooltip\n                                    title={this.props.t('temporary log level')}\n                                    slotProps={{ popper: { sx: styles.tooltip } }}\n                                >\n                                    <span style={styles.logLevel}>{this.state.tempLogLevel}</span>\n                                </Tooltip>\n                            ) : null}\n                            <Tooltip\n                                title={this.props.t('log level')}\n                                slotProps={{ popper: { sx: styles.tooltip } }}\n                            >\n                                <span style={styles.logLevel}>\n                                    {this.state.tempLogLevel !== this.state.logLevel\n                                        ? `/ ${this.state.logLevel}`\n                                        : this.state.logLevel}\n                                </span>\n                            </Tooltip>\n                            <Tooltip\n                                title={this.props.t(\n                                    'Edit log level rule for %s',\n                                    `${this.props.adapter}.${this.props.instance}`,\n                                )}\n                            >\n                                <IconButton\n                                    size=\"small\"\n                                    onClick={event => {\n                                        event.stopPropagation();\n                                        this.setState({ showLogLevelDialog: true });\n                                    }}\n                                    onFocus={event => event.stopPropagation()}\n                                    style={{\n                                        ...styles.buttonControl,\n                                        ...(!this.state.canStart ? styles.hide : undefined),\n                                        width: 34,\n                                        height: 34,\n                                    }}\n                                >\n                                    <EditIcon style={{ width: 20, height: 20 }} />\n                                </IconButton>\n                            </Tooltip>\n                            {/* <IsVisible config={item} name=\"allowInstanceLink\">\n                            <Tooltip title={this.props.t('Instance link %s', this.props.instanceItem?.id)}>\n                                <span>\n                                    <IconButton\n                                        size=\"small\"\n                                        className={Utils.clsx(classes.buttonControl, (!this.props.instanceItem?.links || !this.props.instanceItem?.links[0]) && classes.hide)}\n                                        disabled={!this.state.running}\n                                        onClick={event => {\n                                            event.stopPropagation();\n                                            if (this.props.instanceItem?.links.length === 1) {\n                                                // replace IPv6 Address with [ipv6]:port\n                                                let url = this.props.instanceItem?.links[0].link;\n                                                url = url.replace(/\\/\\/([0-9a-f]*:[0-9a-f]*:[0-9a-f]*:[0-9a-f]*:[0-9a-f]*:[0-9a-f]*)(:\\d+)?\\//i, '//[$1]$2/');\n                                                window.open(url, this.props.instanceItem?.id);\n                                            } else {\n                                                setShowLinks(true);\n                                            }\n                                        }}\n                                        onFocus={event => event.stopPropagation()}\n                                    >\n                                        <InputIcon />\n                                    </IconButton>\n                                </div>\n                            </Tooltip>\n                        </IsVisible> */}\n                        </Typography>\n                        {this.renderHelpButton()}\n                    </Toolbar>\n                </AppBar>\n                {this.getConfigurator()}\n                {this.returnStopAdminDialog()}\n                {this.renderLogLevelDialog()}\n            </Paper>\n        );\n    }\n}\n\nexport default Config;\n","import React, { type JSX } from 'react';\nimport { Grid2, Tooltip, Typography } from '@mui/material';\n\nconst styles: Record<string, React.CSSProperties> = {\n    nowrap: {\n        flexFlow: 'nowrap',\n        overflow: 'hidden',\n    },\n    width: {\n        width: '100%',\n        overflow: 'hidden',\n    },\n    tooltip: {\n        pointerEvents: 'none',\n    },\n};\n\ninterface InstanceInfoProps {\n    children: (JSX.Element | string)[] | JSX.Element | string;\n    icon?: JSX.Element;\n    tooltip?: string;\n    style?: React.CSSProperties;\n}\n\nconst InstanceInfo = (props: InstanceInfoProps): JSX.Element => (\n    <Grid2\n        container\n        title={props.icon ? '' : props.tooltip || ''}\n        alignItems=\"center\"\n        direction=\"row\"\n        spacing={1}\n        style={styles.nowrap}\n    >\n        {props.icon && (\n            <Grid2 style={{ minWidth: 24 }}>\n                <Tooltip\n                    title={props.tooltip || ''}\n                    slotProps={{ popper: { sx: styles.tooltip } }}\n                >\n                    {props.icon}\n                </Tooltip>\n            </Grid2>\n        )}\n        <Grid2 style={styles.width}>\n            <Tooltip\n                title={props.tooltip || ''}\n                slotProps={{ popper: { sx: styles.tooltip } }}\n            >\n                <Typography\n                    component=\"div\"\n                    style={props.style}\n                >\n                    {props.children}\n                </Typography>\n            </Tooltip>\n        </Grid2>\n    </Grid2>\n);\n\nexport default InstanceInfo;\n","var _path, _line, _line2;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgSentryNo(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 256,\n    height: 230,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M251.22 187.856c5.785 10.045 6.345 20.608 1.538 28.958-4.8 8.357-14.192 13.143-25.768 13.143h-21.816c.259-4.068.431-8.17.431-12.302 0-4.628-.215-9.198-.531-13.754l14.35-.014c3.528 0 6.38-2.867 6.38-6.403a6.46 6.46 0 0 0-.768-3.053l-91.46-158.97a6.349 6.349 0 0 0-5.54-3.24 6.374 6.374 0 0 0-5.461 3.09l-14.522 25.243c44.134 33.27 73.804 84.813 77.864 143.333.316 4.548.531 9.119.531 13.753 0 4.132-.172 8.228-.424 12.302h-71.246c.388-4.053.611-8.148.611-12.302 0-4.649-.273-9.233-.776-13.753-3.52-32.206-19.286-60.748-42.503-80.89l-10.003 17.376c17.54 16.325 29.512 38.558 32.767 63.514.59 4.505.92 9.09.92 13.753 0 4.154-.273 8.264-.74 12.302H29.01c-11.576 0-20.968-4.793-25.768-13.15-4.807-8.35-4.247-18.905 1.538-28.958l13.56-23.238a79.42 79.42 0 0 1 20.715 16.052l-8.083 13.768a6.523 6.523 0 0 0-.77 3.054 6.383 6.383 0 0 0 6.382 6.395l32.033.015c-2.687-15.356-9.772-29.21-19.918-40.183-5.979-6.445-12.963-11.9-20.738-16.074l35.77-62.15a151.427 151.427 0 0 1 21.564 14.624c30.827 25.013 51.644 61.955 55.416 103.776h19.172c-3.91-48.892-28.477-92.006-64.937-120.548a171.205 171.205 0 0 0-21.672-14.457l30.532-53.045C109.583 5.77 118.42 0 128.036 0c9.607 0 18.438 5.77 24.223 15.823l98.961 172.033z\",\n    fill: \"#FB2D26\"\n  })), _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    strokeWidth: 33,\n    y2: 223,\n    x2: 250.40002,\n    y1: 8,\n    x1: 6.40002,\n    stroke: \"#FB2D26\",\n    fill: \"none\"\n  })), _line2 || (_line2 = /*#__PURE__*/React.createElement(\"line\", {\n    strokeWidth: 32,\n    y2: 224,\n    x2: 8.40002,\n    y1: 7,\n    x1: 247.40002,\n    stroke: \"#FB2D26\",\n    fill: \"none\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSentryNo);\nexport default __webpack_public_path__ + \"static/media/sentryNo.40627b40a3bc6107ca445e9a6cec8601.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Component, type JSX } from 'react';\n\nimport { List, ListItemButton, ListItemText, DialogTitle, Dialog, ListItemAvatar, Avatar } from '@mui/material';\n\nimport { I18n, type ThemeType, type Translate, Utils } from '@iobroker/adapter-react-v5';\n\nimport AdminUtils from '../../helpers/AdminUtils';\n\nconst styles: Record<string, React.CSSProperties> = {\n    img: {\n        width: '100%',\n        height: '100%',\n    },\n};\n\nexport interface InstanceLink {\n    name?: ioBroker.StringOrTranslated;\n    link: string;\n    port?: number;\n    color?: string;\n}\n\ninterface LinksDialogProps {\n    links: InstanceLink[];\n    onClose: () => void;\n    t: Translate;\n    instanceId: string;\n    image: string;\n    themeType: ThemeType;\n}\n\nclass LinksDialog extends Component<LinksDialogProps> {\n    render(): JSX.Element {\n        if (!this.props.links || !this.props.links.length) {\n            return null;\n        }\n        const firstPort = this.props.links[0].port;\n        const showPort = this.props.links.find(item => item.port !== firstPort);\n\n        return (\n            <Dialog\n                onClose={() => this.props.onClose()}\n                open={!0}\n            >\n                <DialogTitle style={{ padding: '8px 0 0 0', textAlign: 'center' }}>{this.props.t('Links')}</DialogTitle>\n                <List>\n                    {this.props.links.map(link => (\n                        <ListItemButton\n                            style={\n                                link.color\n                                    ? {\n                                          backgroundColor: link.color,\n                                          color: Utils.getInvertedColor(link.color, this.props.themeType, true),\n                                      }\n                                    : {}\n                            }\n                            onClick={e => {\n                                e.stopPropagation();\n                                // replace IPv6 Address with [ipv6]:port\n                                let url = link.link;\n                                url = url.replace(\n                                    /\\/\\/([0-9a-f]*:[0-9a-f]*:[0-9a-f]*:[0-9a-f]*:[0-9a-f]*:[0-9a-f]*)(:\\d+)?\\//i,\n                                    '//[$1]$2/',\n                                );\n                                window.open(url, this.props.instanceId);\n                                this.props.onClose();\n                            }}\n                            key={AdminUtils.getText(link.name, I18n.getLanguage())}\n                        >\n                            <ListItemAvatar>\n                                <Avatar variant=\"rounded\">\n                                    <img\n                                        style={styles.img}\n                                        src={this.props.image}\n                                        alt={this.props.instanceId}\n                                    />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={\n                                    AdminUtils.getText(link.name, I18n.getLanguage()) +\n                                    (showPort ? ` [:${link.port}]` : '')\n                                }\n                            />\n                        </ListItemButton>\n                    ))}\n                </List>\n            </Dialog>\n        );\n    }\n}\n\nexport default LinksDialog;\n","import React, { Component, type JSX } from 'react';\nimport cronstrue from 'cronstrue';\nimport parser from 'cron-parser';\n\nimport 'cronstrue/locales/en';\nimport 'cronstrue/locales/de';\nimport 'cronstrue/locales/es';\nimport 'cronstrue/locales/fr';\nimport 'cronstrue/locales/it';\nimport 'cronstrue/locales/nl';\nimport 'cronstrue/locales/pl';\nimport 'cronstrue/locales/pt_BR';\nimport 'cronstrue/locales/ru';\nimport 'cronstrue/locales/uk';\nimport 'cronstrue/locales/zh_CN';\n\nimport {\n    Button,\n    CardMedia,\n    Checkbox,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    FormControl,\n    FormControlLabel,\n    FormHelperText,\n    IconButton,\n    InputLabel,\n    MenuItem,\n    Select,\n    Tooltip,\n} from '@mui/material';\n\nimport {\n    Delete as DeleteIcon,\n    Close as CloseIcon,\n    Warning as WarningIcon,\n    Settings as SettingsIcon,\n    Schedule as ScheduleIcon,\n    Memory as MemoryIcon,\n    Pause as PauseIcon,\n    PlayArrow as PlayArrowIcon,\n    Build as BuildIcon,\n    Refresh as RefreshIcon,\n    Input as InputIcon,\n    Edit as EditIcon,\n    ImportExport as ImportExportIcon,\n    ViewCompact as ViewCompactIcon,\n    LowPriority as LowPriorityIcon,\n    Storage as HostIcon,\n} from '@mui/icons-material';\n\nimport {\n    DialogConfirm,\n    SelectWithIcon,\n    DialogComplexCron,\n    type AdminConnection,\n    TextWithIcon,\n    Router,\n    type IobTheme,\n    type ThemeType,\n    type Translate,\n} from '@iobroker/adapter-react-v5';\nimport { amber, blue, green, grey, orange, red } from '@mui/material/colors';\n\nimport State from '@/components/State';\nimport InstanceInfo from '@/components/Instances/InstanceInfo';\nimport sentry from '@/assets/sentry.svg';\nimport noSentry from '@/assets/sentryNo.svg';\nimport CustomModal from '../CustomModal';\nimport LinksDialog, { type InstanceLink } from './LinksDialog';\nimport AdminUtils from '../../helpers/AdminUtils';\n\nconst arrayLogLevel = ['silly', 'debug', 'info', 'warn', 'error'];\nexport const arrayTier = [\n    { value: 1, desc: '1: Logic adapters' },\n    { value: 2, desc: '2: Data provider adapters' },\n    { value: 3, desc: '3: Other adapters' },\n];\n\nconst boxShadow = '0 2px 2px 0 rgba(0, 0, 0, .14),0 3px 1px -2px rgba(0, 0, 0, .12),0 1px 5px 0 rgba(0, 0, 0, .2)';\nconst boxShadowHover = '0 8px 17px 0 rgba(0, 0, 0, .2),0 6px 20px 0 rgba(0, 0, 0, .19)';\n\nexport const styles: Record<string, any> = {\n    root: (theme: IobTheme) => ({\n        position: 'relative',\n        m: '10px',\n        width: 300,\n        minHeight: 200,\n        background: theme.palette.background.default,\n        boxShadow,\n        display: 'flex',\n        flexDirection: 'column',\n        transition: 'box-shadow 0.5s',\n        '&:hover': {\n            boxShadow: boxShadowHover,\n        },\n    }),\n    imageBlock: {\n        background: 'silver',\n        minHeight: 60,\n        display: 'flex',\n        padding: '0 10px 0 10px',\n        position: 'relative',\n        justifyContent: 'space-between',\n        transition: 'background 0.5s',\n    },\n    logLevel: {\n        width: '100%',\n        marginBottom: 5,\n    },\n    hostInfo: {\n        width: '100%',\n    },\n    addCompact: {\n        width: '100%',\n        marginBottom: 5,\n    },\n    selectStyle: {\n        display: 'flex',\n        margin: 5,\n        justifyContent: 'space-around',\n    },\n    hide: {\n        visibility: 'hidden',\n    },\n    tooltip: {\n        pointerEvents: 'none',\n    },\n    deleting: {\n        position: 'relative',\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            zIndex: 100,\n            opacity: '.3 !important',\n            background: 'repeating-linear-gradient(135deg, #333, #333 10px, #888 10px, #888 20px)',\n        },\n    },\n    enabled: {\n        color: green[400],\n        '&:hover': {\n            backgroundColor: green[200],\n        },\n    },\n    disabled: {\n        color: red[400],\n        '&:hover': {\n            backgroundColor: red[200],\n        },\n    },\n    sentry: {\n        width: 24,\n        height: 24,\n        objectFit: 'fill',\n        filter: 'invert(0%) sepia(90%) saturate(1267%) hue-rotate(-260deg) brightness(99%) contrast(97%)',\n    },\n    displayFlex: {\n        display: 'flex',\n    },\n    marginLeft5: {\n        marginLeft: 5,\n    },\n    marginRight5: {\n        marginRight: 5,\n    },\n    instanceStateNotEnabled1: {\n        backgroundColor: 'rgba(192, 192, 192, 0.2)',\n    },\n    instanceStateNotEnabled2: {\n        backgroundColor: 'rgba(192, 192, 192, 0.15)',\n    },\n    instanceStateNotAlive1: {\n        backgroundColor: 'rgba(255,14,14,0.2)',\n    },\n    instanceStateNotAlive2: {\n        backgroundColor: 'rgba(255,14,14, 0.15)',\n    },\n    instanceStateAliveNotConnected1: {\n        backgroundColor: 'rgba(255, 177, 0, 0.1)',\n    },\n    instanceStateAliveNotConnected2: {\n        backgroundColor: 'rgba(255, 177, 0, 0.15)',\n    },\n    instanceStateAliveAndConnected1: {\n        backgroundColor: 'rgba(0, 255, 0, 0.1)',\n    },\n    instanceStateAliveAndConnected2: {\n        backgroundColor: 'rgba(0, 255, 0, 0.15)',\n    },\n    statusIcon_green: {\n        // square\n        border: '2px solid grey',\n        borderRadius: 2,\n    },\n    statusIcon_red: {\n        // circle\n        border: '2px solid grey',\n        borderRadius: 20,\n    },\n    statusIcon_orange: {\n        // triangle\n        border: 0,\n        borderRadius: 0,\n    },\n    statusIcon_orangeDevice: {\n        // triangle\n        border: 0,\n        borderRadius: 0,\n    },\n    statusIcon_blue: {\n        // watch\n        border: '2px solid grey',\n        borderRadius: 20,\n    },\n    statusIcon_grey: {\n        // circle ?\n        border: '2px solid grey',\n        borderRadius: 20,\n    },\n    orangeDevice: {\n        // backgroundColor: orange[700]\n        color: orange[300],\n    },\n    button: {\n        // used in sx too and in this.styles\n        padding: '5px',\n        transition: 'opacity 0.2s',\n        height: 34,\n    },\n    hiddenOpacity: {\n        opacity: 0,\n        cursor: 'default',\n    },\n    smallAvatar: {\n        width: 24,\n        height: 24,\n    },\n    statusIndicator: {\n        marginLeft: 8,\n    },\n    green: {\n        // backgroundColor: green[700]\n        color: green[700],\n    },\n    red: {\n        // backgroundColor: red[700]\n        color: red[700],\n    },\n    grey: {\n        // backgroundColor: grey[700]\n        color: grey[700],\n    },\n    blue: {\n        // backgroundColor: blue[700]\n        color: '#0055a9', // blue[700]\n    },\n    orange: {\n        // backgroundColor: orange[700]\n        color: orange[400],\n    },\n\n    transparent: {\n        color: 'transparent',\n        backgroundColor: 'transparent',\n    },\n    silly: {},\n    debug: {\n        backgroundColor: grey[700],\n    },\n    info: {\n        backgroundColor: blue[700],\n    },\n    warn: {\n        backgroundColor: amber[700],\n    },\n    error: {\n        backgroundColor: red[700],\n    },\n    scheduleIcon: {\n        color: '#dc8e00',\n    },\n    memoryIcon: {\n        color: '#dc8e00',\n    },\n    contrast0: {\n        filter: 'contrast(0%)',\n    },\n    hidden: {\n        display: 'none',\n    },\n    okSymbol: {\n        width: 20,\n        height: 20,\n        margin: 2,\n        borderRadius: 2,\n        // border: '2px solid #00000000',\n    },\n    okSymbolInner: {\n        width: 'calc(100% - 2px)',\n        height: 'calc(100% - 2px)',\n        borderRadius: 2,\n        margin: 1,\n        backgroundColor: '#66bb6a',\n    },\n    editButton: {\n        minHeight: 32,\n        '& .admin-edit-button': AdminUtils.isTouchDevice()\n            ? undefined\n            : {\n                  display: 'none',\n                  maxHeight: 32,\n              },\n        '&:hover': AdminUtils.isTouchDevice()\n            ? undefined\n            : {\n                  '& .admin-edit-button': {\n                      display: 'block',\n                  },\n              },\n    },\n};\n\nexport interface InstanceEntry {\n    id: string;\n    obj: ioBroker.InstanceObject;\n    host: string;\n    version: string;\n    mode: ioBroker.InstanceMode;\n    image: string;\n    canStart: boolean;\n    adapter: string;\n    config: boolean;\n    links: InstanceLink[];\n    jsonConfig: boolean;\n    materialize: boolean;\n    compactMode: boolean;\n    schedule: null | string;\n    loglevel: ioBroker.LogLevel;\n    stoppedWhenWebExtension: boolean | undefined;\n    compact: boolean;\n    name: string;\n    enabled: boolean;\n}\n\nexport type InstanceStatusType = 'green' | 'red' | 'orangeDevice' | 'orange' | 'grey' | 'blue';\n\nexport interface InstanceItem {\n    id: string; // system.adapter.accuweather.0\n    nameId: string; // accuweather.0\n    logLevel: ioBroker.LogLevel;\n    mode: string;\n    compactGroup: number | null | string;\n    tier: 1 | 2 | 3;\n    memoryLimitMB: number;\n    name: string;\n    stoppedWhenWebExtension: boolean | undefined;\n    running: boolean;\n    connected: boolean | string;\n    connectedToHost: boolean;\n    alive: boolean;\n    inputOutput: {\n        stateInput: number;\n        stateOutput: number;\n    };\n    loglevelIcon: JSX.Element;\n    logLevelObject: ioBroker.LogLevel;\n    modeSchedule: boolean;\n    checkCompact: boolean;\n    compact: boolean;\n    category: string;\n    supportCompact: boolean;\n    checkSentry: boolean;\n    sentry: boolean;\n    host: string;\n    status: InstanceStatusType;\n    allowInstanceSettings: boolean;\n    allowInstanceDelete: boolean;\n    allowInstanceLink: boolean;\n}\n\nexport interface InstanceContext {\n    adminInstance: string;\n    onDeleteInstance: (instance: InstanceEntry, deleteCustom: boolean, deleteAdapter?: boolean) => void;\n    deleteCustomSupported: boolean;\n    hosts: ioBroker.HostObject[];\n    lang: ioBroker.Languages;\n    setMaxCompactGroupNumber: (maxCompactGroupNumber: number) => void;\n    t: Translate;\n    themeType: ThemeType;\n    theme: IobTheme;\n    getInstanceStatus: (obj: ioBroker.InstanceObject) => InstanceStatusType;\n    socket: AdminConnection;\n    expertMode: boolean;\n    maxCompactGroupNumber: number;\n    states: Record<string, ioBroker.State>;\n    onToggleExpanded: (inst: string, expanded: boolean) => void;\n    onRegisterClose: (inst: string, close: (() => void) | null) => void;\n}\n\nexport interface InstanceGenericProps {\n    hidden?: boolean;\n    id: string;\n    instance: InstanceEntry;\n    deleting: boolean;\n    item: InstanceItem;\n    context: InstanceContext;\n    idx: number;\n    saveScrollPosition: () => void;\n}\n\nexport interface InstanceGenericState {\n    openSelectCompactGroup: boolean;\n\n    openDialog: boolean;\n    openDialogCron: boolean;\n    openDialogSchedule: boolean;\n    openDialogName: boolean;\n    openDialogLogLevel: boolean;\n    openDialogDelete: number | boolean;\n    openDialogMemoryLimit: boolean;\n    openDialogHost: boolean;\n    openDialogCompact: boolean;\n    openDialogTier: boolean;\n\n    showLinks: boolean;\n    showStopAdminDialog: string | false;\n    logLevel: ioBroker.LogLevel;\n    logOnTheFly: boolean;\n    compactGroup: string | number;\n    maxCompactGroupNumber: number;\n    tier: 1 | 2 | 3;\n    host: string;\n    deleteCustom: boolean;\n    visibleEdit: boolean;\n\n    expanded: boolean;\n}\n\nexport default abstract class InstanceGeneric<\n    TProps extends InstanceGenericProps,\n    TState extends InstanceGenericState,\n> extends Component<TProps, TState> {\n    protected abstract styles: Record<string, any>;\n\n    componentDidMount(): void {\n        this.props.context.onRegisterClose(this.props.id, this.commandClose);\n    }\n\n    componentWillUnmount(): void {\n        this.props.context.onRegisterClose(this.props.id, null);\n    }\n\n    // eslint-disable-next-line react/no-unused-class-component-methods,class-methods-use-this\n    getDefaultState(props: TProps): InstanceGenericState {\n        return {\n            openDialog: false,\n            openSelectCompactGroup: false,\n            openDialogCron: false,\n            openDialogSchedule: false,\n            openDialogName: false,\n            openDialogLogLevel: false,\n            openDialogDelete: false,\n            openDialogMemoryLimit: false,\n            openDialogHost: false,\n            openDialogCompact: false,\n            openDialogTier: false,\n            showLinks: false,\n            showStopAdminDialog: false,\n            logLevel: props.item.logLevel,\n            logOnTheFly: false,\n            compactGroup: props.item.compactGroup || 0,\n            maxCompactGroupNumber: props.context.maxCompactGroupNumber,\n            tier: props.item.tier,\n            host: props.instance.host,\n            deleteCustom: false,\n            visibleEdit: false,\n            expanded: false,\n        };\n    }\n\n    static isCompact(obj: ioBroker.InstanceObject | null): boolean {\n        return obj?.common?.runAsCompactMode || false;\n    }\n\n    isSentry(): boolean {\n        return !!this.props.context.states[`system.adapter.${this.props.instance.id}.plugins.sentry.enabled`]?.val;\n    }\n\n    static getSchedule(obj: ioBroker.InstanceObject | null): string {\n        return obj?.common?.schedule || '';\n    }\n\n    static isRunning(obj: ioBroker.InstanceObject): boolean {\n        return obj?.common?.onlyWWW || obj?.common?.enabled;\n    }\n\n    static isCompactGroup(obj: ioBroker.InstanceObject): number | null {\n        return obj?.common?.compactGroup || null;\n    }\n\n    static getSentrySettings(obj: ioBroker.InstanceObject): boolean {\n        return !!obj?.common?.plugins?.sentry;\n    }\n\n    static isModeSchedule(obj: ioBroker.InstanceObject): boolean {\n        return obj?.common?.mode === 'schedule';\n    }\n\n    static getMemoryLimitMB(obj: ioBroker.InstanceObject): number {\n        return obj?.common?.memoryLimitMB || 0;\n    }\n\n    static getRestartSchedule(obj: ioBroker.InstanceObject): string {\n        return obj?.common?.restartSchedule ? obj.common.restartSchedule : '';\n    }\n\n    async setCommonValue(id: string, common: Partial<ioBroker.InstanceCommon>): Promise<void> {\n        try {\n            await this.props.context.socket.extendObject(id, { common });\n        } catch (error) {\n            window.alert(error);\n        }\n    }\n\n    commandClose = (): void => this.setState({ expanded: false });\n\n    toggleSentry(): void {\n        const sentryEnabled = !this.isSentry();\n        this.props.context.socket\n            .setState(`system.adapter.${this.props.instance.id}.plugins.sentry.enabled`, sentryEnabled, true)\n            .catch(e => window.alert(`Cannot set sentry: ${e}`));\n    }\n\n    setTier(instance: InstanceEntry, tier: 1 | 2 | 3): void {\n        void this.setCommonValue(`system.adapter.${instance.id}`, { tier });\n    }\n\n    setName(instance: InstanceEntry, value: string): void {\n        void this.setCommonValue(`system.adapter.${instance.id}`, { titleLang: value });\n    }\n\n    setLogLevel(instance: InstanceEntry, loglevel: ioBroker.LogLevel, logOnTheFlyValue: boolean): void {\n        if (logOnTheFlyValue) {\n            void this.props.context.socket.setState(`system.adapter.${instance.id}.logLevel`, loglevel);\n        } else {\n            void this.setCommonValue(`system.adapter.${instance.id}`, { loglevel });\n        }\n    }\n\n    setSchedule(instance: InstanceEntry, schedule: string | null): void {\n        if (schedule) {\n            void this.setCommonValue(`system.adapter.${instance.id}`, { schedule });\n        } else {\n            this.props.context.socket\n                .getObject(`system.adapter.${instance.id}`)\n                .then(obj => {\n                    if (obj.common.schedule !== '') {\n                        obj.common.schedule = '';\n                        this.props.context.socket\n                            .setObject(obj._id, obj)\n                            .catch(e => window.alert(`Cannot set schedule: ${e}`));\n                    }\n                })\n                .catch(e => window.alert(`Cannot set schedule: ${e}`));\n        }\n    }\n\n    setMemoryLimitMB(instance: InstanceEntry, memoryLimitMB: number): void {\n        void this.setCommonValue(`system.adapter.${instance.id}`, { memoryLimitMB });\n    }\n\n    toggleCompactMode(): void {\n        void this.setCommonValue(`system.adapter.${this.props.instance.id}`, {\n            runAsCompactMode: !InstanceGeneric.isCompact(this.props.instance.obj),\n        });\n    }\n\n    setRestartSchedule(instance: InstanceEntry, restartSchedule: string): void {\n        if (restartSchedule) {\n            void this.setCommonValue(`system.adapter.${instance.id}`, { restartSchedule });\n        } else {\n            void this.props.context.socket.getObject(`system.adapter.${instance.id}`).then(obj => {\n                if (obj.common.restartSchedule !== '') {\n                    obj.common.restartSchedule = '';\n                    void this.props.context.socket.setObject(obj._id, obj);\n                }\n            });\n        }\n    }\n\n    setHost(instance: InstanceEntry, host: string): void {\n        void this.setCommonValue(`system.adapter.${instance.id}`, { host });\n    }\n\n    setCompactGroup(instance: InstanceEntry, compactGroup: string | number): void {\n        compactGroup =\n            compactGroup === 'controller' ? 0 : compactGroup === 'default' ? 1 : parseInt(compactGroup as string, 10);\n\n        void this.setCommonValue(`system.adapter.${instance.id}`, { compactGroup });\n        if (this.props.context.maxCompactGroupNumber < compactGroup) {\n            this.props.context.setMaxCompactGroupNumber(compactGroup);\n        }\n    }\n\n    getMemory(): number {\n        const state = this.props.context.states[`${this.props.id}.memRss`];\n        return (state?.val as number) || 0;\n    }\n\n    renderDeleteDialog(): JSX.Element {\n        return (\n            <Dialog\n                onClose={() => this.setState({ openDialogDelete: false, openDialog: false })}\n                open={!0}\n            >\n                <DialogTitle>{this.props.context.t('Please confirm')}</DialogTitle>\n                <DialogContent>\n                    {this.state.openDialogDelete === 1\n                        ? this.props.context.t(\n                              'Are you sure you want to delete the instance \"%s\" or whole adapter \"%s\"?',\n                              this.props.instance.id,\n                              this.props.instance.id.split('.')[0],\n                          )\n                        : this.props.context.t(\n                              'Are you sure you want to delete the instance %s?',\n                              this.props.instance.id,\n                          )}\n                    {this.props.context.deleteCustomSupported && this.props.instance.obj.common.supportCustoms && (\n                        <br />\n                    )}\n                    {this.props.context.deleteCustomSupported && this.props.instance.obj.common.supportCustoms && (\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={this.state.deleteCustom}\n                                    onChange={e => this.setState({ deleteCustom: e.target.checked })}\n                                />\n                            }\n                            label={this.props.context.t('Delete all custom object settings of this adapter too')}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    {this.state.openDialogDelete === 1 ? (\n                        <Button\n                            startIcon={<DeleteIcon />}\n                            onClick={() => {\n                                this.props.context.onDeleteInstance(this.props.instance, this.state.deleteCustom, true);\n                                this.setState({ deleteCustom: false, openDialogDelete: false, openDialog: false });\n                            }}\n                            variant=\"contained\"\n                            style={{ background: 'red', color: 'white' }}\n                        >\n                            {this.props.context.t('Delete adapter')}\n                        </Button>\n                    ) : null}\n                    <Button\n                        startIcon={<DeleteIcon />}\n                        onClick={() => {\n                            this.props.context.onDeleteInstance(this.props.instance, this.state.deleteCustom);\n                            this.setState({ deleteCustom: false, openDialogDelete: false, openDialog: false });\n                        }}\n                        variant=\"contained\"\n                        color=\"primary\"\n                    >\n                        {this.props.context.t('Delete instance')}\n                    </Button>\n                    <Button\n                        color=\"grey\"\n                        onClick={() => this.setState({ openDialogDelete: false, openDialog: false })}\n                        variant=\"contained\"\n                        startIcon={<CloseIcon />}\n                    >\n                        {this.props.context.t('Cancel')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n\n    renderEditNameDialog(): JSX.Element {\n        return (\n            <CustomModal\n                theme={this.props.context.theme}\n                title={this.props.context.t('Enter title for %s', this.props.instance.id)}\n                disableApplyIfNotChanged\n                textInput\n                defaultValue={AdminUtils.getText(this.props.item.name, this.props.context.lang)}\n                onApply={value => {\n                    this.setName(this.props.instance, value.toString());\n                    this.setState({ openDialogName: false, openDialog: false });\n                }}\n                onClose={() => this.setState({ openDialogName: false, openDialog: false })}\n            />\n        );\n    }\n\n    renderEditLogLevelDialog(): JSX.Element {\n        return (\n            <CustomModal\n                theme={this.props.context.theme}\n                title={this.props.context.t('Edit log level rule for %s', this.props.instance.id)}\n                onApply={() => {\n                    this.setLogLevel(this.props.instance, this.state.logLevel, this.state.logOnTheFly);\n                    this.setState({ openDialogLogLevel: false, openDialog: false });\n                }}\n                disableApply={this.state.logLevel === this.props.item.logLevel}\n                onClose={() =>\n                    this.setState({ openDialogLogLevel: false, logLevel: this.props.item.logLevel, openDialog: false })\n                }\n            >\n                <FormControl\n                    style={this.styles.logLevel}\n                    variant=\"standard\"\n                >\n                    <InputLabel>{this.props.context.t('log level')}</InputLabel>\n                    <Select\n                        variant=\"standard\"\n                        value={this.state.logLevel}\n                        fullWidth\n                        onChange={el => this.setState({ logLevel: el.target.value as ioBroker.LogLevel })}\n                    >\n                        {arrayLogLevel.map(el => (\n                            <MenuItem\n                                key={el}\n                                value={el}\n                            >\n                                {this.props.context.t(el)}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <FormControl variant=\"outlined\">\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={this.state.logOnTheFly}\n                                onChange={e => this.setState({ logOnTheFly: e.target.checked })}\n                            />\n                        }\n                        label={this.props.context.t('Without restart')}\n                    />\n                    <FormHelperText>\n                        {this.state.logOnTheFly\n                            ? this.props.context.t('Will be reset to the saved log level after restart of adapter')\n                            : this.props.context.t('Log level will be saved permanently')}\n                    </FormHelperText>\n                </FormControl>\n            </CustomModal>\n        );\n    }\n\n    renderEditMemoryLimitDialog(): JSX.Element {\n        return (\n            <CustomModal\n                theme={this.props.context.theme}\n                title={this.props.context.t('Edit memory limit rule for %s', this.props.instance.id)}\n                onApply={value => {\n                    this.setMemoryLimitMB(this.props.instance, parseFloat(value.toString()) || 0);\n                    this.setState({ openDialogMemoryLimit: false, openDialog: false });\n                }}\n                disableApplyIfNotChanged\n                textInput\n                defaultValue={this.props.item.memoryLimitMB}\n                help={this.props.context.t(\n                    'Default V8 has a memory limit of 512mb on 32-bit systems, and 1gb on 64-bit systems. The limit can be raised by setting --max-old-space-size to a maximum of ~1gb (32-bit) and ~1.7gb (64-bit)',\n                )}\n                onClose={() => this.setState({ openDialogMemoryLimit: false, openDialog: false })}\n            />\n        );\n    }\n\n    renderEditHostDialog(): JSX.Element {\n        return (\n            <CustomModal\n                theme={this.props.context.theme}\n                title={this.props.context.t('Edit host for %s', this.props.instance.id)}\n                onApply={() => {\n                    this.setHost(this.props.instance, this.state.host);\n                    this.setState({ openDialogHost: false, openDialog: false });\n                }}\n                disableApply={this.state.host === this.props.instance.host}\n                onClose={() =>\n                    this.setState({ openDialogHost: false, host: this.props.instance.host, openDialog: false })\n                }\n            >\n                <SelectWithIcon\n                    themeType={this.props.context.themeType}\n                    value={this.state.host}\n                    list={this.props.context.hosts}\n                    removePrefix=\"system.host.\"\n                    fullWidth\n                    style={this.styles.hostInfo}\n                    onChange={(host: string) => this.setState({ host })}\n                    lang={this.props.context.lang}\n                    t={this.props.context.t}\n                />\n            </CustomModal>\n        );\n    }\n\n    renderEditCompactGroupDialog(): JSX.Element {\n        return (\n            <CustomModal\n                theme={this.props.context.theme}\n                title={this.props.context.t('Edit compact groups for %s', this.props.instance.id)}\n                onApply={() => {\n                    this.setCompactGroup(this.props.instance, parseInt(this.state.compactGroup.toString(), 10) || 0);\n                    this.setState({ openDialogCompact: false, openDialog: false });\n                }}\n                disableApply={this.state.compactGroup === this.props.item.compactGroup}\n                onClose={() =>\n                    this.setState({\n                        openDialogCompact: false,\n                        openDialog: false,\n                        compactGroup: this.props.item.compactGroup,\n                        maxCompactGroupNumber: this.props.context.maxCompactGroupNumber,\n                    })\n                }\n            >\n                <FormControl\n                    style={this.styles.addCompact}\n                    variant=\"standard\"\n                >\n                    <InputLabel>{this.props.context.t('compact groups')}</InputLabel>\n                    <Select\n                        variant=\"standard\"\n                        autoWidth\n                        onClose={() => this.setState({ openSelectCompactGroup: false })}\n                        onOpen={() => this.setState({ openSelectCompactGroup: true })}\n                        open={this.state.openSelectCompactGroup}\n                        value={\n                            (this.state.compactGroup === 1\n                                ? 'default'\n                                : (this.state.compactGroup || '').toString() === '0'\n                                  ? 'controller'\n                                  : !this.state.compactGroup\n                                    ? 'default'\n                                    : this.state.compactGroup) || 'default'\n                        }\n                        onChange={el => this.setState({ compactGroup: parseInt(el.target.value as string, 10) })}\n                    >\n                        <div\n                            onClick={e => {\n                                e.preventDefault();\n                                e.stopPropagation();\n                            }}\n                            style={this.styles.selectStyle}\n                        >\n                            <Button\n                                color=\"grey\"\n                                onClick={() =>\n                                    this.setState({\n                                        openSelectCompactGroup: false,\n                                        compactGroup: this.state.maxCompactGroupNumber + 1,\n                                        maxCompactGroupNumber: this.state.maxCompactGroupNumber + 1,\n                                    })\n                                }\n                                variant=\"outlined\"\n                            >\n                                {this.props.context.t('Add compact group')}\n                            </Button>\n                        </div>\n                        <MenuItem value=\"controller\">{this.props.context.t('with js-controller')}</MenuItem>\n                        <MenuItem value=\"default\">{this.props.context.t('default group')}</MenuItem>\n                        {Array(this.state.maxCompactGroupNumber - 1)\n                            .fill(0)\n                            .map((_, idx) => (\n                                <MenuItem\n                                    key={idx}\n                                    value={(idx + 2).toString()}\n                                >\n                                    {idx + 2}\n                                </MenuItem>\n                            ))}\n                    </Select>\n                </FormControl>\n            </CustomModal>\n        );\n    }\n\n    renderEditTierDialog(): JSX.Element {\n        return (\n            <CustomModal\n                theme={this.props.context.theme}\n                title={this.props.context.t('Set tier for %s', this.props.instance.id)}\n                onApply={() => {\n                    this.setTier(this.props.instance, this.state.tier);\n                    this.setState({ openDialogTier: false, openDialog: false });\n                }}\n                help={this.props.context.t('Tiers define the order of adapters when the system starts.')}\n                disableApply={this.state.tier === this.props.item.tier}\n                onClose={() => this.setState({ openDialogTier: false, tier: this.props.item.tier, openDialog: false })}\n            >\n                <FormControl\n                    style={this.styles.logLevel}\n                    variant=\"standard\"\n                >\n                    <InputLabel>{this.props.context.t('Tiers')}</InputLabel>\n                    <Select\n                        variant=\"standard\"\n                        value={this.state.tier}\n                        fullWidth\n                        onChange={el => this.setState({ tier: parseInt(el.target.value as string, 10) as 1 | 2 | 3 })}\n                    >\n                        {arrayTier.map(el => (\n                            <MenuItem\n                                key={el.value}\n                                value={el.value}\n                            >\n                                {this.props.context.t(el.desc)}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n            </CustomModal>\n        );\n    }\n\n    renderStopAdminDialog(): JSX.Element | null {\n        if (!this.state.showStopAdminDialog) {\n            return null;\n        }\n\n        return (\n            <DialogConfirm\n                title={this.props.context.t('Please confirm')}\n                text={this.props.context.t('stop_admin', this.props.context.adminInstance)}\n                ok={this.props.context.t('Stop admin')}\n                onClose={result => {\n                    if (result) {\n                        void this.setCommonValue(this.state.showStopAdminDialog as string, { enabled: false });\n                    }\n                    this.setState({ showStopAdminDialog: false });\n                }}\n            />\n        );\n    }\n\n    renderLinksDialog(): JSX.Element | null {\n        if (!this.state.showLinks) {\n            return null;\n        }\n        return (\n            <LinksDialog\n                image={this.props.instance.image}\n                instanceId={this.props.instance.id}\n                links={this.props.instance.links}\n                onClose={() => this.setState({ showLinks: false, openDialog: false })}\n                t={this.props.context.t}\n                themeType={this.props.context.themeType}\n            />\n        );\n    }\n\n    renderCronDialog(): JSX.Element {\n        return (\n            <DialogComplexCron\n                title={this.props.context.t('Edit restart rule for %s', this.props.instance.id)}\n                clearButton\n                cron={InstanceGeneric.getRestartSchedule(this.props.instance.obj)}\n                onOk={(cron: string) => this.setRestartSchedule(this.props.instance, cron)}\n                onClose={() => this.setState({ openDialogCron: false, openDialog: false })}\n            />\n        );\n    }\n\n    renderScheduleDialog(): JSX.Element {\n        return (\n            <DialogComplexCron\n                title={this.props.context.t('Edit schedule rule for %s', this.props.instance.id)}\n                clearButton\n                cron={InstanceGeneric.getSchedule(this.props.instance.obj)}\n                onOk={(cron: string) => this.setSchedule(this.props.instance, cron)}\n                onClose={() => this.setState({ openDialogSchedule: false, openDialog: false })}\n            />\n        );\n    }\n\n    // eslint-disable-next-line react/no-unused-class-component-methods\n    renderDialogs(): JSX.Element | null {\n        if (!this.state.openDialog) {\n            return null;\n        }\n        if (this.state.openDialogDelete) {\n            return this.renderDeleteDialog();\n        }\n        if (this.state.openDialogHost) {\n            return this.renderEditHostDialog();\n        }\n        if (this.state.openDialogTier) {\n            return this.renderEditTierDialog();\n        }\n        if (this.state.openDialogCompact) {\n            return this.renderEditCompactGroupDialog();\n        }\n        if (this.state.openDialogLogLevel) {\n            return this.renderEditLogLevelDialog();\n        }\n        if (this.state.openDialogName) {\n            return this.renderEditNameDialog();\n        }\n        if (this.state.showStopAdminDialog) {\n            return this.renderStopAdminDialog();\n        }\n        if (this.state.openDialogCron) {\n            return this.renderCronDialog();\n        }\n        if (this.state.openDialogSchedule) {\n            return this.renderScheduleDialog();\n        }\n        if (this.state.showLinks) {\n            return this.renderLinksDialog();\n        }\n        if (this.state.openDialogMemoryLimit) {\n            return this.renderEditMemoryLimitDialog();\n        }\n        return null;\n    }\n\n    // eslint-disable-next-line react/no-unused-class-component-methods\n    renderModeIcon(status: InstanceStatusType): JSX.Element {\n        return (\n            <div\n                style={{\n                    ...this.styles.smallAvatar,\n                    ...this.styles.statusIndicator,\n                    ...(this.props.instance.mode === 'daemon' || this.props.instance.mode === 'schedule'\n                        ? this.styles[status]\n                        : this.styles.transparent),\n                    ...(this.props.item.connectedToHost && this.props.item.alive && this.props.item.connected === false\n                        ? this.styles.orangeDevice\n                        : undefined),\n                }}\n            >\n                {this.getModeIcon(\n                    this.props.instance.mode,\n                    status,\n                    this.styles[`statusIcon_${status}`],\n                    this.props.item.stoppedWhenWebExtension,\n                )}\n            </div>\n        );\n    }\n\n    getModeIcon(\n        mode: ioBroker.InstanceMode,\n        status: InstanceStatusType,\n        style: React.CSSProperties,\n        stoppedWhenWebExtension: boolean | undefined,\n    ): JSX.Element | null {\n        if (mode === 'daemon') {\n            if (stoppedWhenWebExtension) {\n                return (\n                    <div style={{ ...style, ...this.styles.okSymbol }}>\n                        <div style={this.styles.okSymbolInner} />\n                    </div>\n                );\n            }\n            if (status === 'orange') {\n                return <WarningIcon style={style} />;\n            }\n            if (status === 'green') {\n                return (\n                    <div style={{ ...style, ...this.styles.okSymbol }}>\n                        <div style={this.styles.okSymbolInner} />\n                    </div>\n                );\n            }\n            return <SettingsIcon style={style} />;\n        }\n        if (mode === 'schedule') {\n            return <ScheduleIcon style={style} />;\n        }\n        return null;\n    }\n\n    // eslint-disable-next-line react/no-unused-class-component-methods\n    renderTooltip(): (JSX.Element | string | null)[] {\n        const { instance, item } = this.props;\n        let next;\n        let prev;\n        let cronText;\n        if (instance.mode === 'schedule' && instance.schedule) {\n            try {\n                cronText = cronstrue.toString(instance.schedule, { locale: this.props.context.lang });\n            } catch {\n                cronText = instance.schedule;\n            }\n\n            if (instance.enabled) {\n                try {\n                    const expr = parser.parseExpression(instance.schedule);\n                    next = expr.next().toDate();\n                    prev = expr.prev().toDate();\n                } catch {\n                    next = null;\n                    prev = null;\n                }\n            }\n        }\n\n        return [\n            item.stoppedWhenWebExtension !== undefined ? (\n                <State\n                    key={1}\n                    state\n                >\n                    {this.props.context.t('Runs as web-extension')}\n                </State>\n            ) : (\n                ''\n            ),\n            instance.mode === 'daemon' && this.props.item.stoppedWhenWebExtension === undefined ? (\n                <State\n                    key={2}\n                    state={item.connectedToHost}\n                >\n                    {this.props.context.t('Connected to host')}\n                </State>\n            ) : (\n                ''\n            ),\n            instance.mode === 'daemon' && this.props.item.stoppedWhenWebExtension === undefined ? (\n                <State\n                    key={3}\n                    state={item.alive}\n                >\n                    {this.props.context.t('Heartbeat')}\n                </State>\n            ) : (\n                ''\n            ),\n            this.props.item.connected !== null && this.props.item.stoppedWhenWebExtension === undefined ? (\n                <State\n                    key={4}\n                    state={!!item.connected}\n                >\n                    {typeof item.connected === 'string'\n                        ? `${this.props.context.t('Connected:')} ${item.connected || '-'}`\n                        : this.props.context.t('Connected to device or service')}\n                </State>\n            ) : (\n                ''\n            ),\n            cronText ? (\n                <State\n                    key={5}\n                    state={instance.enabled}\n                >\n                    CRON:\n                    {cronText}\n                </State>\n            ) : null,\n            next ? (\n                <State\n                    key={6}\n                    state\n                >\n                    {this.props.context.t(\n                        'Next start: %s',\n                        `${next.toLocaleDateString(this.props.context.lang)} ${next.toLocaleTimeString(this.props.context.lang)}`,\n                    )}\n                </State>\n            ) : null,\n            prev ? (\n                <State\n                    key={7}\n                    state\n                >\n                    {this.props.context.t(\n                        'Last start: %s',\n                        `${prev.toLocaleDateString(this.props.context.lang)} ${prev.toLocaleTimeString(this.props.context.lang)}`,\n                    )}\n                </State>\n            ) : null,\n        ].filter(el => el);\n    }\n\n    // eslint-disable-next-line react/no-unused-class-component-methods\n    renderMemoryUsage(): JSX.Element {\n        return (\n            this.props.item.running && (\n                <InstanceInfo\n                    icon={<MemoryIcon />}\n                    tooltip={this.props.context.t('RAM usage')}\n                >\n                    {`${this.props.instance.mode === 'daemon' && !InstanceGeneric.isCompact(this.props.instance.obj) ? this.getMemory() : '-.--'} MB`}\n                </InstanceInfo>\n            )\n        );\n    }\n\n    // eslint-disable-next-line react/no-unused-class-component-methods\n    renderPlayPause(): JSX.Element {\n        return (\n            <Tooltip\n                title={this.props.context.t('Start/stop')}\n                slotProps={{ popper: { sx: this.styles.tooltip } }}\n            >\n                <div>\n                    <IconButton\n                        size=\"small\"\n                        onClick={event => {\n                            event.stopPropagation();\n                            event.preventDefault();\n                            if (\n                                this.props.item.running &&\n                                this.props.instance.id === this.props.context.adminInstance\n                            ) {\n                                this.setState({ showStopAdminDialog: `system.adapter.${this.props.instance.id}` });\n                            } else {\n                                void this.setCommonValue(`system.adapter.${this.props.instance.id}`, {\n                                    enabled: !this.props.item.running,\n                                });\n                            }\n                        }}\n                        onFocus={event => event.stopPropagation()}\n                        sx={{\n                            ...this.styles.button,\n                            ...(this.props.instance.canStart\n                                ? this.props.item.running\n                                    ? this.styles.enabled\n                                    : this.styles.disabled\n                                : this.styles.hide),\n                        }}\n                    >\n                        {this.props.item.running ? <PauseIcon /> : <PlayArrowIcon />}\n                    </IconButton>\n                </div>\n            </Tooltip>\n        );\n    }\n\n    // eslint-disable-next-line react/no-unused-class-component-methods\n    renderSettingsButton(): JSX.Element {\n        return (\n            <Tooltip\n                title={this.props.instance.config ? this.props.context.t('Settings') : ''}\n                slotProps={{ popper: { sx: this.styles.tooltip } }}\n            >\n                <div>\n                    <IconButton\n                        disabled={!this.props.instance.config}\n                        size=\"small\"\n                        style={{\n                            ...this.styles.button,\n                            ...(!this.props.instance.config ? this.styles.hiddenOpacity : undefined),\n                        }}\n                        onClick={event => {\n                            event.stopPropagation();\n                            event.preventDefault();\n                            this.props.saveScrollPosition();\n                            Router.doNavigate('tab-instances', 'config', this.props.id);\n                        }}\n                    >\n                        <BuildIcon />\n                    </IconButton>\n                </div>\n            </Tooltip>\n        );\n    }\n\n    // eslint-disable-next-line react/no-unused-class-component-methods\n    renderRestartButton(): JSX.Element {\n        return (\n            <Tooltip\n                title={this.props.context.t('Restart')}\n                slotProps={{ popper: { sx: this.styles.tooltip } }}\n            >\n                <div>\n                    <IconButton\n                        size=\"small\"\n                        onClick={event => {\n                            event.stopPropagation();\n                            event.preventDefault();\n                            void this.props.context.socket.extendObject(`system.adapter.${this.props.instance.id}`, {});\n                        }}\n                        onFocus={event => event.stopPropagation()}\n                        style={{\n                            ...this.styles.button,\n                            ...(!this.props.instance.canStart ? this.styles.hide : undefined),\n                        }}\n                        disabled={!this.props.item.running}\n                    >\n                        <RefreshIcon />\n                    </IconButton>\n                </div>\n            </Tooltip>\n        );\n    }\n\n    // eslint-disable-next-line react/no-unused-class-component-methods\n    renderLink(): JSX.Element {\n        return (\n            <Tooltip\n                title={this.props.context.t('Instance link %s', this.props.instance.id)}\n                slotProps={{ popper: { sx: this.styles.tooltip } }}\n            >\n                <div>\n                    <IconButton\n                        size=\"small\"\n                        style={{\n                            ...this.styles.button,\n                            ...(!this.props.instance.links || !this.props.instance.links[0]\n                                ? this.styles.hide\n                                : undefined),\n                        }}\n                        disabled={!this.props.item.running}\n                        onClick={event => {\n                            event.stopPropagation();\n                            event.preventDefault();\n                            if (this.props.instance.links.length === 1) {\n                                // replace http://fe80::ed18:8dyy:f65:cexx:8087/get/ with http://[fe80::ed18:8dyy:f65:cexx]:8087/get/\n                                let url = this.props.instance.links[0].link;\n                                url = url.replace(\n                                    /\\/\\/([0-9a-f]*:[0-9a-f]*:[0-9a-f]*:[0-9a-f]*:[0-9a-f]*:[0-9a-f]*)(:\\d+)?\\//i,\n                                    '//$1$2/',\n                                );\n                                window.open(url, this.props.instance.id);\n                            } else {\n                                this.setState({ showLinks: true, openDialog: true });\n                            }\n                        }}\n                        onFocus={event => event.stopPropagation()}\n                    >\n                        <InputIcon />\n                    </IconButton>\n                </div>\n            </Tooltip>\n        );\n    }\n\n    // eslint-disable-next-line react/no-unused-class-component-methods\n    renderEditNameButton(): JSX.Element {\n        return (\n            <Tooltip\n                title={this.props.context.t('Edit')}\n                slotProps={{ popper: { sx: this.styles.tooltip } }}\n            >\n                <IconButton\n                    size=\"small\"\n                    className=\"admin-edit-button\"\n                    style={{\n                        ...this.styles.button,\n                        ...(!this.state.visibleEdit ? this.styles.hiddenOpacity : undefined),\n                    }}\n                    onClick={event => {\n                        event.stopPropagation();\n                        event.preventDefault();\n                        this.setState({ openDialogName: true, openDialog: true });\n                    }}\n                >\n                    <EditIcon />\n                </IconButton>\n            </Tooltip>\n        );\n    }\n\n    // eslint-disable-next-line react/no-unused-class-component-methods\n    renderInputOutput(): JSX.Element {\n        return (\n            <InstanceInfo\n                icon={<ImportExportIcon />}\n                tooltip={this.props.context.t('events')}\n            >\n                <div style={this.styles.displayFlex}>\n                    <Tooltip\n                        title={this.props.context.t('input events')}\n                        slotProps={{ popper: { sx: this.styles.tooltip } }}\n                    >\n                        <div style={this.styles.marginRight5}>⇥{this.props.item.inputOutput.stateInput}</div>\n                    </Tooltip>\n                    /\n                    <Tooltip\n                        title={this.props.context.t('output events')}\n                        slotProps={{ popper: { sx: this.styles.tooltip } }}\n                    >\n                        <div style={this.styles.marginLeft5}>↦{this.props.item.inputOutput.stateOutput}</div>\n                    </Tooltip>\n                </div>\n            </InstanceInfo>\n        );\n    }\n\n    renderHost(): JSX.Element {\n        return (\n            <TextWithIcon\n                value={this.props.instance.host}\n                list={this.props.context.hosts}\n                removePrefix=\"system.host.\"\n                themeType={this.props.context.themeType}\n                lang={this.props.context.lang}\n            />\n        );\n    }\n\n    renderEditHostButton(): JSX.Element {\n        return (\n            <Tooltip\n                title={this.props.context.t('Edit')}\n                slotProps={{ popper: { sx: this.styles.tooltip } }}\n            >\n                <IconButton\n                    size=\"small\"\n                    style={this.styles.button}\n                    className=\"admin-edit-button\"\n                    onClick={event => {\n                        event.stopPropagation();\n                        event.preventDefault();\n                        this.setState({ openDialogHost: true, openDialog: true });\n                    }}\n                >\n                    <EditIcon />\n                </IconButton>\n            </Tooltip>\n        );\n    }\n\n    // eslint-disable-next-line react/no-unused-class-component-methods\n    renderSentry(): JSX.Element {\n        return (\n            <Tooltip\n                title=\"sentry\"\n                slotProps={{ popper: { sx: this.styles.tooltip } }}\n            >\n                <IconButton\n                    size=\"small\"\n                    style={this.styles.button}\n                    onClick={event => {\n                        event.stopPropagation();\n                        event.preventDefault();\n                        this.toggleSentry();\n                    }}\n                >\n                    <CardMedia\n                        style={{\n                            ...this.styles.sentry,\n                            ...(!this.props.item.sentry ? this.styles.contrast0 : undefined),\n                        }}\n                        component=\"img\"\n                        image={this.props.item.sentry ? sentry : noSentry}\n                    />\n                </IconButton>\n            </Tooltip>\n        );\n    }\n\n    // eslint-disable-next-line react/no-unused-class-component-methods\n    renderCompactGroupEnabled(): JSX.Element {\n        return (\n            <Tooltip\n                title={this.props.context.t('compact groups')}\n                slotProps={{ popper: { sx: this.styles.tooltip } }}\n            >\n                <IconButton\n                    size=\"small\"\n                    style={{\n                        ...this.styles.button,\n                        ...(this.props.context.expertMode && this.props.item.checkCompact\n                            ? undefined\n                            : this.styles.hide),\n                    }}\n                    onClick={event => {\n                        event.stopPropagation();\n                        event.preventDefault();\n                        this.toggleCompactMode();\n                    }}\n                >\n                    <ViewCompactIcon color={this.props.item.compact ? 'primary' : 'inherit'} />\n                </IconButton>\n            </Tooltip>\n        );\n    }\n\n    // eslint-disable-next-line react/no-unused-class-component-methods\n    renderVersion(): JSX.Element {\n        return <InstanceInfo tooltip={this.props.context.t('Installed')}>v{this.props.instance.version}</InstanceInfo>;\n    }\n\n    // eslint-disable-next-line react/no-unused-class-component-methods\n    renderInfo(hideName?: boolean): JSX.Element {\n        return (\n            <>\n                {!hideName ? <span style={this.styles.instanceName}>{this.props.instance.id}</span> : undefined}\n                {this.props.item.stoppedWhenWebExtension !== undefined && (\n                    <State state={this.props.item.stoppedWhenWebExtension}>\n                        {this.props.context.t('Runs as web-extension')}\n                    </State>\n                )}\n                {this.props.item.running &&\n                    this.props.instance.mode === 'daemon' &&\n                    this.props.item.stoppedWhenWebExtension === undefined && (\n                        <State state={this.props.item.connectedToHost}>\n                            {this.props.context.t('Connected to host')}\n                        </State>\n                    )}\n                {this.props.item.running &&\n                    this.props.instance.mode === 'daemon' &&\n                    this.props.item.stoppedWhenWebExtension === undefined && (\n                        <State state={this.props.item.alive}>{this.props.context.t('Heartbeat')}</State>\n                    )}\n                {this.props.item.running &&\n                    this.props.item.connected !== null &&\n                    this.props.item.stoppedWhenWebExtension === undefined && (\n                        <State state={!!this.props.item.connected}>\n                            {typeof this.props.item.connected === 'string'\n                                ? `${this.props.context.t('Connected:')} ${this.props.item.connected || '-'}`\n                                : this.props.context.t('Connected to device or service')}\n                        </State>\n                    )}\n            </>\n        );\n    }\n\n    // eslint-disable-next-line react/no-unused-class-component-methods\n    renderLogLevel(): JSX.Element {\n        return (\n            <>\n                <InstanceInfo\n                    icon={this.props.item.loglevelIcon}\n                    tooltip={\n                        this.props.item.logLevelObject === this.props.item.logLevel\n                            ? `${this.props.context.t('loglevel')} ${this.props.item.logLevel}`\n                            : `${this.props.context.t('saved:')} ${this.props.item.logLevelObject} / ${this.props.context.t('actual:')} ${this.props.item.logLevel}`\n                    }\n                    // className={this.props.classes[ this.props.item.logLevel]}\n                >\n                    {this.props.item.logLevelObject === this.props.item.logLevel\n                        ? this.props.item.logLevel\n                        : `${this.props.item.logLevelObject} / ${this.props.item.logLevel}`}\n                </InstanceInfo>\n                <Tooltip\n                    title={this.props.context.t('Edit')}\n                    slotProps={{ popper: { sx: this.styles.tooltip } }}\n                >\n                    <IconButton\n                        size=\"small\"\n                        className=\"admin-edit-button\"\n                        style={this.styles.button}\n                        onClick={event => {\n                            event.stopPropagation();\n                            event.preventDefault();\n                            this.setState({ openDialogLogLevel: true, openDialog: true });\n                        }}\n                    >\n                        <EditIcon />\n                    </IconButton>\n                </Tooltip>\n            </>\n        );\n    }\n\n    // eslint-disable-next-line react/no-unused-class-component-methods\n    renderSchedule(): JSX.Element {\n        return (\n            <>\n                <InstanceInfo\n                    icon={<ScheduleIcon />}\n                    tooltip={this.props.context.t('schedule_group')}\n                >\n                    {InstanceGeneric.getSchedule(this.props.instance.obj) || '-'}\n                </InstanceInfo>\n                <Tooltip\n                    title={this.props.context.t('Edit')}\n                    slotProps={{ popper: { sx: this.styles.tooltip } }}\n                >\n                    <IconButton\n                        size=\"small\"\n                        className=\"admin-edit-button\"\n                        style={this.styles.button}\n                        onClick={event => {\n                            event.stopPropagation();\n                            event.preventDefault();\n                            this.setState({ openDialogSchedule: true, openDialog: true });\n                        }}\n                    >\n                        <EditIcon />\n                    </IconButton>\n                </Tooltip>\n            </>\n        );\n    }\n\n    // eslint-disable-next-line react/no-unused-class-component-methods\n    renderRestartSchedule(): JSX.Element {\n        return (\n            <>\n                <InstanceInfo\n                    icon={<ScheduleIcon style={this.styles.scheduleIcon} />}\n                    tooltip={this.props.context.t('restart')}\n                >\n                    {InstanceGeneric.getRestartSchedule(this.props.instance.obj) || '-'}\n                </InstanceInfo>\n                <Tooltip\n                    title={this.props.context.t('Edit')}\n                    slotProps={{ popper: { sx: this.styles.tooltip } }}\n                >\n                    <IconButton\n                        size=\"small\"\n                        className=\"admin-edit-button\"\n                        style={this.styles.button}\n                        onClick={event => {\n                            event.stopPropagation();\n                            event.preventDefault();\n                            this.setState({ openDialogCron: true, openDialog: true });\n                        }}\n                    >\n                        <EditIcon />\n                    </IconButton>\n                </Tooltip>\n            </>\n        );\n    }\n\n    // eslint-disable-next-line react/no-unused-class-component-methods\n    renderRamLimit(): JSX.Element {\n        return (\n            <>\n                <InstanceInfo\n                    icon={<MemoryIcon style={this.styles.memoryIcon} />}\n                    tooltip={this.props.context.t('RAM limit')}\n                >\n                    {`${this.props.item.memoryLimitMB ? this.props.item.memoryLimitMB : '-.--'} MB`}\n                </InstanceInfo>\n                <Tooltip\n                    title={this.props.context.t('Edit')}\n                    slotProps={{ popper: { sx: this.styles.tooltip } }}\n                >\n                    <IconButton\n                        size=\"small\"\n                        className=\"admin-edit-button\"\n                        style={this.styles.button}\n                        onClick={event => {\n                            event.stopPropagation();\n                            event.preventDefault();\n                            this.setState({ openDialogMemoryLimit: true, openDialog: true });\n                        }}\n                    >\n                        <EditIcon />\n                    </IconButton>\n                </Tooltip>\n            </>\n        );\n    }\n\n    // eslint-disable-next-line react/no-unused-class-component-methods\n    renderCompactGroup(): JSX.Element {\n        return (\n            <>\n                <InstanceInfo\n                    icon={\n                        <ViewCompactIcon\n                            style={this.styles.marginRight5}\n                            color=\"inherit\"\n                        />\n                    }\n                    tooltip={this.props.context.t('compact groups')}\n                >\n                    {(this.props.item.compactGroup === 1\n                        ? 'default'\n                        : (this.props.item.compactGroup || '').toString() === '0'\n                          ? 'controller'\n                          : !this.props.item.compactGroup\n                            ? 'default'\n                            : this.props.item.compactGroup\n                    ).toString() || 'default'}\n                </InstanceInfo>\n                <Tooltip\n                    title={this.props.context.t('Edit')}\n                    slotProps={{ popper: { sx: this.styles.tooltip } }}\n                >\n                    <IconButton\n                        size=\"small\"\n                        className=\"admin-edit-button\"\n                        style={this.styles.button}\n                        onClick={event => {\n                            event.stopPropagation();\n                            event.preventDefault();\n                            this.setState({ openDialogCompact: true, openDialog: true });\n                        }}\n                    >\n                        <EditIcon />\n                    </IconButton>\n                </Tooltip>\n            </>\n        );\n    }\n\n    // eslint-disable-next-line react/no-unused-class-component-methods\n    renderTier(): JSX.Element {\n        return (\n            <>\n                <InstanceInfo\n                    icon={\n                        <LowPriorityIcon\n                            style={this.styles.marginRight5}\n                            color=\"inherit\"\n                        />\n                    }\n                    tooltip={this.props.context.t('Start order (tier)')}\n                >\n                    {this.props.instance.adapter === 'admin'\n                        ? this.props.context.t('Always first')\n                        : this.props.context.t(\n                              arrayTier.find(el => el.value === this.props.item.tier)?.desc || arrayTier[2].desc,\n                          )}\n                </InstanceInfo>\n                {this.props.instance.adapter !== 'admin' ? (\n                    <Tooltip\n                        title={this.props.context.t('Edit start order (tier)')}\n                        slotProps={{ popper: { sx: this.styles.tooltip } }}\n                    >\n                        <IconButton\n                            size=\"small\"\n                            className=\"admin-edit-button\"\n                            style={this.styles.button}\n                            onClick={event => {\n                                event.stopPropagation();\n                                event.preventDefault();\n                                this.setState({ openDialogTier: true, openDialog: true });\n                            }}\n                        >\n                            <EditIcon />\n                        </IconButton>\n                    </Tooltip>\n                ) : null}\n            </>\n        );\n    }\n\n    // eslint-disable-next-line react/no-unused-class-component-methods\n    renderHostWithButton(): JSX.Element {\n        return (\n            <>\n                <InstanceInfo\n                    icon={<HostIcon style={this.styles.marginRight5} />}\n                    tooltip={this.props.context.t('Host for this instance')}\n                >\n                    {this.renderHost()}\n                </InstanceInfo>\n                {this.renderEditHostButton()}\n            </>\n        );\n    }\n\n    // eslint-disable-next-line react/no-unused-class-component-methods\n    renderDeleteButton(): JSX.Element {\n        return (\n            <Tooltip\n                title={this.props.context.t('Delete')}\n                slotProps={{ popper: { sx: this.styles.tooltip } }}\n            >\n                <IconButton\n                    size=\"small\"\n                    style={this.styles.button}\n                    onClick={async event => {\n                        event.stopPropagation();\n                        event.preventDefault();\n                        // Count the number of instances\n                        const instances = await this.props.context.socket.getAdapterInstances(\n                            this.props.instance.id.split('.')[0],\n                        );\n                        this.setState({ openDialogDelete: instances.length || true, openDialog: true });\n                    }}\n                >\n                    <DeleteIcon />\n                </IconButton>\n            </Tooltip>\n        );\n    }\n\n    render(): JSX.Element {\n        // this method will be overwritten by the generated class\n        return <div>{this.state.expanded}</div>;\n    }\n}\n","import React, { type JSX } from 'react';\n\nimport { Box, Card, CardContent, CardMedia, Fab, Typography } from '@mui/material';\n\nimport { MoreVert as MoreVertIcon } from '@mui/icons-material';\n\nimport { Utils, type IobTheme } from '@iobroker/adapter-react-v5';\n\nimport InstanceGeneric, {\n    type InstanceGenericProps,\n    styles as genericStyles,\n    type InstanceGenericState,\n} from './InstanceGeneric';\nimport IsVisible from '../IsVisible';\nimport AdminUtils from '../../helpers/AdminUtils';\n\nconst styles: Record<string, any> = {\n    ...genericStyles,\n    fab: {\n        position: 'absolute',\n        bottom: -20,\n        width: 40,\n        height: 40,\n        right: 20,\n    },\n    collapse: (theme: IobTheme) => ({\n        height: '100%',\n        backgroundColor: theme.palette.mode === 'dark' ? '#4a4a4a' : '#d4d4d4',\n        position: 'absolute',\n        width: '100%',\n        zIndex: 3,\n        marginTop: 'auto',\n        bottom: 0,\n        transition: 'height 0.3s',\n        justifyContent: 'space-between',\n        display: 'flex',\n        flexDirection: 'column',\n    }),\n    collapseOff: {\n        height: 0,\n    },\n    close: {\n        width: 20,\n        height: 20,\n        opacity: 0.9,\n        cursor: 'pointer',\n        position: 'relative',\n        marginLeft: 'auto',\n        mb: '10px',\n        transition: 'all 0.6s ease',\n        '&:hover': {\n            transform: 'rotate(90deg)',\n        },\n        '&:before': {\n            position: 'absolute',\n            left: 9,\n            content: '\"\"',\n            height: 20,\n            width: 3,\n            backgroundColor: '#ff4f4f',\n            transform: 'rotate(45deg)',\n        },\n        '&:after': {\n            position: 'absolute',\n            left: 9,\n            content: '\"\"',\n            height: 20,\n            width: 3,\n            backgroundColor: '#ff4f4f',\n            transform: 'rotate(-45deg)',\n        },\n    },\n    footerBlock: (theme: IobTheme) => ({\n        background: theme.palette.background.default,\n        p: '10px',\n        display: 'flex',\n        justifyContent: 'space-between',\n    }),\n    versionDate: {\n        alignSelf: 'center',\n    },\n    adapter: {\n        width: '100%',\n        fontWeight: 'bold',\n        fontSize: 16,\n        verticalAlign: 'middle',\n        paddingLeft: 8,\n        paddingTop: 16,\n        // color: theme.palette.mode === 'dark' ? '#333' : '#555',\n    },\n\n    cardContent: {\n        mt: 2,\n        paddingTop: 0,\n    },\n    cardContentH5: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n    },\n    marginTop10: {\n        marginTop: 10,\n    },\n\n    overflowAuto: {\n        overflow: 'auto',\n    },\n    collapseIcon: (theme: IobTheme) => ({\n        position: 'sticky',\n        right: 0,\n        top: 0,\n        background: theme.palette.mode === 'dark' ? '#4a4a4a' : '#d4d4d4',\n        zIndex: 2,\n    }),\n    enableButton: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    instanceName: {\n        fontSize: 16,\n        padding: 4,\n        paddingBottom: 15,\n        fontWeight: 'bold',\n    },\n    img: {\n        width: 45,\n        height: 45,\n        margin: 'auto 0',\n        position: 'relative',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            zIndex: 2,\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            background: 'url(\"img/no-image.png\") 100% 100% no-repeat',\n            backgroundSize: 'cover',\n            backgroundColor: '#fff',\n        },\n    },\n    instanceStateNotEnabled1: (theme: IobTheme) => ({\n        backgroundColor: 'rgba(192, 192, 192, 0.2)',\n        color: theme.palette.mode === 'dark' ? '#CCC' : '#333',\n    }),\n    instanceStateNotAlive1: (theme: IobTheme) => ({\n        backgroundColor: 'rgba(192, 192, 192, 0.7)',\n        color: theme.palette.mode === 'dark' ? '#CCC' : '#333',\n    }),\n    instanceStateAliveNotConnected1: (theme: IobTheme) => ({\n        backgroundColor: 'rgba(255, 177, 0, 0.4)',\n        color: theme.palette.mode === 'dark' ? '#CCC' : '#333',\n    }),\n    instanceStateAliveAndConnected1: (theme: IobTheme) => ({\n        backgroundColor: 'rgba(0, 255, 0, 0.4)',\n        color: theme.palette.mode === 'dark' ? '#CCC' : '#333',\n    }),\n};\n\ninterface InstanceCardState extends InstanceGenericState {\n    mouseOver: boolean;\n}\n\nclass InstanceCard extends InstanceGeneric<InstanceGenericProps, InstanceCardState> {\n    protected styles: Record<string, any> = styles;\n\n    constructor(props: InstanceGenericProps) {\n        super(props);\n\n        this.state = Object.assign(this.getDefaultState(props), { mouseOver: false });\n    }\n\n    renderSecondCardInfo(): JSX.Element {\n        if (this.props.deleting || !this.state.expanded) {\n            return null;\n        }\n        const { item, instance } = this.props;\n        return (\n            <Box\n                component=\"div\"\n                sx={Utils.getStyle(\n                    this.props.context.theme,\n                    styles.collapse,\n                    !this.state.expanded ? styles.collapseOff : '',\n                    this.props.deleting && styles.deleting,\n                )}\n            >\n                <CardContent sx={{ '&.MuiCardContent-root': { ...styles.cardContent, ...styles.overflowAuto } }}>\n                    <Box\n                        component=\"div\"\n                        sx={styles.collapseIcon}\n                    >\n                        <Box\n                            component=\"div\"\n                            sx={styles.close}\n                            onClick={() => {\n                                if (this.state.openDialog) {\n                                    return;\n                                }\n                                this.setState({ expanded: false }, () =>\n                                    this.props.context.onToggleExpanded(this.props.id, false),\n                                );\n                            }}\n                        />\n                    </Box>\n                    <Typography\n                        gutterBottom\n                        component=\"span\"\n                        variant=\"body2\"\n                    >\n                        {this.renderInfo()}\n\n                        {this.renderVersion()}\n\n                        {this.renderMemoryUsage()}\n\n                        {item.running && this.props.context.expertMode && (\n                            <div style={styles.displayFlex}>{this.renderInputOutput()}</div>\n                        )}\n\n                        {this.props.context.expertMode && <div style={styles.displayFlex}>{this.renderRamLimit()}</div>}\n\n                        {this.props.context.expertMode && <div style={styles.displayFlex}>{this.renderLogLevel()}</div>}\n\n                        {item.modeSchedule && <div style={styles.displayFlex}>{this.renderSchedule()}</div>}\n\n                        {this.props.context.expertMode && instance.mode === 'daemon' && (\n                            <div style={styles.displayFlex}>{this.renderRestartSchedule()}</div>\n                        )}\n\n                        {this.props.context.expertMode && item.checkCompact && item.compact && item.supportCompact && (\n                            <div style={styles.displayFlex}>{this.renderCompactGroup()}</div>\n                        )}\n\n                        {this.props.context.expertMode && <div style={styles.displayFlex}>{this.renderTier()}</div>}\n\n                        {this.props.context.hosts.length > 1 ||\n                        (this.props.context.hosts.length &&\n                            this.props.context.hosts[0].common?.name !== instance.host) ? (\n                            <div style={styles.displayFlex}>{this.renderHostWithButton()}</div>\n                        ) : null}\n\n                        <IsVisible\n                            config={item}\n                            name=\"allowInstanceSettings\"\n                        >\n                            <Box\n                                component=\"div\"\n                                sx={{ display: { sm: 'none', xs: 'inline-block' } }}\n                            >\n                                {this.renderSettingsButton()}\n                            </Box>\n                        </IsVisible>\n                    </Typography>\n                </CardContent>\n\n                <Box\n                    component=\"div\"\n                    sx={styles.footerBlock}\n                >\n                    <IsVisible\n                        config={item}\n                        name=\"allowInstanceDelete\"\n                    >\n                        <div style={styles.displayFlex}>{this.renderDeleteButton()}</div>\n                    </IsVisible>\n\n                    {this.props.context.expertMode && item.checkSentry && (\n                        <div style={styles.displayFlex}>{this.renderSentry()}</div>\n                    )}\n\n                    {item.supportCompact && this.props.context.expertMode && item.checkCompact && (\n                        <div style={styles.displayFlex}>{this.renderCompactGroupEnabled()}</div>\n                    )}\n                </Box>\n            </Box>\n        );\n    }\n\n    render(): JSX.Element {\n        const { item, instance } = this.props;\n\n        return (\n            <Card sx={Utils.getStyle(this.props.context.theme, styles.root, this.props.hidden && styles.hidden)}>\n                {this.state.openDialog && this.renderDialogs()}\n                {this.renderSecondCardInfo()}\n                <Box\n                    component=\"div\"\n                    sx={Utils.getStyle(\n                        this.props.context.theme,\n                        styles.imageBlock,\n                        (!item.running || instance.mode !== 'daemon' || item.stoppedWhenWebExtension !== undefined) &&\n                            styles.instanceStateNotEnabled1,\n                        item.running &&\n                            instance.mode === 'daemon' &&\n                            item.stoppedWhenWebExtension === undefined &&\n                            (!item.connectedToHost || !item.alive) &&\n                            styles.instanceStateNotAlive1,\n                        item.running &&\n                            item.connectedToHost &&\n                            item.alive &&\n                            item.connected === false &&\n                            styles.instanceStateAliveNotConnected1,\n                        item.running &&\n                            item.connectedToHost &&\n                            item.alive &&\n                            item.connected !== false &&\n                            styles.instanceStateAliveAndConnected1,\n                    )}\n                >\n                    <CardMedia\n                        sx={styles.img}\n                        component=\"img\"\n                        image={instance.image || 'img/no-image.png'}\n                    />\n                    <div style={styles.adapter}>{instance.id}</div>\n                    <div style={styles.versionDate}>\n                        {/* {expertMode && item.checkCompact && <Tooltip title={t('compact groups')}>\n                    <ViewCompactIcon color=\"action\" style={{ margin: 10 }} />\n                </Tooltip>} */}\n                    </div>\n                    {!this.state.expanded ? (\n                        <Fab\n                            onMouseOver={() => this.setState({ mouseOver: true })}\n                            onMouseOut={() => this.setState({ mouseOver: false })}\n                            onClick={() =>\n                                this.setState({ expanded: true }, () =>\n                                    this.props.context.onToggleExpanded(this.props.id, true),\n                                )\n                            }\n                            style={styles.fab}\n                            color=\"primary\"\n                            aria-label=\"add\"\n                        >\n                            <MoreVertIcon />\n                        </Fab>\n                    ) : null}\n                </Box>\n\n                <CardContent style={styles.cardContentH5}>\n                    <Typography\n                        gutterBottom\n                        variant=\"h5\"\n                        component=\"h5\"\n                    >\n                        <div\n                            // onMouseMove={() => this.setState({ visibleEdit: true })}\n                            onMouseEnter={() => this.setState({ visibleEdit: true })}\n                            onMouseLeave={() => this.setState({ visibleEdit: false })}\n                            style={styles.displayFlex}\n                        >\n                            {AdminUtils.getText(item.name, this.props.context.lang)}\n                            {this.renderEditNameButton()}\n                        </div>\n                    </Typography>\n\n                    <div style={styles.marginTop10}>\n                        <Typography\n                            component=\"span\"\n                            style={styles.enableButton}\n                        >\n                            {this.renderPlayPause()}\n                            <Box\n                                component=\"div\"\n                                sx={{ display: { sm: 'inline-block', xs: 'none' } }}\n                            >\n                                {this.renderSettingsButton()}\n                            </Box>\n                            {this.renderRestartButton()}\n                            <IsVisible\n                                config={item}\n                                name=\"allowInstanceLink\"\n                            >\n                                {this.renderLink()}\n                            </IsVisible>\n                        </Typography>\n                    </div>\n                </CardContent>\n            </Card>\n        );\n    }\n}\n\nexport default InstanceCard;\n","import React, { type JSX } from 'react';\n\nimport { Accordion, AccordionDetails, AccordionSummary, Avatar, Grid2, Tooltip, Typography, Box } from '@mui/material';\n\nimport { ExpandMore as ExpandMoreIcon } from '@mui/icons-material';\n\nimport AdminUtils from '@/helpers/AdminUtils';\nimport InstanceInfo from './InstanceInfo';\nimport IsVisible from '../IsVisible';\nimport InstanceGeneric, {\n    type InstanceGenericProps,\n    type InstanceGenericState,\n    styles as genericStyles,\n} from './InstanceGeneric';\n\nconst styles: Record<string, any> = {\n    ...genericStyles,\n    row: {\n        pl: 1,\n        pr: 2,\n        p: 0,\n    },\n    expanded: {\n        minHeight: 64,\n    },\n    invisible: {\n        opacity: 0,\n    },\n    instanceIcon: {\n        height: 42,\n        width: 42,\n        '@media screen and (max-width: 800px)': {\n            height: 28,\n            width: 28,\n            ml: '4px',\n        },\n    },\n    hidden1250: {\n        display: 'flex',\n        width: 200,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        '@media screen and (max-width: 1500px)': {\n            display: 'none !important',\n        },\n    },\n    visible1250: {\n        display: 'flex',\n        width: 200,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        '@media screen and (max-width: 1500px)': {\n            display: 'flex !important',\n        },\n    },\n    visible1050: {\n        display: 'none',\n        '@media screen and (max-width: 1120px)': {\n            display: 'flex !important',\n        },\n    },\n    hidden1050: {\n        display: 'flex',\n        '@media screen and (max-width: 1120px)': {\n            display: 'none !important',\n        },\n    },\n    hidden800: {\n        display: 'flex',\n        '@media screen and (max-width: 800px)': {\n            display: 'none !important',\n        },\n    },\n    visible800: {\n        display: 'none',\n        '@media screen and (max-width: 800px)': {\n            display: 'flex !important',\n        },\n    },\n    hidden570: {\n        display: 'flex',\n        '@media screen and (max-width: 650px)': {\n            display: 'none !important',\n        },\n    },\n    visible570: {\n        display: 'none',\n        '@media screen and (max-width: 650px)': {\n            display: 'flex !important',\n        },\n    },\n    hidden1230: {\n        '@media screen and (max-width: 1300px)': {\n            display: 'none !important',\n        },\n    },\n    hidden380: {\n        display: 'flex',\n        '@media screen and (max-width: 380px)': {\n            display: 'none !important',\n        },\n    },\n    instanceId: {\n        overflow: 'hidden',\n        alignSelf: 'center',\n        fontSize: 16,\n        ml: '5px',\n        maxWidth: 150,\n        minWidth: 100,\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        flexGrow: 2,\n        '@media screen and (max-width: 380px)': {\n            width: '70px !important',\n            minWidth: '70px !important',\n        },\n        '@media screen and (max-width: 480px)': {\n            width: 100,\n        },\n    },\n    secondaryHeading: {\n        maxWidth: 200,\n        fontSize: 12,\n    },\n    secondaryHeadingDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        width: 200,\n    },\n    secondaryHeadingDivDiv: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        padding: 5,\n        textOverflow: 'ellipsis',\n        maxWidth: 200,\n    },\n    gridStyle: {\n        display: 'flex',\n        minWidth: 270,\n        lineHeight: '34px',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n        '@media screen and (max-width: 480px)': {\n            minWidth: 'auto !important',\n            ml: '10px',\n        },\n        '@media screen and (max-width: 335px)': {\n            ml: '0px',\n        },\n    },\n    paddingRight200: {\n        // paddingRight: 200\n    },\n    maxWidth300: {\n        width: 300,\n        '@media screen and (max-width: 480px)': {\n            width: '250px !important',\n        },\n    },\n    width150: {\n        width: 150,\n    },\n\n    desktopRow: {\n        minHeight: 0,\n    },\n    desktopIcon: {\n        height: 32,\n        width: 32,\n        mt: 1,\n    },\n    desktopRowContent: {\n        mt: '2px',\n        mb: '2px',\n    },\n    desktopButton: {\n        // paddingRight: 12,\n        // paddingTop: 4,\n        // paddingBottom: 4,\n        // paddingLeft: 4,\n    },\n    rowGridLine: {\n        marginTop: -2,\n    },\n};\n\nclass InstanceRow extends InstanceGeneric<InstanceGenericProps, InstanceGenericState> {\n    private desktop: boolean = window.innerWidth > 1000;\n\n    protected styles: Record<string, any> = styles;\n\n    constructor(props: InstanceGenericProps) {\n        super(props);\n\n        this.state = this.getDefaultState(props);\n    }\n\n    renderDetails(): JSX.Element {\n        const { instance, item } = this.props;\n\n        return (\n            <AccordionDetails>\n                <Grid2\n                    container\n                    direction=\"row\"\n                >\n                    <Grid2\n                        container\n                        direction=\"row\"\n                        size={{ xs: 10 }}\n                    >\n                        <Grid2\n                            container\n                            direction=\"column\"\n                            size={{ xs: 12, sm: 6, md: 4 }}\n                        >\n                            {this.renderInfo(true)}\n                        </Grid2>\n                        <Grid2\n                            container\n                            direction=\"column\"\n                            size={{ xs: 12, sm: 6, md: 4 }}\n                        >\n                            {this.renderVersion()}\n                        </Grid2>\n                        <Grid2\n                            container\n                            direction=\"column\"\n                            size={{ xs: 12, sm: 6, md: 4 }}\n                            style={styles.paddingRight200}\n                        >\n                            {this.props.context.expertMode && (\n                                <Box\n                                    component=\"div\"\n                                    sx={{ ...styles.displayFlex, ...styles.maxWidth300, ...styles.editButton }}\n                                >\n                                    {this.renderLogLevel()}\n                                </Box>\n                            )}\n                            {item.running && this.props.context.expertMode && (\n                                <Box\n                                    component=\"div\"\n                                    sx={styles.visible1250}\n                                >\n                                    {this.renderInputOutput()}\n                                </Box>\n                            )}\n                            <Grid2 sx={styles.visible1050}>{this.renderMemoryUsage()}</Grid2>\n                            {item.modeSchedule && (\n                                <Box\n                                    component=\"div\"\n                                    sx={{ ...styles.displayFlex, ...styles.maxWidth300, ...styles.editButton }}\n                                >\n                                    {this.renderSchedule()}\n                                </Box>\n                            )}\n                            {this.props.context.expertMode && instance.mode === 'daemon' && (\n                                <Box\n                                    component=\"div\"\n                                    sx={{ ...styles.displayFlex, ...styles.maxWidth300, ...styles.editButton }}\n                                >\n                                    {this.renderRestartSchedule()}\n                                </Box>\n                            )}\n                            {this.props.context.expertMode && (\n                                <Box\n                                    component=\"div\"\n                                    sx={{ ...styles.displayFlex, ...styles.maxWidth300, ...styles.editButton }}\n                                >\n                                    {this.renderRamLimit()}\n                                </Box>\n                            )}\n                            {this.props.context.expertMode &&\n                                item.checkCompact &&\n                                item.compact &&\n                                item.supportCompact && (\n                                    <Box\n                                        component=\"div\"\n                                        sx={{ ...styles.displayFlex, ...styles.maxWidth300, ...styles.editButton }}\n                                    >\n                                        {this.renderCompactGroup()}\n                                    </Box>\n                                )}\n                            {this.props.context.expertMode && (\n                                <Box\n                                    component=\"div\"\n                                    sx={{ ...styles.displayFlex, ...styles.maxWidth300, ...styles.editButton }}\n                                >\n                                    {this.renderTier()}\n                                </Box>\n                            )}\n                            <Box\n                                component=\"div\"\n                                sx={{ ...styles.maxWidth300, ...styles.visible800, ...styles.editButton }}\n                            >\n                                <InstanceInfo>{AdminUtils.getText(item.name, this.props.context.lang)}</InstanceInfo>\n                                {this.renderEditNameButton()}\n                            </Box>\n                            {this.props.context.hosts.length > 1 ||\n                            (this.props.context.hosts.length &&\n                                this.props.context.hosts[0].common?.name !== instance.host) ? (\n                                <Box\n                                    component=\"div\"\n                                    sx={{ ...styles.displayFlex, ...styles.maxWidth300, ...styles.editButton }}\n                                >\n                                    {this.renderHostWithButton()}\n                                </Box>\n                            ) : null}\n                        </Grid2>\n                    </Grid2>\n                    <div style={styles.displayFlex}>\n                        <IsVisible\n                            config={item}\n                            name=\"allowInstanceDelete\"\n                        >\n                            <Box\n                                component=\"div\"\n                                sx={{ display: { xs: 'inline-block', md: 'none' } }}\n                            >\n                                {this.renderSettingsButton()}\n                            </Box>\n                        </IsVisible>\n                        <Box\n                            component=\"div\"\n                            sx={{ display: { md: 'none', xs: 'inline-block' } }}\n                        >\n                            {this.renderRestartButton()}\n                        </Box>\n                        <IsVisible\n                            config={item}\n                            name=\"allowInstanceLink\"\n                        >\n                            <Box\n                                component=\"div\"\n                                sx={{ display: { md: 'none', xs: 'inline-block' } }}\n                            >\n                                {this.renderLink()}\n                            </Box>\n                        </IsVisible>\n                        <IsVisible\n                            config={item}\n                            name=\"allowInstanceDelete\"\n                        >\n                            {this.renderDeleteButton()}\n                        </IsVisible>\n                        <Box\n                            component=\"div\"\n                            sx={styles.visible570}\n                        >\n                            {this.renderSentry()}\n                        </Box>\n                        <Box\n                            component=\"div\"\n                            sx={styles.visible570}\n                        >\n                            {this.renderCompactGroupEnabled()}\n                        </Box>\n                    </div>\n                </Grid2>\n            </AccordionDetails>\n        );\n    }\n\n    render(): JSX.Element {\n        const { instance, item } = this.props;\n        const status = this.props.context.getInstanceStatus(instance.obj);\n\n        const stateTooltip = this.renderTooltip();\n\n        const rootStyle = {\n            ...styles.row,\n            ...((!item.running || instance.mode !== 'daemon' || item.stoppedWhenWebExtension !== undefined) &&\n                (this.props.idx % 2 === 0 ? styles.instanceStateNotEnabled1 : styles.instanceStateNotEnabled2)),\n            ...(item.running &&\n            instance.mode === 'daemon' &&\n            item.stoppedWhenWebExtension === undefined &&\n            (!item.connectedToHost || !item.alive)\n                ? this.props.idx % 2 === 0\n                    ? styles.instanceStateNotAlive1\n                    : styles.instanceStateNotAlive2\n                : undefined),\n            ...(item.running && item.connectedToHost && item.alive && item.connected === false\n                ? this.props.idx % 2 === 0\n                    ? styles.instanceStateAliveNotConnected1\n                    : styles.instanceStateAliveNotConnected2\n                : undefined),\n            ...(item.running && item.connectedToHost && item.alive && item.connected !== false\n                ? this.props.idx % 2 === 0\n                    ? styles.instanceStateAliveAndConnected1\n                    : styles.instanceStateAliveAndConnected2\n                : undefined),\n            ...(this.desktop ? styles.desktopRow : undefined),\n            ...(this.state.expanded && !this.props.deleting ? styles.expanded : undefined),\n        };\n\n        return (\n            <Accordion\n                square\n                sx={{\n                    '&.MuiAccordion-root': {\n                        ...(this.props.deleting ? styles.deleting : undefined),\n                        ...(this.props.hidden ? styles.hidden : undefined),\n                    },\n                }}\n                expanded={this.state.expanded && !this.props.deleting}\n                onChange={() => {\n                    if (this.state.openDialog) {\n                        return;\n                    }\n                    this.setState({ expanded: !this.state.expanded }, () =>\n                        this.props.context.onToggleExpanded(this.props.id, this.state.expanded),\n                    );\n                }}\n            >\n                <AccordionSummary\n                    sx={{\n                        '&.MuiAccordionSummary-root': rootStyle,\n                        '& .MuiAccordionSummary-content': this.desktop ? styles.desktopRowContent : undefined,\n                    }}\n                    expandIcon={<ExpandMoreIcon style={this.desktop ? styles.desktopButton : undefined} />}\n                >\n                    {this.renderDialogs()}\n                    <Grid2\n                        container\n                        spacing={1}\n                        alignItems=\"center\"\n                        direction=\"row\"\n                        wrap=\"nowrap\"\n                        style={styles.rowGridLine}\n                    >\n                        <Box\n                            component=\"div\"\n                            style={styles.gridStyle}\n                        >\n                            {stateTooltip.length ? (\n                                <Tooltip\n                                    slotProps={{ popper: { sx: styles.tooltip } }}\n                                    title={\n                                        <span style={{ display: 'flex', flexDirection: 'column' }}>{stateTooltip}</span>\n                                    }\n                                >\n                                    {this.renderModeIcon(status)}\n                                </Tooltip>\n                            ) : (\n                                this.renderModeIcon(status)\n                            )}\n                            <Avatar\n                                variant=\"square\"\n                                alt={instance.id}\n                                src={instance.image}\n                                sx={{ ...styles.instanceIcon, ...(this.desktop ? styles.desktopIcon : undefined) }}\n                            />\n                            <Box\n                                component=\"div\"\n                                sx={styles.instanceId}\n                            >\n                                {instance.id}\n                            </Box>\n                        </Box>\n\n                        {this.renderPlayPause()}\n\n                        <IsVisible\n                            config={item}\n                            name=\"allowInstanceSettings\"\n                        >\n                            <Box\n                                component=\"div\"\n                                sx={{ display: { md: 'inline-block', xs: 'none' } }}\n                            >\n                                {this.renderSettingsButton()}\n                            </Box>\n                        </IsVisible>\n\n                        <Box\n                            component=\"div\"\n                            sx={{ display: { md: 'inline-block', xs: 'none' } }}\n                        >\n                            {this.renderRestartButton()}\n                        </Box>\n\n                        <IsVisible\n                            config={item}\n                            name=\"allowInstanceLink\"\n                        >\n                            <Box\n                                component=\"div\"\n                                sx={{ display: { md: 'inline-block', xs: 'none' } }}\n                            >\n                                {this.renderLink()}\n                            </Box>\n                        </IsVisible>\n\n                        <Typography\n                            sx={{ ...styles.secondaryHeading, ...styles.hidden800 }}\n                            component=\"div\"\n                        >\n                            <div\n                                // onMouseMove={() => this.setState({ visibleEdit: true })}\n                                onMouseEnter={() => this.setState({ visibleEdit: true })}\n                                onMouseLeave={() => this.setState({ visibleEdit: false })}\n                                style={styles.secondaryHeadingDiv}\n                            >\n                                <div style={styles.secondaryHeadingDivDiv}>\n                                    {AdminUtils.getText(item.name, this.props.context.lang)}\n                                </div>\n                                {this.renderEditNameButton()}\n                            </div>\n                        </Typography>\n                        {this.props.context.expertMode && (\n                            <Box\n                                component=\"div\"\n                                sx={{\n                                    ...styles.hidden1250,\n                                    ...(instance.mode !== 'daemon' || !item.running ? styles.invisible : undefined),\n                                }}\n                            >\n                                {this.renderInputOutput()}\n                            </Box>\n                        )}\n                        {this.props.context.expertMode && (\n                            <Tooltip\n                                title={\n                                    item.logLevelObject === item.logLevel\n                                        ? `${this.props.context.t('loglevel')} ${item.logLevel}`\n                                        : `${this.props.context.t('saved:')} ${item.logLevelObject} / ${this.props.context.t('actual:')} ${item.logLevel}`\n                                }\n                                slotProps={{ popper: { sx: styles.tooltip } }}\n                            >\n                                <Avatar sx={{ ...styles.smallAvatar, ...styles.hidden380, ...styles[item.logLevel] }}>\n                                    {item.loglevelIcon}\n                                </Avatar>\n                            </Tooltip>\n                        )}\n                        <Grid2\n                            sx={{\n                                ...styles.hidden1050,\n                                ...styles.width150,\n                                ...(instance.mode !== 'daemon' || !item.running ? styles.invisible : undefined),\n                            }}\n                        >\n                            {this.renderMemoryUsage()}\n                        </Grid2>\n                        {this.props.context.hosts.length > 1 ||\n                        (this.props.context.hosts.length &&\n                            this.props.context.hosts[0].common?.name !== instance.host) ? (\n                            <Grid2 sx={styles.hidden1230}>{this.renderHost()}</Grid2>\n                        ) : null}\n                    </Grid2>\n                    <Box\n                        component=\"div\"\n                        sx={styles.hidden570}\n                    >\n                        {this.renderSentry()}\n                    </Box>\n                    <Box\n                        component=\"div\"\n                        sx={styles.hidden570}\n                    >\n                        {this.renderCompactGroupEnabled()}\n                    </Box>\n                </AccordionSummary>\n                {this.state.expanded ? this.renderDetails() : null}\n                {this.renderDialogs()}\n            </Accordion>\n        );\n    }\n}\n\nexport default InstanceRow;\n","var _g;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgFilter(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    width: \"24px\",\n    fill: \"#FB2D26\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0,0h24 M24,24H0\",\n    fill: \"currentColor\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.25,5.61C6.27,8.2,10,13,10,13v6c0,0.55,0.45,1,1,1h2c0.55,0,1-0.45,1-1v-6c0,0,3.72-4.8,5.74-7.39 C20.25,4.95,19.78,4,18.95,4H5.04C4.21,4,3.74,4.95,4.25,5.61z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0,0h24v24H0V0z\",\n    fill: \"none\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgFilter);\nexport default __webpack_public_path__ + \"static/media/filter.ddf40c28bbf1e138937e53be53e56274.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, type JSX } from 'react';\n\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    Avatar,\n    Card,\n    Checkbox,\n    DialogTitle,\n    FormControlLabel,\n    MenuItem,\n    Select,\n} from '@mui/material';\n\nimport {\n    Warning as WarningIcon,\n    Schedule as ScheduleIcon,\n    Lens as SettingsIcon,\n    Check as IconCheck,\n    Close as IconClose,\n} from '@mui/icons-material';\n\nimport { green, grey, orange, red } from '@mui/material/colors';\n\nimport { I18n } from '@iobroker/adapter-react-v5';\n\nimport filterIcon from '../../assets/filter.svg';\n\nconst styles: Record<string, React.CSSProperties> = {\n    root: {\n        width: '100%',\n        padding: 10,\n    },\n    paper: {\n        // maxWidth: 1000,\n        width: '100%',\n        maxHeight: 800,\n        // height: 'calc(100% - 32px)',\n    },\n    overflowHidden: {\n        display: 'flex',\n        overflow: 'hidden',\n    },\n    pre: {\n        overflow: 'auto',\n        whiteSpace: 'pre-wrap',\n        margin: 0,\n    },\n    rowBlock: {\n        display: 'flex',\n        width: '100%',\n        justifyContent: 'space-between',\n        margin: '10px 0',\n    },\n    select: {\n        minWidth: 200,\n    },\n    checkbox: {\n        minWidth: 160,\n    },\n    statusIcon_1: {\n        // circle\n        border: '2px solid grey',\n        borderRadius: 20,\n        color: 'grey',\n    },\n    statusIcon_2: {\n        // square\n        border: '2px solid grey',\n        borderRadius: 20,\n        color: '#d32f2f',\n    },\n    statusIcon_3: {\n        // triangle\n        border: 0,\n        borderRadius: 0,\n        color: '#ffa726',\n    },\n    statusIcon_4: {\n        // watch\n        border: '2px solid grey',\n        borderRadius: 20,\n        color: '#0055a9',\n    },\n    statusIcon_5: {\n        // circle ?\n        border: '2px solid grey',\n        borderRadius: 20,\n    },\n    statusIcon_6: {\n        // circle ?\n        border: '2px solid grey',\n        borderRadius: 20,\n    },\n    menuWrapper: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    iconWrapper: {\n        marginRight: 10,\n    },\n    textWrapper: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n    square: {\n        width: 24,\n        height: 24,\n        marginRight: 10,\n        filter: 'invert(0%) sepia(90%) saturate(300%) hue-rotate(-537deg) brightness(99%) contrast(97%)',\n    },\n    statusIcon_green: {\n        // square\n        border: '2px solid grey',\n        borderRadius: 2,\n    },\n    statusIcon_red: {\n        // circle\n        border: '2px solid grey',\n        borderRadius: 20,\n    },\n    statusIcon_orange: {\n        // triangle\n        border: 0,\n        borderRadius: 0,\n    },\n    statusIcon_orangeDevice: {\n        // triangle\n        border: 0,\n        borderRadius: 0,\n    },\n    statusIcon_blue: {\n        // watch\n        border: '2px solid grey',\n        borderRadius: 20,\n    },\n    statusIcon_gray: {\n        // circle ?\n        border: '2px solid grey',\n        borderRadius: 20,\n    },\n    statusIcon_grey: {\n        // circle ?\n        border: '2px solid grey',\n        borderRadius: 20,\n    },\n    green: {\n        color: green[700],\n    },\n    red: {\n        color: red[700],\n    },\n    grey: {\n        color: grey[700],\n    },\n    blue: {\n        color: '#0055a9',\n    },\n    orange: {\n        color: orange[400],\n    },\n    orangeDevice: {\n        color: orange[300],\n    },\n    icon: {\n        width: 18,\n        height: 18,\n        marginRight: 8,\n        display: 'inline-block',\n    },\n    menuValue: {\n        whiteSpace: 'nowrap',\n    },\n};\n\nconst modeArray = ['none', 'daemon', 'schedule', 'once'];\n// const statusArray = [\n//     'none',\n//     'disabled',\n//     'enabled, but not alive',\n//     'enabled, alive, but not connected to controller',\n//     'enabled, alive, connected, but not connected to device or service',\n//     'enabled and OK'\n// ];\n\nconst getModeIcon = (idx: number, style: React.CSSProperties): JSX.Element | null => {\n    if (idx === 1) {\n        return <SettingsIcon style={style} />;\n    }\n    if (idx === 2) {\n        return <SettingsIcon style={style} />;\n    }\n    if (idx === 3) {\n        return <WarningIcon style={style} />;\n    }\n    if (idx === 4) {\n        return <ScheduleIcon style={style} />;\n    }\n    if (idx === 5) {\n        return (\n            <div\n                style={{\n                    ...style,\n                    width: 20,\n                    height: 20,\n                    margin: 2,\n                    borderRadius: 2,\n                }}\n            >\n                <div\n                    style={{\n                        width: 'calc(100% - 2px)',\n                        height: 'calc(100% - 2px)',\n                        borderRadius: 2,\n                        margin: 1,\n                        backgroundColor: '#66bb6a',\n                    }}\n                />\n            </div>\n        );\n    }\n\n    return null;\n};\n\nconst statusArray: Record<string, { text: string; _class: string; status: string }> = {\n    none: { text: 'none', _class: '', status: '' },\n    disabled: { text: 'disabled', _class: 'statusIcon_grey', status: 'grey' },\n    not_alive: { text: 'enabled, but not alive', _class: 'statusIcon_red', status: 'red' },\n    alive_not_connected: {\n        text: 'enabled, alive, but not connected to controller',\n        _class: 'statusIcon_orange',\n        status: 'orange',\n    },\n    alive_no_device: {\n        text: 'enabled, alive, but not connected to device or service',\n        _class: 'statusIcon_orangeDevice',\n        status: 'orange',\n    },\n    ok: { text: 'enabled and OK', _class: 'statusIcon_green', status: 'green' },\n};\n\ninterface InstanceFilterDialogProps {\n    onClose: (filter?: { filterMode: string; filterStatus: string }) => void;\n    filterMode: string;\n    filterStatus: string;\n}\n\nconst InstanceFilterDialog = ({ onClose, filterMode, filterStatus }: InstanceFilterDialogProps): JSX.Element => {\n    const [modeCheck, setModeCheck] = useState(filterMode);\n    const [statusCheck, setStatusCheck] = useState(filterStatus);\n\n    return (\n        <Dialog\n            onClose={() => onClose()}\n            open={!0}\n            sx={{ '& .MuiDialog-paper': styles.paper }}\n        >\n            <DialogTitle style={{ display: 'flex' }}>\n                <div style={{ display: 'flex' }}>\n                    <Avatar\n                        variant=\"square\"\n                        style={styles.square}\n                        src={filterIcon}\n                    />\n                    {I18n.t('Filter instances')}\n                </div>\n            </DialogTitle>\n            <DialogContent\n                style={styles.overflowHidden}\n                dividers\n            >\n                <Card style={styles.root}>\n                    <div style={styles.rowBlock}>\n                        <FormControlLabel\n                            style={styles.checkbox}\n                            control={\n                                <Checkbox\n                                    checked={!!modeCheck}\n                                    onChange={e => (e.target.checked ? setModeCheck('daemon') : setModeCheck(null))}\n                                />\n                            }\n                            label={I18n.t('Filter by mode')}\n                        />\n                        <Select\n                            disabled={!modeCheck}\n                            variant=\"standard\"\n                            value={modeCheck || 'none'}\n                            style={styles.select}\n                            onChange={el => {\n                                if (el.target.value === 'none') {\n                                    setModeCheck(null);\n                                } else {\n                                    setModeCheck(el.target.value);\n                                }\n                            }}\n                        >\n                            {modeArray.map(el => (\n                                <MenuItem\n                                    key={el}\n                                    value={el}\n                                >\n                                    {I18n.t(el)}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </div>\n                    <div style={styles.rowBlock}>\n                        <FormControlLabel\n                            style={styles.checkbox}\n                            control={\n                                <Checkbox\n                                    checked={!!statusCheck}\n                                    onChange={e => (e.target.checked ? setStatusCheck('ok') : setStatusCheck(null))}\n                                />\n                            }\n                            label={I18n.t('Filter by status')}\n                        />\n                        <Select\n                            disabled={!statusCheck}\n                            variant=\"standard\"\n                            value={statusCheck || 'none'}\n                            style={styles.select}\n                            onChange={el => {\n                                if (el.target.value === 'none') {\n                                    setStatusCheck(null);\n                                } else {\n                                    setStatusCheck(el.target.value);\n                                }\n                            }}\n                        >\n                            {Object.keys(statusArray).map((name, idx) => (\n                                <MenuItem\n                                    key={name}\n                                    value={name}\n                                >\n                                    <div style={styles.menuWrapper}>\n                                        {statusArray[name].status ? (\n                                            <div style={styles.iconWrapper}>\n                                                {getModeIcon(idx, styles[`statusIcon_${idx}`])}\n                                            </div>\n                                        ) : null}\n                                        <div style={styles.textWrapper}>{I18n.t(statusArray[name].text)}</div>\n                                    </div>\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </div>\n                </Card>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    variant=\"contained\"\n                    autoFocus\n                    disabled={modeCheck === filterMode && filterStatus === statusCheck}\n                    onClick={() => {\n                        onClose({\n                            filterMode: modeCheck,\n                            filterStatus: statusCheck,\n                        });\n                    }}\n                    color=\"primary\"\n                    startIcon={<IconCheck />}\n                >\n                    {I18n.t('Apply')}\n                </Button>\n                <Button\n                    color=\"grey\"\n                    variant=\"contained\"\n                    onClick={() => onClose()}\n                    startIcon={<IconClose />}\n                >\n                    {I18n.t('Close')}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default InstanceFilterDialog;\n","import React, { type JSX } from 'react';\nimport { Accordion, AccordionDetails, AccordionSummary } from '@mui/material';\n\nimport { ExpandMore as ExpandMoreIcon } from '@mui/icons-material';\n\nimport MaterialDynamicIcon from '../../helpers/MaterialDynamicIcon';\n\nconst styles: Record<string, React.CSSProperties> = {\n    row: {\n        paddingLeft: 8,\n        flexDirection: 'row-reverse',\n        minHeight: '48px !important',\n        height: 48,\n        fontWeight: 'bold',\n        fontSize: 16,\n    },\n    iconStyle: {\n        marginRight: 10,\n    },\n    wrapperName: {\n        margin: '0 10px',\n        display: 'flex',\n        alignItems: 'center',\n    },\n    wrapperChildren: {\n        width: '100%',\n    },\n    accordionDetails: {\n        padding: 0,\n    },\n    accordion: {\n        margin: '1px 0 !important',\n    },\n};\n\ninterface InstanceCategoryProps {\n    name: string;\n    key: string;\n    children: JSX.Element[] | JSX.Element;\n    expanded: boolean;\n    onExpand: (expanded: boolean) => void;\n}\n\nfunction InstanceCategory({ name, key, children, expanded, onExpand }: InstanceCategoryProps): JSX.Element {\n    return (\n        <Accordion\n            expanded={!!expanded}\n            onChange={() => onExpand(!expanded)}\n            style={styles.accordion}\n            key={key}\n            square\n        >\n            <AccordionSummary\n                style={styles.row}\n                expandIcon={<ExpandMoreIcon />}\n            >\n                <div style={styles.wrapperName}>\n                    <MaterialDynamicIcon\n                        iconName={name}\n                        style={styles.iconStyle}\n                    />\n                    {name}\n                </div>\n            </AccordionSummary>\n            <AccordionDetails style={styles.accordionDetails}>\n                <div style={styles.wrapperChildren}>{children}</div>\n            </AccordionDetails>\n        </Accordion>\n    );\n}\n\nexport default InstanceCategory;\n","import React, { Component, createRef, type JSX } from 'react';\n\nimport { IconButton, LinearProgress, Tooltip, Paper, InputAdornment, TextField, Box } from '@mui/material';\n\nimport {\n    PlayArrow as PlayArrowIcon,\n    Refresh as RefreshIcon,\n    BugReport as BugReportIcon,\n    Info as InfoIcon,\n    Warning as WarningIcon,\n    Error as ErrorIcon,\n    Devices as DevicesIcon,\n    ViewList as ViewListIcon,\n    ViewModule as ViewModuleIcon,\n    Close as CloseIcon,\n    ViewCompact as ViewCompactIcon,\n    Folder as FolderIcon,\n    FolderOpen as FolderOpenIcon,\n    List as ListIcon,\n} from '@mui/icons-material';\nimport { FaFilter as FilterListIcon } from 'react-icons/fa';\n\nimport {\n    type AdminConnection,\n    Router,\n    withWidth,\n    TabContent,\n    TabContainer,\n    type IobTheme,\n    type ThemeName,\n    type ThemeType,\n    TabHeader,\n    type Translate,\n} from '@iobroker/adapter-react-v5';\n\nimport AdminUtils from '@/helpers/AdminUtils';\nimport { replaceLink } from '@/helpers/utils';\nimport type InstancesWorker from '@/Workers/InstancesWorker';\nimport type { InstanceLink } from '@/components/Instances/LinksDialog';\nimport Config from './Config';\nimport InstanceGeneric, {\n    type InstanceEntry,\n    type InstanceItem,\n    type InstanceStatusType,\n} from '../components/Instances/InstanceGeneric';\nimport InstanceCard from '../components/Instances/InstanceCard';\nimport InstanceRow from '../components/Instances/InstanceRow';\nimport CustomSelectButton from '../components/CustomSelectButton';\nimport InstanceFilterDialog from '../components/Instances/InstanceFilterDialog';\nimport InstanceCategory from '../components/Instances/InstanceCategory';\n\nconst styles: Record<string, any> = {\n    paper: {\n        height: '100%',\n    },\n    iframe: {\n        height: '100%',\n        width: '100%',\n        // backgroundColor: '#FFF',\n        color: '#000',\n        borderRadius: 4,\n        boxShadow:\n            '0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)',\n        border: '0px solid #888',\n    },\n    cards: {\n        display: 'flex',\n        flexFlow: 'wrap',\n        justifyContent: 'center',\n    },\n    filterActive: (theme: IobTheme) => ({\n        color: theme.palette.primary.main,\n    }),\n    tooltip: {\n        pointerEvents: 'none',\n    },\n    grow: {\n        flexGrow: 1,\n    },\n};\n\ninterface InstancesProps {\n    t: Translate;\n    lang: ioBroker.Languages;\n    themeType: ThemeType;\n    themeName: ThemeName;\n    theme: IobTheme;\n    socket: AdminConnection;\n    instancesWorker: InstancesWorker;\n    executeCommand: (command: string) => void;\n    hosts: ioBroker.HostObject[];\n    currentHost: string;\n    currentHostName: string;\n    hostname: string;\n    adminInstance: string;\n    expertMode: boolean;\n    repository: Record<string, any>;\n    width: 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n\n    isFloatComma: boolean;\n    dateFormat: string;\n\n    onRegisterIframeRef: (el: HTMLIFrameElement) => void;\n    onUnregisterIframeRef: (el: HTMLIFrameElement) => void;\n\n    configStored: (allStored: boolean) => void;\n    handleNavigation: (tab: string, subTab?: string, param?: string) => void;\n}\n\ninterface HostData {\n    'Disk free': number;\n    'Disk size': number;\n}\n\ninterface InstancesState {\n    expertMode: boolean;\n    dialog: string | null;\n    instances: Record<string, InstanceEntry> | null;\n    dialogProp: string | null;\n    playArrow: 0 | 1 | 2; // 0 - running or stopped instances, 1 - only running instances, 2 - only stopped instances\n    onlyCurrentHost: boolean;\n    viewMode: boolean;\n    viewCategory: boolean;\n    hostData: HostData | null;\n    processes: number | null;\n    mem: number | null;\n    percent: number | null;\n    memFree: number | null;\n    filterText: string;\n    compact: boolean;\n    maxCompactGroupNumber: number;\n    filterCompactGroup: string | number;\n    // sentry: boolean;\n    deleting: string | null;\n    deleteCustomSupported: boolean;\n    currentHost: string;\n    expandedFolder: string[];\n    filterMode: string | null;\n    filterStatus: string | null;\n    showFilterDialog: boolean;\n}\n\n// every tab should get their data itself from server\nclass Instances extends Component<InstancesProps, InstancesState> {\n    static lastScrollPosition = 0;\n\n    private readonly localStorage: Storage;\n\n    private statePromise: Promise<Record<string, ioBroker.State>> | null = null;\n\n    private states: Record<string, ioBroker.State>;\n\n    private adapters: ioBroker.AdapterObject[];\n\n    private statesUpdateTimer: ReturnType<typeof setTimeout> | null = null;\n\n    private typingTimer: ReturnType<typeof setTimeout> | null = null;\n\n    private hostsTimer: ReturnType<typeof setTimeout> | null = null;\n\n    private readonly wordCache: Record<string, string>;\n\n    private readonly t: Translate;\n\n    private readonly inputRef: React.RefObject<HTMLInputElement>;\n\n    private readonly refTabContent: React.RefObject<HTMLDivElement>;\n\n    private subscribed: boolean = false;\n\n    private _cacheList: InstanceItem[] | null = null;\n\n    private shouldUpdateAfterDialogClosed: boolean = false;\n\n    private expanded = '';\n\n    private closeCommands: Record<string, (() => void) | null> = {};\n\n    constructor(props: InstancesProps) {\n        super(props);\n\n        this.localStorage = ((window as any)._localStorage as Storage) || window.localStorage;\n\n        let expandedFolder = [];\n        if (this.localStorage.getItem('Instances.expandedFolder')) {\n            try {\n                expandedFolder = JSON.parse(this.localStorage.getItem('Instances.expandedFolder'));\n            } catch {\n                // ignore\n            }\n        }\n\n        this.state = {\n            expertMode: this.props.expertMode,\n            dialog: null,\n            instances: null,\n            dialogProp: null,\n            playArrow: 0,\n            onlyCurrentHost: false,\n            viewMode: false,\n            viewCategory: false,\n            hostData: null,\n            processes: null,\n            mem: null,\n            percent: null,\n            memFree: null,\n            filterText: this.localStorage.getItem('instances.filter') || '',\n            compact: false,\n            maxCompactGroupNumber: 1,\n            filterCompactGroup: 'All',\n            // sentry: false,\n            deleting: null,\n            deleteCustomSupported: false,\n            currentHost: this.props.currentHost,\n            showFilterDialog: false,\n\n            expandedFolder,\n\n            // filter\n            filterMode: this.localStorage.getItem('Instances.filterMode')\n                ? this.localStorage.getItem('Instances.filterMode') === 'null'\n                    ? null\n                    : this.localStorage.getItem('Instances.filterMode')\n                : null,\n            filterStatus: this.localStorage.getItem('Instances.filterStatus')\n                ? this.localStorage.getItem('Instances.filterStatus') === 'null'\n                    ? null\n                    : this.localStorage.getItem('Instances.filterStatus')\n                : null,\n        };\n\n        // this.columns = {\n        //     instance: { onlyExpert: false },\n        //     actions: { onlyExpert: false },\n        //     title: { onlyExpert: false },\n        //     schedule: { onlyExpert: false },\n        //     restart: { onlyExpert: true },\n        //     log: { onlyExpert: true },\n        //     ramLimit: { onlyExpert: true },\n        //     events: { onlyExpert: true },\n        //     ram: { onlyExpert: false },\n        // };\n\n        this.states = {};\n        this.adapters = [];\n        this.statesUpdateTimer = null;\n        this.wordCache = {};\n\n        this.t = this.translate;\n        this.inputRef = createRef();\n        this.refTabContent = createRef();\n    }\n\n    translate = (word: string, arg1?: any, arg2?: any): string => {\n        if (arg1 !== undefined) {\n            return this.props.t(word, arg1, arg2);\n        }\n\n        if (!this.wordCache[word]) {\n            this.wordCache[word] = this.props.t(word);\n        }\n\n        return this.wordCache[word];\n    };\n\n    async componentDidMount(): Promise<void> {\n        this.props.instancesWorker.registerHandler(this.getInstances);\n        await this.updateData();\n        const deleteCustomSupported = await this.props.socket.checkFeatureSupported('DEL_INSTANCE_CUSTOM');\n        if (deleteCustomSupported) {\n            this.setState({ deleteCustomSupported });\n        }\n    }\n\n    async updateData(): Promise<void> {\n        await this.getParamsLocalAndPanel();\n        await this.getData();\n        await this.getHostsData();\n        await this.getInstances();\n    }\n\n    componentWillUnmount(): void {\n        this.subscribeStates(true);\n        this.props.instancesWorker.unregisterHandler(this.getInstances);\n    }\n\n    getStates(update?: boolean): Promise<Record<string, ioBroker.State>> {\n        if (update) {\n            this.statePromise = null;\n        }\n        if (!(this.statePromise instanceof Promise)) {\n            this.statePromise = this.props.socket.getForeignStates('system.adapter.*');\n        }\n\n        return this.statePromise;\n    }\n\n    static getDerivedStateFromProps(props: InstancesProps, state: InstancesState): Partial<InstancesState> | null {\n        const location = Router.getLocation();\n\n        const newState: Partial<InstancesState> = {\n            dialog: location.dialog,\n            dialogProp: location.id,\n        };\n\n        if (props.expertMode !== state.expertMode) {\n            newState.expertMode = props.expertMode;\n        }\n\n        return newState;\n    }\n\n    getInstances = async (): Promise<void> => {\n        const start = Date.now();\n        let instances: ioBroker.InstanceObject[] = [];\n        const instancesFromWorker = await this.props.instancesWorker.getObjects();\n\n        if (!instancesFromWorker) {\n            window.alert('Cannot read instances!');\n            return;\n        }\n\n        instances = Object.values(instancesFromWorker);\n\n        let memRssId = `${this.state.currentHost}.memRss`;\n        this.states[memRssId] = this.states[memRssId] || (await this.props.socket.getState(memRssId));\n\n        const host = this.states[memRssId];\n        let processes = 1;\n        let mem: number = host ? parseFloat(host.val as string) || 0 : 0;\n        const hosts: Record<string, ioBroker.HostObject> = {};\n        this.props.hosts.forEach(_host => (hosts[_host._id] = _host));\n\n        for (let i = 0; i < instances.length; i++) {\n            const inst = instances[i];\n            if (!inst || !inst.common || inst.common.host !== this.props.currentHostName) {\n                continue;\n            }\n            if (inst.common.enabled && inst.common.mode === 'daemon' && !InstanceGeneric.isCompact(inst)) {\n                memRssId = `${inst._id}.memRss`;\n                this.states[memRssId] = this.states[memRssId] || (await this.props.socket.getState(memRssId));\n                const m = this.states[memRssId];\n                mem += m ? parseFloat(m.val as string) || 0 : 0;\n                processes++;\n            }\n        }\n\n        const formatted: Record<string, InstanceEntry> = {};\n\n        instances.sort((a, b) => {\n            const pA = a._id.split('.');\n            const pB = b._id.split('.');\n            const numA = parseInt(pA[pA.length - 1], 10);\n            const numB = parseInt(pB[pB.length - 1], 10);\n            const nameA = pA[pA.length - 2];\n            const nameB = pB[pB.length - 2];\n\n            if (nameA === nameB) {\n                return numA > numB ? 1 : numA < numB ? -1 : 0;\n            }\n            return nameA > nameB ? 1 : nameA < nameB ? -1 : 0;\n        });\n\n        let maxCompactGroupNumber = 1;\n        const newState: Partial<InstancesState> = {};\n\n        // Do not make here Object.keys, as we have got an invalid order in this case\n        for (let i = 0; i < instances.length; i++) {\n            const obj = instances[i];\n            const common = obj.common || null;\n            const instanceId = parseInt(obj._id.split('.').pop(), 10);\n\n            if (\n                common.compactGroup &&\n                typeof common.compactGroup === 'number' &&\n                maxCompactGroupNumber < common.compactGroup\n            ) {\n                maxCompactGroupNumber = common.compactGroup;\n            }\n\n            const instance: InstanceEntry = {\n                id: obj._id.replace('system.adapter.', ''),\n                obj,\n                compact: !!common.compact,\n                host: common.host,\n                name: this.getName(obj),\n                image: common.icon ? `adapter/${common.name}/${common.icon}` : 'img/no-image.png',\n                enabled: common.enabled,\n                canStart: !common.onlyWWW,\n                config: common.adminUI.config !== 'none',\n                jsonConfig: common.adminUI.config === 'json',\n                materialize: common.adminUI.config === 'materialize',\n                compactMode: common.runAsCompactMode || false,\n                mode: common.mode || null,\n                schedule: common.schedule === undefined || common.schedule === null ? null : common.schedule,\n                loglevel: common.loglevel || null,\n                adapter: common.name || null,\n                version: common.version || null,\n                stoppedWhenWebExtension:\n                    obj.common.mode === 'daemon'\n                        ? obj.common.webExtension !== undefined\n                            ? !!obj.common.webExtension\n                            : undefined\n                        : undefined,\n                links: [],\n            };\n\n            const rawLinks: Record<string, string | ioBroker.LocalLink> | string =\n                common.localLinks || common.localLink || '';\n            let links: Record<string, string | InstanceLink> | null = null;\n            if (rawLinks && typeof rawLinks === 'string') {\n                links = { _default: rawLinks };\n            } else if (rawLinks && typeof rawLinks === 'object') {\n                links = rawLinks as Record<string, string>;\n            }\n\n            const names = links ? Object.keys(links) : [];\n\n            names.forEach(linkName => {\n                instance.links = instance.links || [];\n                let link: InstanceLink;\n                if (typeof links[linkName] === 'string') {\n                    link = { link: links[linkName] as string };\n                } else {\n                    link = links[linkName] as InstanceLink;\n                }\n\n                const urls =\n                    replaceLink(link.link, common.name, instanceId, {\n                        instances: instancesFromWorker,\n                        hostname: this.props.hostname,\n                        hosts,\n                        adminInstance: this.props.adminInstance,\n                    }) || [];\n\n                let name: ioBroker.StringOrTranslated = link.name || linkName;\n                if (name === '_default') {\n                    name = names.length === 1 ? '' : this.t('default');\n                } else if (typeof name === 'object') {\n                    name = AdminUtils.getText(name, this.props.lang);\n                } else {\n                    name = this.t(name);\n                }\n\n                if (urls.length === 1) {\n                    instance.links.push({\n                        name,\n                        link: urls[0].url,\n                        port: urls[0].port,\n                        color: link.color,\n                    });\n                } else if (urls.length > 1) {\n                    urls.forEach(item => {\n                        instance.links.push({\n                            name,\n                            link: item.url,\n                            port: item.port,\n                            color: link.color,\n                        });\n                    });\n                }\n            });\n\n            if (instance.stoppedWhenWebExtension) {\n                const eId =\n                    this.states[`${instance.id}.info.extension`] ||\n                    (await this.props.socket.getState(`${instance.id}.info.extension`));\n                instance.stoppedWhenWebExtension = eId ? !!eId.val : undefined;\n            }\n\n            console.log(obj._id);\n            formatted[obj._id] = instance;\n        }\n\n        console.log(`getInstances: ${Date.now() - start}`);\n\n        for (let c = 1; c <= maxCompactGroupNumber; c++) {\n            const compactGroupMemRssId = `${this.state.currentHost}.compactgroup${c}.memRss`;\n            this.states[compactGroupMemRssId] =\n                this.states[compactGroupMemRssId] || (await this.props.socket.getState(compactGroupMemRssId));\n            const m = this.states[compactGroupMemRssId];\n            if (m) {\n                mem += m ? parseFloat(m.val as string) || 0 : 0;\n                processes++;\n            }\n        }\n\n        if (this.state.deleting && !formatted[`system.adapter.${this.state.deleting}`]) {\n            newState.deleting = null;\n        }\n\n        newState.maxCompactGroupNumber = maxCompactGroupNumber;\n        newState.processes = processes;\n        newState.mem = Math.round(mem);\n        newState.instances = formatted;\n\n        this._cacheList = null;\n        this.setState(newState as InstancesState);\n    };\n\n    getParamsLocalAndPanel = async (): Promise<void> => {\n        let compact = false;\n        try {\n            const baseSettings = await this.props.socket.readBaseSettings(this.state.currentHost);\n            compact = !!baseSettings.config?.system?.compact;\n        } catch (error) {\n            window.alert(`Cannot read compact mode by host \"${this.state.currentHost}\": ${error}`);\n        }\n\n        let playArrow: 0 | 1 | 2 = 0;\n        let filterCompactGroup: string | number = 'All';\n        try {\n            playArrow = JSON.parse(this.localStorage.getItem('Instances.playArrow')) as 0 | 1 | 2;\n            // back compatibility\n            if (playArrow.toString() === 'true') {\n                playArrow = 1;\n            } else if (playArrow.toString() === 'false') {\n                playArrow = 0;\n            }\n            filterCompactGroup = JSON.parse(this.localStorage.getItem('Instances.filterCompactGroup'));\n        } catch {\n            // ignore\n        }\n\n        const onlyCurrentHost = this.localStorage.getItem('Instances.onlyCurrentHost') === 'true';\n        const viewMode = this.localStorage.getItem('Instances.viewMode') === 'true';\n        const viewCategory = this.localStorage.getItem('Instances.viewCategory') === 'true';\n\n        if (!filterCompactGroup && filterCompactGroup !== 0) {\n            filterCompactGroup = 'All';\n        }\n\n        this._cacheList = null;\n        this.setState({\n            filterCompactGroup,\n            compact,\n            onlyCurrentHost,\n            playArrow,\n            viewMode,\n            viewCategory,\n        });\n    };\n\n    async getData(update?: boolean): Promise<void> {\n        try {\n            const adapters = this.props.socket.getAdapters(update);\n            const statesProm = this.getStates();\n\n            const [states, _adapters] = await Promise.all([statesProm, adapters]);\n            this.adapters = _adapters || [];\n            this.states = states || {};\n        } catch (error) {\n            console.log(error);\n        }\n\n        if (!this.states) {\n            return;\n        }\n\n        if (!this.subscribed) {\n            this.subscribed = true;\n            this.subscribeStates();\n        }\n    }\n\n    onStateChange = (id: string, state: ioBroker.State | null): void => {\n        const oldState = this.states[id];\n        this.states[id] = state;\n        if ((!oldState && state) || (oldState && !state) || (oldState && state && oldState.val !== state.val)) {\n            if (this.state.dialog === 'config' && this.state.dialogProp) {\n                if (this.statesUpdateTimer) {\n                    clearTimeout(this.statesUpdateTimer);\n                    this.statesUpdateTimer = null;\n                }\n                this.shouldUpdateAfterDialogClosed = true;\n            } else if (!this.statesUpdateTimer) {\n                this.statesUpdateTimer = setTimeout(() => {\n                    this.statesUpdateTimer = null;\n                    this._cacheList = null;\n                    this.forceUpdate();\n                }, 1000);\n            }\n        }\n    };\n\n    subscribeStates(isUnsubscribe?: boolean): void {\n        const func = isUnsubscribe ? this.props.socket.unsubscribeState : this.props.socket.subscribeState;\n        // func('system.adapter.*', this.onStateChange);\n        func.call(this.props.socket, 'system.adapter.*.alive', this.onStateChange);\n        func.call(this.props.socket, 'system.adapter.*.connected', this.onStateChange);\n        func.call(this.props.socket, 'system.adapter.*.inputCount', this.onStateChange);\n        func.call(this.props.socket, 'system.adapter.*.memRss', this.onStateChange);\n        func.call(this.props.socket, 'system.adapter.*.outputCount', this.onStateChange);\n        func.call(this.props.socket, 'system.adapter.*.logLevel', this.onStateChange);\n        func.call(this.props.socket, 'system.adapter.*.plugins.sentry.enabled', this.onStateChange);\n        // func('system.host.*', this.onStateChange);\n        func.call(this.props.socket, 'system.host.*.diskFree', this.onStateChange);\n        func.call(this.props.socket, 'system.host.*.diskSize', this.onStateChange);\n        func.call(this.props.socket, 'system.host.*.diskWarning', this.onStateChange);\n        func.call(this.props.socket, 'system.host.*.freemem', this.onStateChange);\n        func.call(this.props.socket, '*.info.connection', this.onStateChange);\n        func.call(this.props.socket, '*.info.extension', this.onStateChange);\n    }\n\n    // returns:\n    // grey   - daemon / disabled\n    // green  - daemon / run, connected, alive\n    // blue   - schedule\n    // orangeDevice - daemon / run, connected to controller, not connected to device\n    // orange - daemon / run,not connected\n    // red    - daemon / not run, not connected\n    getInstanceStatus = (obj: ioBroker.InstanceObject): InstanceStatusType => {\n        const common = obj ? obj.common : null;\n        const mode = common?.mode || '';\n        let status: InstanceStatusType = mode === 'daemon' ? 'green' : 'blue';\n\n        if (common?.enabled && (!common.webExtension || !obj.native.webInstance || mode === 'daemon')) {\n            const alive = this.states[`${obj._id}.alive`];\n            const connected = this.states[`${obj._id}.connected`];\n            const connection = this.states[`${obj._id.replace('system.adapter.', '')}.info.connection`];\n            if (common.webExtension && obj.native.webInstance) {\n                const extension = this.states[`${obj._id.replace('system.adapter.', '')}.info.extension`];\n                if (extension) {\n                    return extension.val ? 'green' : 'red';\n                }\n            }\n\n            if (!connected?.val || !alive?.val) {\n                status = mode === 'daemon' ? 'red' : 'orangeDevice';\n            }\n            if (connection && !connection?.val && status !== 'red') {\n                status = 'orange';\n            }\n        } else {\n            status = mode === 'daemon' ? 'grey' : 'blue';\n        }\n\n        return status;\n    };\n\n    isCompactGroupCheck(id: string): boolean {\n        const obj = this.adapters.find(({ _id }) => _id === `system.adapter.${id}`);\n        return obj?.common?.compact || false;\n    }\n\n    getName(obj: ioBroker.InstanceObject): string {\n        if (!obj?.common) {\n            return '';\n        }\n        if (obj.common.titleLang) {\n            return AdminUtils.getText(obj.common.titleLang, this.props.lang);\n        }\n\n        return AdminUtils.getText(obj.common.title, this.props.lang);\n    }\n\n    getInputOutput(id: string): { stateInput: number; stateOutput: number } {\n        const stateInput = this.states[`${id}.inputCount`];\n        const stateOutput = this.states[`${id}.outputCount`];\n        return {\n            stateInput: stateInput?.val ? (stateInput.val as number) : 0,\n            stateOutput: stateOutput?.val ? (stateOutput.val as number) : 0,\n        };\n    }\n\n    isAlive(id: string): boolean {\n        const state = this.states[`${id}.alive`];\n        return !!state?.val;\n    }\n\n    isConnectedToHost(id: string): boolean {\n        const state = this.states[`${id}.connected`];\n        return !!state?.val;\n    }\n\n    isConnected(id: string): boolean | string | null {\n        const instance = this.state.instances[id];\n        return this.states[`${instance.id}.info.connection`]\n            ? (this.states[`${instance.id}.info.connection`].val as string | boolean)\n            : null;\n    }\n\n    static getStatusFilter(value: string): InstanceStatusType {\n        switch (value) {\n            case 'not_alive':\n                return 'red';\n\n            case 'alive_no_device':\n                return 'orangeDevice';\n\n            case 'alive_not_connected':\n                return 'orange';\n\n            case 'ok':\n                return 'green';\n\n            case 'disabled':\n            default:\n                return 'grey';\n        }\n    }\n\n    static getLogLevelIcon(level: ioBroker.LogLevel): JSX.Element | null {\n        if (level === 'debug') {\n            return <BugReportIcon />;\n        }\n        if (level === 'info') {\n            return <InfoIcon />;\n        }\n        if (level === 'warn') {\n            return <WarningIcon />;\n        }\n        if (level === 'error') {\n            return <ErrorIcon />;\n        }\n        return null;\n    }\n\n    onDeleteInstance = (instance: InstanceEntry, deleteCustom: boolean, deleteAdapter: boolean): void => {\n        this.setState({ deleting: instance.id }, () =>\n            this.props.executeCommand(\n                `del ${deleteAdapter ? instance.id.split('.')[0] : instance.id}${deleteCustom ? ' --custom' : ''}${this.props.expertMode ? ' --debug' : ''}`,\n            ),\n        );\n    };\n\n    isSentry(instanceId: string): boolean {\n        return !!this.states[`${instanceId}.plugins.sentry.enabled`]?.val;\n    }\n\n    cacheInstances(): InstanceItem[] {\n        const currentHostNoPrefix = this.state.currentHost.replace(/^system.host./, '');\n\n        this._cacheList = Object.keys(this.state.instances).map(id => {\n            const instance = this.state.instances[id];\n            const running = InstanceGeneric.isRunning(instance.obj);\n            const compactGroup = InstanceGeneric.isCompactGroup(instance.obj);\n            const checkCompact = this.isCompactGroupCheck(instance.adapter) && this.state.compact;\n            const compact = InstanceGeneric.isCompact(instance.obj);\n            const supportCompact = instance.compact || false;\n            const alive = this.isAlive(id);\n            const connectedToHost = this.isConnectedToHost(id);\n            const connected = this.isConnected(id);\n            const name = this.getName(instance.obj);\n            const logLevel = (this.states[`${id}.logLevel`]?.val as ioBroker.LogLevel) || instance.loglevel;\n            const logLevelObject = instance.loglevel;\n            const tier = instance?.obj?.common?.tier || 3;\n            const loglevelIcon = Instances.getLogLevelIcon(logLevel);\n            const inputOutput = this.getInputOutput(id);\n            const modeSchedule = InstanceGeneric.isModeSchedule(instance.obj);\n            const memoryLimitMB = InstanceGeneric.getMemoryLimitMB(instance.obj);\n\n            const checkSentry = InstanceGeneric.getSentrySettings(instance.obj); // is it possible to enable/disable sentry for this adapter\n            const currentSentry = this.isSentry(id);\n\n            const item: InstanceItem = {\n                id,\n                running,\n                host: instance.host,\n                nameId: instance.id,\n                compactGroup,\n                checkCompact,\n                mode: instance.mode,\n                sentry: currentSentry,\n                category: instance.obj.common.type || 'other',\n                status: this.getInstanceStatus(instance.obj),\n                alive,\n                compact,\n                supportCompact,\n                connectedToHost,\n                connected,\n                name,\n                logLevel,\n                logLevelObject,\n                tier,\n                loglevelIcon,\n                inputOutput,\n                modeSchedule,\n                checkSentry,\n                memoryLimitMB,\n                stoppedWhenWebExtension: instance.stoppedWhenWebExtension,\n                allowInstanceSettings: this.props.repository[instance.adapter]\n                    ? this.props.repository[instance.adapter].allowInstanceSettings\n                    : true,\n                allowInstanceDelete: this.props.repository[instance.adapter]\n                    ? this.props.repository[instance.adapter].allowInstanceDelete\n                    : true,\n                allowInstanceLink: this.props.repository[instance.adapter]\n                    ? this.props.repository[instance.adapter].allowInstanceLink\n                    : true,\n            };\n\n            return item;\n        });\n\n        if (this.state.playArrow) {\n            this._cacheList = this._cacheList.filter(({ running }) =>\n                this.state.playArrow === 1 ? running : !running,\n            );\n        }\n\n        if (this.state.onlyCurrentHost) {\n            this._cacheList = this._cacheList.filter(({ host }) => host === currentHostNoPrefix);\n        }\n\n        if (this.state.filterText) {\n            const filterText = this.state.filterText.toLowerCase();\n            this._cacheList = this._cacheList.filter(\n                ({ name, nameId }) =>\n                    name.toLowerCase().includes(filterText) || nameId.toLowerCase().includes(filterText),\n            );\n        }\n\n        if (\n            this.props.expertMode &&\n            (this.state.filterCompactGroup || this.state.filterCompactGroup === 0) &&\n            this.state.compact\n        ) {\n            this._cacheList = this._cacheList.filter(\n                ({ compactGroup }) =>\n                    compactGroup === this.state.filterCompactGroup ||\n                    this.state.filterCompactGroup === 'All' ||\n                    (this.state.filterCompactGroup === 'default' && (compactGroup === null || compactGroup === 1)) ||\n                    (this.state.filterCompactGroup === 'controller' && compactGroup === '0'),\n            );\n        }\n        if (this.state.filterMode) {\n            this._cacheList = this._cacheList.filter(item => item.mode === this.state.filterMode);\n        }\n        if (this.state.filterStatus) {\n            const status = Instances.getStatusFilter(this.state.filterStatus);\n            this._cacheList = this._cacheList.filter(item => status === item.status);\n        }\n\n        return this._cacheList;\n    }\n\n    clearAllFilters(): void {\n        const state: Partial<InstancesState> = {\n            playArrow: 0,\n            onlyCurrentHost: false,\n            filterCompactGroup: 'All',\n            filterMode: null,\n            filterStatus: null,\n            filterText: '',\n        };\n\n        this.localStorage.removeItem('instances.filter');\n        this.localStorage.removeItem('Instances.playArrow');\n        this.localStorage.removeItem('Instances.onlyCurrentHost');\n        this.localStorage.removeItem('Instances.filterCompactGroup');\n        this.localStorage.removeItem('Instances.filterMode');\n        this.localStorage.removeItem('Instances.filterStatus');\n\n        this._cacheList = null;\n        this.setState(state as InstancesState, () => {\n            if (this.inputRef.current) {\n                this.inputRef.current.value = '';\n            }\n            this.cacheInstances();\n        });\n    }\n\n    onMaxCompactGroupNumber = (maxCompactGroupNumber: number): void => this.setState({ maxCompactGroupNumber });\n\n    onRegisterClose = (panel: string, closeCommand: (() => void) | null): void => {\n        this.closeCommands[panel] = closeCommand;\n    };\n\n    saveScrollPosition = (): void => {\n        Instances.lastScrollPosition = (this.refTabContent.current?.parentNode as HTMLDivElement)?.scrollTop;\n    };\n\n    getPanels(): JSX.Element[] | JSX.Element {\n        if (!this._cacheList) {\n            this.cacheInstances();\n        }\n\n        const context = {\n            adminInstance: this.props.adminInstance,\n            onDeleteInstance: this.onDeleteInstance,\n            expertMode: this.props.expertMode,\n            hosts: this.props.hosts,\n            socket: this.props.socket,\n            t: this.t,\n            lang: this.props.lang,\n            themeType: this.props.themeType,\n            setMaxCompactGroupNumber: this.onMaxCompactGroupNumber,\n            maxCompactGroupNumber: this.state.maxCompactGroupNumber,\n            deleteCustomSupported: this.state.deleteCustomSupported,\n            states: this.states,\n            onToggleExpanded: this.onToggleExpanded,\n            getInstanceStatus: this.getInstanceStatus,\n            theme: this.props.theme,\n            onRegisterClose: this.onRegisterClose,\n        };\n\n        const list = this._cacheList.map((item, idx) => {\n            const id = item.id;\n            const instance = this.state.instances[id];\n\n            if (this.state.viewMode) {\n                return {\n                    category: item.category,\n                    render: (\n                        <InstanceCard\n                            saveScrollPosition={this.saveScrollPosition}\n                            deleting={this.state.deleting === instance.id}\n                            id={id}\n                            idx={idx}\n                            instance={instance}\n                            key={instance.id}\n                            item={item}\n                            context={context}\n                        />\n                    ),\n                };\n            }\n            return {\n                category: item.category,\n                render: (\n                    <InstanceRow\n                        saveScrollPosition={this.saveScrollPosition}\n                        deleting={this.state.deleting === instance.id}\n                        id={id}\n                        idx={idx}\n                        instance={instance}\n                        key={instance.id}\n                        item={item}\n                        context={context}\n                    />\n                ),\n            };\n        });\n\n        if (!list.length) {\n            return (\n                <div\n                    title={this.t('Click to clear all filters')}\n                    onClick={() => this.clearAllFilters()}\n                    style={{\n                        margin: 20,\n                        fontSize: 26,\n                        textAlign: 'center',\n                        cursor: 'pointer',\n                    }}\n                >\n                    {this.t('all items are filtered out')}\n                </div>\n            );\n        }\n\n        if (!this.state.viewMode && this.state.viewCategory) {\n            const categoryArray: string[] = [];\n\n            list.forEach(({ category }) => !categoryArray.includes(category) && categoryArray.push(category));\n\n            categoryArray.sort((a, b) => {\n                if (a === 'general' && b !== 'general') {\n                    return -1;\n                }\n                if (a !== 'general' && b === 'general') {\n                    return 1;\n                }\n                if (a > b) {\n                    return 1;\n                }\n                if (a < b) {\n                    return -1;\n                }\n                return 0;\n            });\n\n            return categoryArray.map(name => (\n                <InstanceCategory\n                    key={name}\n                    name={name}\n                    expanded={this.state.expandedFolder.includes(name)}\n                    onExpand={expanded => {\n                        const expandedFolder = [...this.state.expandedFolder];\n                        const pos = expandedFolder.indexOf(name);\n                        if (expanded) {\n                            if (pos === -1) {\n                                expandedFolder.push(name);\n                                expandedFolder.sort();\n                            }\n                        } else if (pos !== -1) {\n                            expandedFolder.splice(pos, 1);\n                        }\n                        this.localStorage.setItem('Instances.expandedFolder', JSON.stringify(expandedFolder));\n                        this.setState({ expandedFolder });\n                    }}\n                >\n                    {list.filter(({ category }) => category === name).map(({ render }) => render)}\n                </InstanceCategory>\n            ));\n        }\n\n        return list.map(({ render }) => render);\n    }\n\n    onToggleExpanded = (panel: string, expanded: boolean): void => {\n        if (this.expanded !== panel && expanded && this.closeCommands[this.expanded]) {\n            this.closeCommands[this.expanded]();\n        }\n        this.expanded = expanded ? panel : null;\n    };\n\n    async getHostsData(): Promise<void> {\n        void this.props.socket\n            .getHostInfo(this.state.currentHost, false, 10000)\n            .catch(error => {\n                if (!error.toString().includes('May not read')) {\n                    window.alert(`Cannot read host information: ${error}`);\n                }\n                return {};\n            })\n            .then(hostData => {\n                this._cacheList = null;\n                this.setState({ hostData });\n            });\n\n        let memState;\n        const memAvailable = await this.props.socket.getState(`${this.state.currentHost}.memAvailable`);\n        const freemem = await this.props.socket.getState(`${this.state.currentHost}.freemem`);\n        const object = await this.props.socket.getObject(`${this.state.currentHost}`);\n\n        if (memAvailable) {\n            memState = memAvailable;\n        } else if (freemem) {\n            memState = freemem;\n        }\n\n        if (memState) {\n            const totalmem = (object?.native.hardware.totalmem || 0) / (1024 * 1024);\n            const percent = Math.round(((memState.val as number) / totalmem) * 100);\n            this._cacheList = null;\n            this.setState({\n                percent,\n                memFree: memState.val as number,\n            });\n        }\n    }\n\n    changeStartedStopped = (): void => {\n        this._cacheList = null;\n        this.setState(state => {\n            const playArrow = !state.playArrow ? 1 : state.playArrow === 1 ? 2 : 0;\n            this.localStorage.setItem('Instances.playArrow', JSON.stringify(playArrow));\n            return { playArrow };\n        });\n    };\n\n    changeCompactGroup(filterCompactGroup: string | number): void {\n        this._cacheList = null;\n        this.localStorage.setItem('Instances.filterCompactGroup', JSON.stringify(filterCompactGroup));\n        this.setState({ filterCompactGroup });\n    }\n\n    handleFilterChange(event: React.ChangeEvent<HTMLInputElement>): void {\n        if (this.typingTimer) {\n            clearTimeout(this.typingTimer);\n        }\n\n        this.typingTimer = setTimeout(\n            value => {\n                this.typingTimer = null;\n                this._cacheList = null;\n                this.setState({ filterText: value });\n                this.localStorage.setItem('instances.filter', value);\n            },\n            300,\n            event.target.value,\n        );\n    }\n\n    renderFilterDialog(): JSX.Element | null {\n        if (!this.state.showFilterDialog) {\n            return null;\n        }\n\n        return (\n            <InstanceFilterDialog\n                filterMode={this.state.filterMode}\n                filterStatus={this.state.filterStatus}\n                onClose={newState => {\n                    if (newState) {\n                        this._cacheList = null;\n                        this.localStorage.setItem('Instances.filterMode', newState.filterMode);\n                        this.localStorage.setItem('Instances.filterStatus', newState.filterStatus);\n                        this.setState(newState);\n                    }\n                    this.setState({ showFilterDialog: false });\n                }}\n            />\n        );\n    }\n\n    render(): JSX.Element {\n        if (!this.state.instances) {\n            return <LinearProgress />;\n        }\n\n        if (this.props.currentHost !== this.state.currentHost) {\n            this.hostsTimer =\n                this.hostsTimer ||\n                setTimeout(() => {\n                    this.hostsTimer = null;\n                    this.setState(\n                        {\n                            currentHost: this.props.currentHost,\n                        },\n                        () => this.updateData(),\n                    );\n                }, 200);\n        }\n\n        if (this.state.dialog === 'config' && this.state.dialogProp) {\n            const instance = this.state.instances[this.state.dialogProp] || null;\n            if (instance) {\n                return (\n                    <Paper style={styles.paper}>\n                        {this.renderFilterDialog()}\n                        <Config\n                            expertMode={this.props.expertMode}\n                            adapter={instance.id.split('.')[0]}\n                            adminInstance={this.props.adminInstance}\n                            style={styles.iframe}\n                            configStored={this.props.configStored}\n                            dateFormat={this.props.dateFormat}\n                            icon={instance.image}\n                            instance={parseInt(instance.id.split('.')[1])}\n                            isFloatComma={this.props.isFloatComma}\n                            jsonConfig={instance.jsonConfig}\n                            lang={this.props.lang}\n                            materialize={instance.materialize}\n                            socket={this.props.socket}\n                            t={this.t}\n                            theme={this.props.theme}\n                            themeName={this.props.themeName}\n                            themeType={this.props.themeType}\n                            width={this.props.width}\n                            version={instance.version}\n                            onRegisterIframeRef={(ref: HTMLIFrameElement) => this.props.onRegisterIframeRef(ref)}\n                            onUnregisterIframeRef={(ref: HTMLIFrameElement) => this.props.onUnregisterIframeRef(ref)}\n                            handleNavigation={this.props.handleNavigation}\n                        />\n                    </Paper>\n                );\n            }\n        } else if (Instances.lastScrollPosition) {\n            setTimeout(\n                (scrollPos: number): void => {\n                    if (this.refTabContent.current?.parentNode) {\n                        (this.refTabContent.current?.parentNode as HTMLDivElement).scrollTop = scrollPos;\n                    }\n                },\n                200,\n                Instances.lastScrollPosition,\n            );\n            Instances.lastScrollPosition = 0;\n        }\n\n        if (this.shouldUpdateAfterDialogClosed) {\n            this.shouldUpdateAfterDialogClosed = false;\n            if (!this.statesUpdateTimer) {\n                if (!this.statesUpdateTimer) {\n                    this.statesUpdateTimer = setTimeout(() => {\n                        this.statesUpdateTimer = null;\n                        this.forceUpdate();\n                    }, 300);\n                }\n            }\n        }\n\n        const hostData = this.state.hostData\n            ? `${\n                  this.state.hostData['Disk free']\n                      ? `${this.t('Disk free')}: ${Math.round(this.state.hostData['Disk free'] / (this.state.hostData['Disk size'] / 100))}%, `\n                      : ''\n              }${this.t('Total RAM usage')}: ${this.state.mem} Mb / ` +\n              `${this.t('Free')}: ${this.state.percent}% = ${this.state.memFree} Mb ` +\n              `[${this.t('Host')}: ${this.props.currentHostName} - ${this.state.processes} ${this.state.processes === 1 ? this.t('process') : this.t('processes')}]`\n            : null;\n\n        return (\n            <TabContainer>\n                {this.renderFilterDialog()}\n                <TabHeader>\n                    <Tooltip\n                        title={this.t('Show / hide List')}\n                        slotProps={{ popper: { sx: styles.tooltip } }}\n                    >\n                        <IconButton\n                            size=\"large\"\n                            onClick={() => {\n                                this.setState({ viewMode: !this.state.viewMode });\n                                this.localStorage.setItem('Instances.viewMode', this.state.viewMode ? 'false' : 'true');\n                            }}\n                        >\n                            {this.state.viewMode ? <ViewModuleIcon /> : <ViewListIcon />}\n                        </IconButton>\n                    </Tooltip>\n\n                    {!this.state.viewMode && (\n                        <Tooltip\n                            title={this.t('Category')}\n                            slotProps={{ popper: { sx: styles.tooltip } }}\n                        >\n                            <IconButton\n                                size=\"large\"\n                                onClick={() => {\n                                    this.setState({ viewCategory: !this.state.viewCategory });\n                                    this.localStorage.setItem(\n                                        'Instances.viewCategory',\n                                        this.state.viewCategory ? 'false' : 'true',\n                                    );\n                                }}\n                            >\n                                <ListIcon color={this.state.viewCategory ? 'primary' : 'inherit'} />\n                            </IconButton>\n                        </Tooltip>\n                    )}\n\n                    {!this.state.viewMode && this.state.viewCategory && (\n                        <>\n                            <Tooltip\n                                title={this.t('expand all')}\n                                slotProps={{ popper: { sx: styles.tooltip } }}\n                            >\n                                <IconButton\n                                    size=\"large\"\n                                    onClick={() => {\n                                        // all folders\n                                        const expandedFolder: string[] = [];\n                                        this._cacheList.forEach(\n                                            ({ category }) =>\n                                                !expandedFolder.includes(category) && expandedFolder.push(category),\n                                        );\n                                        expandedFolder.sort();\n                                        this.localStorage.setItem(\n                                            'Instances.expandedFolder',\n                                            JSON.stringify(expandedFolder),\n                                        );\n                                        this.setState({ expandedFolder });\n                                    }}\n                                >\n                                    <FolderOpenIcon />\n                                </IconButton>\n                            </Tooltip>\n                            <Tooltip\n                                title={this.t('collapse all')}\n                                slotProps={{ popper: { sx: styles.tooltip } }}\n                            >\n                                <IconButton\n                                    size=\"large\"\n                                    onClick={() => {\n                                        this.localStorage.removeItem('Instances.expandedFolder');\n                                        this.setState({ expandedFolder: [] });\n                                    }}\n                                >\n                                    <FolderIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </>\n                    )}\n                    <Tooltip\n                        title={this.t('Reload')}\n                        slotProps={{ popper: { sx: styles.tooltip } }}\n                    >\n                        <IconButton\n                            size=\"large\"\n                            onClick={() => this.getData(true)}\n                        >\n                            <RefreshIcon />\n                        </IconButton>\n                    </Tooltip>\n                    {this.props.hosts.length > 1 ? (\n                        <Tooltip\n                            title={this.t('Show instances only for current host')}\n                            slotProps={{ popper: { sx: styles.tooltip } }}\n                        >\n                            <IconButton\n                                size=\"large\"\n                                onClick={() => {\n                                    this.setState({ onlyCurrentHost: !this.state.onlyCurrentHost });\n                                    this.localStorage.setItem(\n                                        'Instances.onlyCurrentHost',\n                                        this.state.onlyCurrentHost ? 'false' : 'true',\n                                    );\n                                }}\n                            >\n                                <DevicesIcon color={this.state.onlyCurrentHost ? 'primary' : 'inherit'} />\n                            </IconButton>\n                        </Tooltip>\n                    ) : null}\n                    <Tooltip\n                        title={this.t(\n                            !this.state.playArrow\n                                ? 'Show running or stopped instances'\n                                : this.state.playArrow === 1\n                                  ? 'Showed only running instances'\n                                  : 'Showed only stopped instances',\n                        )}\n                        slotProps={{ popper: { sx: styles.tooltip } }}\n                    >\n                        <IconButton\n                            size=\"large\"\n                            onClick={() => this.changeStartedStopped()}\n                        >\n                            <PlayArrowIcon\n                                style={this.state.playArrow === 2 ? { color: 'red' } : null}\n                                color={this.state.playArrow === 1 ? 'primary' : 'inherit'}\n                            />\n                        </IconButton>\n                    </Tooltip>\n                    <Tooltip\n                        title={this.t('Filter instances')}\n                        slotProps={{ popper: { sx: styles.tooltip } }}\n                    >\n                        <IconButton\n                            size=\"large\"\n                            onClick={() => this.setState({ showFilterDialog: true })}\n                            sx={this.state.filterMode || this.state.filterStatus ? styles.filterActive : undefined}\n                        >\n                            <FilterListIcon style={{ width: 16, height: 16 }} />\n                        </IconButton>\n                    </Tooltip>\n                    {/* this.props.expertMode && <Tooltip title=\"sentry\" slotProps={{ popper: { sx: styles.tooltip } }}>\n                    <IconButton\n                        size=\"small\"\n                        style={styles.button}\n                        onClick={() => {\n                            this.setState({ sentry: !this.state.sentry });\n                            this.localStorage.setItem(`Instances.sentry`, this.state.sentry ? 'false' : 'true');\n                        }}\n                    >\n                        <CardMedia\n                            className={UtilsCommon.clsx(classes.sentry, !this.state.sentry && classes.contrast0)}\n                            component=\"img\"\n                            image={sentry}\n                        />\n                    </IconButton>\n                </Tooltip> */}\n                    {this.props.expertMode && this.state.compact ? (\n                        <CustomSelectButton\n                            title={this.t('Filter specific compact group')}\n                            t={this.t}\n                            arrayItem={[\n                                { name: 'All' },\n                                { name: 'controller' },\n                                { name: 'default' },\n                                ...Array(this.state.maxCompactGroupNumber - 1)\n                                    .fill(0)\n                                    .map((_, idx) => ({ name: idx + 2 })),\n                            ]}\n                            buttonIcon={\n                                <ViewCompactIcon\n                                    style={{ marginRight: 4 }}\n                                    color=\"primary\"\n                                />\n                            }\n                            onClick={value => this.changeCompactGroup(value)}\n                            value={this.state.filterCompactGroup}\n                        />\n                    ) : null}\n                    <div style={styles.grow} />\n                    <TextField\n                        variant=\"standard\"\n                        inputRef={this.inputRef}\n                        label={this.t('Filter')}\n                        sx={{ margin: { xs: '0 0 2px 16px', md: '5px 0 5px 0' } }}\n                        defaultValue={this.state.filterText}\n                        onChange={(event: React.ChangeEvent<HTMLInputElement>) => this.handleFilterChange(event)}\n                        slotProps={{\n                            input: {\n                                endAdornment: this.state.filterText ? (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            size=\"small\"\n                                            onClick={() => {\n                                                this.inputRef.current.value = '';\n                                                this._cacheList = null;\n                                                this.setState({ filterText: '' });\n                                                this.localStorage.setItem('instances.filter', '');\n                                            }}\n                                        >\n                                            <CloseIcon />\n                                        </IconButton>\n                                    </InputAdornment>\n                                ) : null,\n                            },\n                        }}\n                    />\n                    <div style={styles.grow} />\n                    <Box\n                        component=\"span\"\n                        sx={{ display: { xs: 'none', sm: 'inline-block' } }}\n                    >\n                        {hostData}\n                    </Box>\n                </TabHeader>\n                <TabContent overflow=\"auto\">\n                    <div\n                        ref={this.refTabContent}\n                        style={this.state.viewMode ? styles.cards : undefined}\n                    >\n                        {this.getPanels()}\n                    </div>\n                </TabContent>\n            </TabContainer>\n        );\n    }\n}\n\nexport default withWidth()(Instances);\n"],"names":["styles","modalDialog","minWidth","maxWidth","overflowHidden","display","overflow","titleIcon","marginRight","content","fontSize","languageButton","position","right","top","languageButtonActive","theme","color","palette","primary","main","_ref","toggleTranslation","noTranslation","title","fullWidth","help","progress","icon","disableApplyIfNotChanged","applyButton","onClose","children","titleButtonApply","titleButtonClose","onApply","textInput","defaultValue","disableApply","value","setValue","useState","useEffect","Icon","Utils","getStyle","_jsxs","Dialog","open","disableEscapeKeyDown","sx","DialogTitle","_jsx","style","I18n","getLanguage","IconButton","size","undefined","onClick","t","LanguageIcon","DialogContent","paddingTop","TextField","autoComplete","autoFocus","variant","multiline","onChange","e","target","slotProps","input","endAdornment","InputAdornment","CloseIcon","DialogActions","Button","startIcon","CheckIcon","disabled","button","marginLeft","arrayItem","contained","buttonIcon","icons","translateSuffix","anchorEl","setAnchorEl","_Fragment","Tooltip","popper","pointerEvents","currentTarget","MaterialDynamicIcon","iconName","Menu","keepMounted","Boolean","map","_ref2","idx","name","MenuItem","selected","className","placeContent","checkIcon","green","cancelIcon","red","wrapperContent","flexFlow","alignItems","props","Grid2","container","direction","spacing","state","CheckCircleIcon","CancelIcon","Typography","ICON_CACHE","objIcon","All","AllInclusive","messaging","Message","communication","WifiTethering","general","Apps","logic","VpnKey","alarm","NotificationsActive","SystemUpdateAlt","EmojiSymbols","multimedia","PermMedia","network","SettingsEthernet","storage","Storage","visualization","Visibility","SettingsBrightness","DateRange","energy","BatteryChargingFull","garden","FilterVintage","geoposition","LocationOn","hardware","Phonelink","health","Favorite","household","House","infrastructure","Apartment","lighting","EmojiObjects","protocols","DialerSip","utility","PhonelinkSetup","vehicle","AirportShuttle","BubbleChart","Widgets","weather","Brightness6","metering","LinearScale","adapter","socket","url","setUrl","Promise","getObject","then","obj","_obj$common","common","src","alt","Element","Help","arrayLogLevel","root","height","flexDirection","scroll","overflowY","instanceIcon","width","verticalAlign","version","opacity","versionAliveConnected","mode","versionAliveNotConnected","buttonControl","padding","transition","enabled","backgroundColor","hide","visibility","formControl","marginBottom","logLevel","grey","blue","orange","orangeDevice","tooltip","Config","Component","constructor","super","refIframe","registered","onObjectChange","id","_obj$common2","_obj$common3","_obj$common4","this","instance","setState","running","onlyWWW","canStart","loglevel","onStateChange","instanceId","alive","val","connectedToHost","connected","extension","tempLogLevel","closeConfig","event","origin","window","location","data","message","easyMode","handleNavigation","configStored","startsWith","split","tab","subTab","parameter","checkedExist","showStopAdminDialog","logOnTheFlyValue","logLevelValue","showLogLevelDialog","componentDidUpdate","_this$refIframe","contentWindow","onRegisterIframeRef","componentDidMount","_this$refIframe2","fileExists","exist","exists","alert","subscribeObject","async","_obj$common5","_obj$common6","_obj$common7","_extension","_obj$common8","_obj$common9","_obj$common10","_obj$common11","getState","subscribeState","native","adapterDocLangs","docs","Object","keys","catch","error","console","addEventListener","attachEvent","getInstanceStatus","_this$state$common","_this$state$common2","_this$state$native","status","webExtension","webInstance","_this$state$native2","componentWillUnmount","unsubscribeObject","removeEventListener","detachEvent","onUnregisterIframeRef","renderHelpButton","jsonConfig","Fab","_this$state$adapterDo","lang","includes","AdminUtils","getDocsLinkForAdapter","adapterName","HelpIcon","getConfigurator","JsonConfig","expertMode","themeName","themeType","dateFormat","isFloatComma","DeviceManager","materialize","ref","el","returnStopAdminDialog","DialogConfirm","text","ok","result","extendObject","renderLogLevelDialog","FormControl","marginTop","InputLabel","Select","FormControlLabel","control","Checkbox","checked","label","FormHelperText","render","Paper","AppBar","Toolbar","onFocus","stopPropagation","ArrowBack","preventDefault","adminInstance","PauseIcon","PlayArrowIcon","RefreshIcon","EditIcon","nowrap","component","img","LinksDialog","links","length","firstPort","port","showPort","find","item","textAlign","List","link","ListItemButton","getInvertedColor","replace","ListItemAvatar","Avatar","image","ListItemText","getText","arrayTier","desc","m","minHeight","background","default","boxShadow","imageBlock","justifyContent","hostInfo","addCompact","selectStyle","margin","deleting","left","zIndex","sentry","objectFit","filter","displayFlex","marginLeft5","marginRight5","instanceStateNotEnabled1","instanceStateNotEnabled2","instanceStateNotAlive1","instanceStateNotAlive2","instanceStateAliveNotConnected1","instanceStateAliveNotConnected2","instanceStateAliveAndConnected1","instanceStateAliveAndConnected2","statusIcon_green","border","borderRadius","statusIcon_red","statusIcon_orange","statusIcon_orangeDevice","statusIcon_blue","statusIcon_grey","hiddenOpacity","cursor","smallAvatar","statusIndicator","transparent","silly","debug","info","warn","amber","scheduleIcon","memoryIcon","contrast0","hidden","okSymbol","okSymbolInner","editButton","isTouchDevice","maxHeight","InstanceGeneric","arguments","commandClose","expanded","context","onRegisterClose","getDefaultState","openDialog","openSelectCompactGroup","openDialogCron","openDialogSchedule","openDialogName","openDialogLogLevel","openDialogDelete","openDialogMemoryLimit","openDialogHost","openDialogCompact","openDialogTier","showLinks","logOnTheFly","compactGroup","maxCompactGroupNumber","tier","host","deleteCustom","visibleEdit","isCompact","runAsCompactMode","isSentry","_this$props$context$s","states","getSchedule","schedule","isRunning","isCompactGroup","getSentrySettings","_obj$common6$plugins","plugins","isModeSchedule","getMemoryLimitMB","memoryLimitMB","getRestartSchedule","restartSchedule","setCommonValue","toggleSentry","sentryEnabled","setTier","setName","titleLang","setLogLevel","setSchedule","setObject","_id","setMemoryLimitMB","toggleCompactMode","setRestartSchedule","setHost","setCompactGroup","parseInt","setMaxCompactGroupNumber","getMemory","renderDeleteDialog","deleteCustomSupported","supportCustoms","DeleteIcon","onDeleteInstance","renderEditNameDialog","CustomModal","toString","renderEditLogLevelDialog","renderEditMemoryLimitDialog","parseFloat","renderEditHostDialog","SelectWithIcon","list","hosts","removePrefix","renderEditCompactGroupDialog","autoWidth","onOpen","Array","fill","_","renderEditTierDialog","renderStopAdminDialog","renderLinksDialog","renderCronDialog","DialogComplexCron","clearButton","cron","onOk","renderScheduleDialog","renderDialogs","renderModeIcon","getModeIcon","stoppedWhenWebExtension","WarningIcon","SettingsIcon","ScheduleIcon","renderTooltip","next","prev","cronText","cronstrue","locale","expr","parser","toDate","State","toLocaleDateString","toLocaleTimeString","renderMemoryUsage","InstanceInfo","MemoryIcon","renderPlayPause","renderSettingsButton","config","saveScrollPosition","Router","doNavigate","BuildIcon","renderRestartButton","renderLink","InputIcon","renderEditNameButton","renderInputOutput","ImportExportIcon","inputOutput","stateInput","stateOutput","renderHost","TextWithIcon","renderEditHostButton","renderSentry","CardMedia","noSentry","renderCompactGroupEnabled","checkCompact","ViewCompactIcon","compact","renderVersion","renderInfo","hideName","instanceName","renderLogLevel","loglevelIcon","logLevelObject","renderSchedule","renderRestartSchedule","renderRamLimit","renderCompactGroup","renderTier","_arrayTier$find","LowPriorityIcon","renderHostWithButton","HostIcon","renderDeleteButton","instances","getAdapterInstances","genericStyles","fab","bottom","collapse","collapseOff","close","mb","transform","footerBlock","p","versionDate","alignSelf","fontWeight","paddingLeft","cardContent","mt","cardContentH5","marginTop10","overflowAuto","collapseIcon","enableButton","paddingBottom","backgroundSize","assign","mouseOver","renderSecondCardInfo","_this$props$context$h","Box","CardContent","onToggleExpanded","gutterBottom","modeSchedule","supportCompact","IsVisible","sm","xs","checkSentry","Card","onMouseOver","onMouseOut","MoreVertIcon","onMouseEnter","onMouseLeave","row","pl","pr","invisible","ml","hidden1250","whiteSpace","textOverflow","visible1250","visible1050","hidden1050","hidden800","visible800","hidden570","visible570","hidden1230","hidden380","flexGrow","secondaryHeading","secondaryHeadingDiv","secondaryHeadingDivDiv","gridStyle","lineHeight","paddingRight200","maxWidth300","width150","desktopRow","desktopIcon","desktopRowContent","desktopButton","rowGridLine","desktop","innerWidth","renderDetails","AccordionDetails","md","_this$props$context$h2","stateTooltip","rootStyle","Accordion","square","AccordionSummary","expandIcon","ExpandMoreIcon","wrap","paper","pre","rowBlock","select","checkbox","statusIcon_1","statusIcon_2","statusIcon_3","statusIcon_4","statusIcon_5","statusIcon_6","menuWrapper","iconWrapper","textWrapper","statusIcon_gray","menuValue","modeArray","statusArray","none","_class","not_alive","alive_not_connected","alive_no_device","filterMode","filterStatus","modeCheck","setModeCheck","statusCheck","setStatusCheck","filterIcon","dividers","IconCheck","IconClose","iconStyle","wrapperName","wrapperChildren","accordionDetails","accordion","key","onExpand","iframe","cards","filterActive","grow","Instances","localStorage","statePromise","adapters","statesUpdateTimer","typingTimer","hostsTimer","wordCache","inputRef","refTabContent","subscribed","_cacheList","shouldUpdateAfterDialogClosed","closeCommands","translate","word","arg1","arg2","getInstances","start","Date","now","instancesFromWorker","instancesWorker","getObjects","values","memRssId","currentHost","processes","mem","forEach","_host","i","inst","currentHostName","formatted","sort","a","b","pA","pB","numA","numB","nameA","nameB","newState","pop","getName","adminUI","compactMode","rawLinks","localLinks","localLink","_default","names","linkName","urls","replaceLink","hostname","push","eId","log","c","compactGroupMemRssId","Math","round","getParamsLocalAndPanel","_baseSettings$config","_baseSettings$config$","readBaseSettings","system","playArrow","filterCompactGroup","JSON","parse","getItem","onlyCurrentHost","viewMode","viewCategory","oldState","dialog","dialogProp","clearTimeout","setTimeout","forceUpdate","connection","deleteAdapter","executeCommand","onMaxCompactGroupNumber","panel","closeCommand","_this$refTabContent$c","_this$refTabContent$c2","lastScrollPosition","current","parentNode","scrollTop","changeStartedStopped","setItem","stringify","_localStorage","expandedFolder","hostData","percent","memFree","filterText","showFilterDialog","createRef","registerHandler","updateData","checkFeatureSupported","getData","getHostsData","subscribeStates","unregisterHandler","getStates","update","getForeignStates","getDerivedStateFromProps","getLocation","getAdapters","statesProm","_adapters","all","isUnsubscribe","func","unsubscribeState","call","isCompactGroupCheck","getInputOutput","isAlive","isConnectedToHost","isConnected","getStatusFilter","getLogLevelIcon","level","BugReportIcon","InfoIcon","ErrorIcon","_this$states","cacheInstances","currentHostNoPrefix","_this$states2","_instance$obj","_instance$obj$common","currentSentry","nameId","category","type","allowInstanceSettings","repository","allowInstanceDelete","allowInstanceLink","_ref3","toLowerCase","_ref4","_ref5","clearAllFilters","removeItem","getPanels","InstanceCard","InstanceRow","categoryArray","_ref6","InstanceCategory","pos","indexOf","splice","_ref7","_ref8","_ref9","memState","getHostInfo","memAvailable","freemem","object","totalmem","changeCompactGroup","handleFilterChange","renderFilterDialog","InstanceFilterDialog","LinearProgress","scrollPos","_this$refTabContent$c3","_this$refTabContent$c4","TabContainer","TabHeader","ViewModuleIcon","ViewListIcon","ListIcon","_ref10","FolderOpenIcon","FolderIcon","DevicesIcon","FilterListIcon","CustomSelectButton","TabContent","withWidth"],"sourceRoot":""}