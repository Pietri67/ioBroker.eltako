{"version":3,"file":"static/js/4289.fb330902.chunk.js","mappings":"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","sources":["assets/sentry.svg","components/CustomSelectButton.tsx","helpers/MaterialDynamicIcon.tsx","components/Adapters/AdaptersUpdater.tsx","dialogs/AdaptersUpdaterDialog.tsx","Workers/HostAdapterWorker.tsx","dialogs/GitHubInstallDialog.tsx","dialogs/AddInstanceDialog.tsx","components/Adapters/Utils.ts","components/Adapters/AdapterInstallDialog.tsx","components/Adapters/AdapterCategoryRow.tsx","dialogs/RatingDialog.tsx","dialogs/AdapterDeletionDialog.tsx","dialogs/AutoUpgradeConfigDialog.tsx","components/Adapters/AdapterGeneric.tsx","components/Adapters/AdapterTile.tsx","components/Adapters/AdapterRow.tsx","components/Adapters/AdaptersList.tsx","dialogs/AdminUpdater.tsx","tabs/Adapters.tsx"],"sourcesContent":["var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgSentry(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 256 230\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M251.22 187.856c5.785 10.045 6.345 20.608 1.538 28.958-4.8 8.357-14.192 13.143-25.768 13.143h-21.816c.259-4.068.431-8.17.431-12.302 0-4.628-.215-9.198-.531-13.754l14.35-.014c3.528 0 6.38-2.867 6.38-6.403a6.46 6.46 0 0 0-.768-3.053l-91.46-158.97a6.349 6.349 0 0 0-5.54-3.24 6.374 6.374 0 0 0-5.461 3.09l-14.522 25.243c44.134 33.27 73.804 84.813 77.864 143.333.316 4.548.531 9.119.531 13.753 0 4.132-.172 8.228-.424 12.302h-71.246c.388-4.053.611-8.148.611-12.302 0-4.649-.273-9.233-.776-13.753-3.52-32.206-19.286-60.748-42.503-80.89l-10.003 17.376c17.54 16.325 29.512 38.558 32.767 63.514.59 4.505.92 9.09.92 13.753 0 4.154-.273 8.264-.74 12.302H29.01c-11.576 0-20.968-4.793-25.768-13.15-4.807-8.35-4.247-18.905 1.538-28.958l13.56-23.238a79.42 79.42 0 0 1 20.715 16.052l-8.083 13.768a6.523 6.523 0 0 0-.77 3.054 6.383 6.383 0 0 0 6.382 6.395l32.033.015c-2.687-15.356-9.772-29.21-19.918-40.183-5.979-6.445-12.963-11.9-20.738-16.074l35.77-62.15a151.427 151.427 0 0 1 21.564 14.624c30.827 25.013 51.644 61.955 55.416 103.776h19.172c-3.91-48.892-28.477-92.006-64.937-120.548a171.205 171.205 0 0 0-21.672-14.457l30.532-53.045C109.583 5.77 118.42 0 128.036 0c9.607 0 18.438 5.77 24.223 15.823l98.961 172.033z\",\n    fill: \"#FB2D26\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSentry);\nexport default __webpack_public_path__ + \"static/media/sentry.e732e10c5c1ceed0955b2fec6dab33f8.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, type JSX } from 'react';\n\nimport { Button, Menu, MenuItem, Tooltip } from '@mui/material';\n\nimport type { Translate } from '@iobroker/adapter-react-v5';\nimport MaterialDynamicIcon from '../helpers/MaterialDynamicIcon';\n\nconst styles: Record<string, React.CSSProperties> = {\n    button: {\n        marginLeft: 10,\n        marginRight: 10,\n    },\n    icon: {\n        marginRight: 5,\n    },\n};\n\ninterface CustomSelectButtonProps {\n    arrayItem: { name: string | number }[];\n    title?: string;\n    onClick: (name: string | number) => void;\n    value: string | number;\n    contained?: boolean;\n    buttonIcon?: JSX.Element;\n    icons?: boolean;\n    t: Translate;\n    translateSuffix?: string;\n    noTranslation?: boolean;\n}\n\nfunction CustomSelectButton({\n    arrayItem,\n    title,\n    onClick,\n    value,\n    contained,\n    buttonIcon,\n    icons,\n    t,\n    translateSuffix,\n    noTranslation,\n}: CustomSelectButtonProps): JSX.Element {\n    const [anchorEl, setAnchorEl] = useState(null);\n    translateSuffix = translateSuffix || '';\n\n    return (\n        <>\n            <Tooltip\n                title={title || ''}\n                slotProps={{ popper: { sx: { pointerEvents: 'none' } } }}\n            >\n                <Button\n                    style={styles.button}\n                    variant={contained ? 'contained' : 'outlined'}\n                    color=\"primary\"\n                    onClick={e => setAnchorEl(e.currentTarget)}\n                >\n                    {buttonIcon ||\n                        (icons && (\n                            <MaterialDynamicIcon\n                                iconName={value as string}\n                                style={styles.icon}\n                            />\n                        ))}\n                    {typeof value === 'number' ? value : noTranslation ? value : t(value + translateSuffix)}\n                </Button>\n            </Tooltip>\n            <Menu\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={() => setAnchorEl(null)}\n            >\n                {arrayItem.map(({ name }, idx) => (\n                    <MenuItem\n                        key={name}\n                        selected={value ? name === value : value === 0 ? name === value : idx === 0}\n                        disabled={value ? name === value : value === 0 ? name === value : idx === 0}\n                        className={`tag-card-${name}`}\n                        style={{ placeContent: 'space-between' }}\n                        value={name}\n                        onClick={() => {\n                            onClick(name);\n                            setAnchorEl(null);\n                        }}\n                    >\n                        {icons && (\n                            <MaterialDynamicIcon\n                                iconName={name as string}\n                                style={styles.icon}\n                            />\n                        )}\n                        {typeof name === 'number' ? name : noTranslation ? name : t(name + translateSuffix)}\n                    </MenuItem>\n                ))}\n            </Menu>\n        </>\n    );\n}\n\nexport default CustomSelectButton;\n","import React, { useState, useEffect, type JSX } from 'react';\nimport {\n    AllInclusive,\n    Message,\n    WifiTethering,\n    Apps,\n    VpnKey,\n    NotificationsActive,\n    SystemUpdateAlt,\n    EmojiSymbols,\n    PermMedia,\n    SettingsEthernet,\n    Storage,\n    Visibility,\n    SettingsBrightness,\n    DateRange,\n    BatteryChargingFull,\n    FilterVintage,\n    LocationOn,\n    Phonelink,\n    Favorite,\n    House,\n    Apartment,\n    EmojiObjects,\n    DialerSip,\n    PhonelinkSetup,\n    AirportShuttle,\n    BubbleChart,\n    Widgets,\n    Brightness6,\n    LinearScale,\n    Help,\n} from '@mui/icons-material';\nimport { type SvgIconComponent } from '@mui/icons-material';\n\nconst ICON_CACHE: Record<string, Promise<ioBroker.AdapterObject>> = {};\n\nconst objIcon: Record<string, SvgIconComponent> = {\n    All: AllInclusive,\n    messaging: Message,\n    communication: WifiTethering,\n    general: Apps,\n    logic: VpnKey,\n    alarm: NotificationsActive,\n    'iot-systems': SystemUpdateAlt,\n    'misc-data': EmojiSymbols,\n    multimedia: PermMedia,\n    network: SettingsEthernet,\n    storage: Storage,\n    visualization: Visibility,\n    'climate-control': SettingsBrightness,\n    'date-and-time': DateRange,\n    energy: BatteryChargingFull,\n    garden: FilterVintage,\n    geoposition: LocationOn,\n    hardware: Phonelink,\n    health: Favorite,\n    household: House,\n    infrastructure: Apartment,\n    lighting: EmojiObjects,\n    protocols: DialerSip,\n    utility: PhonelinkSetup,\n    vehicle: AirportShuttle,\n    'visualization-icons': BubbleChart,\n    'visualization-widgets': Widgets,\n    weather: Brightness6,\n    metering: LinearScale,\n};\n\ninterface MaterialDynamicIconProps {\n    iconName?: string;\n    className?: string;\n    style?: React.CSSProperties;\n    adapter?: string;\n    socket?: any;\n    onClick?: (e: React.MouseEvent) => void;\n}\n\nfunction MaterialDynamicIcon({\n    iconName,\n    className,\n    adapter,\n    socket,\n    onClick,\n    style,\n}: MaterialDynamicIconProps): JSX.Element {\n    const [url, setUrl] = useState('');\n\n    useEffect(() => {\n        if (adapter && socket) {\n            if (!(ICON_CACHE[adapter] instanceof Promise)) {\n                ICON_CACHE[adapter] = socket.getObject(`system.adapter.${adapter}`);\n            }\n            void ICON_CACHE[adapter].then(\n                obj => obj?.common?.icon && setUrl(`../../adapter/${adapter}/${obj.common.icon}`),\n            );\n        }\n    }, [adapter, socket]);\n\n    if (adapter) {\n        return (\n            <img\n                onClick={e => onClick && onClick(e)}\n                src={url || ''}\n                className={className}\n                style={style}\n                alt=\"\"\n            />\n        );\n    }\n    const Element = objIcon[iconName] || Help;\n\n    return (\n        <Element\n            className={className}\n            style={style}\n            onClick={(e: React.MouseEvent) => onClick && onClick(e)}\n        />\n    );\n}\n\nexport default MaterialDynamicIcon;\n","import React, { Component, type JSX } from 'react';\nimport semver from 'semver';\n\nimport {\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Checkbox,\n    Avatar,\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Grid2,\n    IconButton,\n    Typography,\n    Box,\n} from '@mui/material';\n\nimport { Close as CloseIcon, Language as LanguageIcon, Info as InfoIcon } from '@mui/icons-material';\n\nimport { I18n, type IobTheme, Utils } from '@iobroker/adapter-react-v5';\n\nimport type { AdapterRatingInfo, InstalledInfo } from '@/components/Adapters/AdapterInstallDialog';\nimport { checkCondition } from '@/dialogs/AdapterUpdateDialog';\nimport type { RepoAdapterObject } from '@/components/Adapters/Utils';\n\ninterface GetNewsResultEntry {\n    version: string;\n    news: string;\n}\n\nconst styles: Record<string, any> = {\n    smallAvatar: {\n        width: 24,\n        height: 24,\n    },\n    listItem: (theme: IobTheme) => ({\n        mb: '2px',\n        background: theme.palette.background,\n        '@media screen and (max-width: 400px)': {\n            pl: '2px',\n        },\n    }),\n    toVersion: (theme: IobTheme) => ({\n        color: theme.palette.mode === 'dark' ? '#00dc00' : '#008100',\n        fontWeight: 'bold',\n        ml: '4px',\n    }),\n    updateDone: {\n        background: '#5ef05e80',\n        opacity: 0.7,\n    },\n    minWidthCss: {\n        '@media screen and (max-width: 400px)': {\n            minWidth: 32,\n        },\n    },\n    wrapperButton: {},\n    typography: {\n        paddingRight: 30,\n    },\n    versions: {\n        minWidth: 110,\n        display: 'inline-block',\n    },\n    closeButton: (theme: IobTheme) => ({\n        position: 'absolute',\n        right: 8,\n        top: 8,\n        color: theme.palette.grey[500],\n    }),\n    languageButton: {\n        position: 'absolute',\n        right: 52 + 8,\n        top: 8,\n    },\n    languageButtonActive: (theme: IobTheme) => ({\n        color: theme.palette.primary.main,\n    }),\n    versionHeader: (theme: IobTheme) => ({\n        background: '#4dabf5',\n        borderRadius: '3px',\n        pl: '10px',\n        fontWeight: 'bold',\n        color: theme.palette.mode === 'dark' ? 'black' : 'white',\n    }),\n};\n\ninterface AdaptersUpdaterProps {\n    inProcess: boolean;\n    lang: ioBroker.Languages;\n    /** if a process has been stopped, e.g., due to an error */\n    stopped: boolean;\n    repository: Record<string, RepoAdapterObject & { rating?: AdapterRatingInfo }>;\n    installed: InstalledInfo;\n    onUpdateSelected: (adapters: string[], adapters2?: string[]) => void;\n    selected: string[];\n    current: string;\n    updated: string[];\n    finished: boolean;\n    noTranslation: boolean;\n    toggleTranslation: () => void;\n    theme: IobTheme;\n}\n\ninterface AdaptersUpdaterState {\n    showNews: null | Record<string, any>;\n}\n\ninterface UpdateAvailableCheckOptions {\n    /** The installed version */\n    oldVersion: string;\n    /** The repo version or new version */\n    newVersion: string;\n    /** Adapter name */\n    name: string;\n}\n\nclass AdaptersUpdater extends Component<AdaptersUpdaterProps, AdaptersUpdaterState> {\n    private readonly updateAvailable: string[];\n\n    /** Key adapterName, value: version */\n    private readonly initialVersions: Record<string, string>;\n\n    private readonly currentRef: React.RefObject<HTMLLIElement>;\n\n    private current: string;\n\n    constructor(props: AdaptersUpdaterProps) {\n        super(props);\n\n        this.updateAvailable = this.detectUpdates();\n        this.initialVersions = {};\n        this.updateAvailable.forEach(\n            adapter => (this.initialVersions[adapter] = this.props.installed[adapter].version),\n        );\n\n        this.state = {\n            showNews: null,\n        };\n\n        this.currentRef = React.createRef();\n        this.current = props.current;\n\n        this.props.onUpdateSelected([...this.updateAvailable], this.updateAvailable);\n    }\n\n    static isUpdateAvailable(options: UpdateAvailableCheckOptions): boolean {\n        const { oldVersion, newVersion, name } = options;\n\n        try {\n            return semver.gt(newVersion, oldVersion);\n        } catch {\n            console.warn(`Cannot compare \"${newVersion}\" and \"${oldVersion}\" of adapter ${name}`);\n            return false;\n        }\n    }\n\n    /**\n     * Get a list of available adapter updates\n     * Admin and controller are filtered out,\n     * and all adapters that have messages for this update are filtered out too\n     */\n    detectUpdates(): string[] {\n        const updateAvailable: string[] = [];\n\n        Object.keys(this.props.repository).forEach(adapter => {\n            const _installed = this.props.installed[adapter];\n            // ignore js-controller in this dialog\n            if (adapter === 'js-controller' || adapter === 'admin') {\n                return;\n            }\n            if (\n                _installed &&\n                this.props.repository[adapter].version &&\n                _installed.ignoreVersion !== this.props.repository[adapter].version &&\n                AdaptersUpdater.isUpdateAvailable({\n                    oldVersion: _installed.version,\n                    newVersion: this.props.repository[adapter].version,\n                    name: adapter,\n                })\n            ) {\n                if (\n                    !checkCondition(\n                        this.props.repository[adapter].messages,\n                        _installed.version,\n                        this.props.repository[adapter].version,\n                    )\n                ) {\n                    updateAvailable.push(adapter);\n                } else {\n                    console.log(\n                        `Adapter ${adapter} is filtered out from update all functionality, because it has messages which need to be read before update`,\n                    );\n                }\n            }\n        });\n\n        updateAvailable.sort();\n\n        return updateAvailable;\n    }\n\n    getNews(adapter: string): GetNewsResultEntry[] {\n        const adapterObj = this.props.repository[adapter];\n        const installed = this.props.installed[adapter];\n        const news: GetNewsResultEntry[] = [];\n\n        if (installed && adapterObj?.news) {\n            Object.keys(adapterObj.news).forEach(version => {\n                try {\n                    if (semver.gt(version, installed.version)) {\n                        news.push({\n                            version,\n                            news: this.props.noTranslation\n                                ? adapterObj.news[version].en\n                                : adapterObj.news[version][this.props.lang] || adapterObj.news[version].en,\n                        });\n                    }\n                } catch {\n                    // ignore it\n                    console.warn(`Cannot compare \"${version}\" and \"${installed.version}\"`);\n                }\n            });\n        }\n\n        return news;\n    }\n\n    renderOneAdapter(adapter: string): JSX.Element | null {\n        const checked = this.props.selected.includes(adapter);\n        if ((this.props.finished || this.props.inProcess) && !checked) {\n            return null;\n        }\n        if (!this.props.installed[adapter]) {\n            // during installation, this adapter was uninstalled\n            return null;\n        }\n        const image = `.${this.props.installed[adapter].localIcon}`;\n\n        return (\n            <ListItem\n                key={adapter}\n                dense\n                sx={{\n                    '&.MuiListItem-root': Utils.getStyle(\n                        this.props.theme,\n                        styles.listItem,\n                        this.props.updated.includes(adapter) && styles.updateDone,\n                    ),\n                }}\n                ref={this.props.current === adapter ? this.currentRef : null}\n                secondaryAction={\n                    !this.props.finished && !this.props.inProcess ? (\n                        <Checkbox\n                            edge=\"end\"\n                            checked={checked}\n                            tabIndex={-1}\n                            disableRipple\n                            disabled={this.props.inProcess}\n                            onClick={() => {\n                                const selected = [...this.props.selected];\n                                const pos = selected.indexOf(adapter);\n                                if (pos !== -1) {\n                                    selected.splice(pos, 1);\n                                } else {\n                                    selected.push(adapter);\n                                    selected.sort();\n                                }\n                                this.props.onUpdateSelected(selected);\n                            }}\n                        />\n                    ) : (\n                        this.props.current === adapter &&\n                        !this.props.stopped &&\n                        !this.props.finished && <CircularProgress />\n                    )\n                }\n            >\n                <ListItemIcon sx={styles.minWidthCss}>\n                    <Avatar\n                        variant=\"square\"\n                        alt={adapter}\n                        src={image}\n                        style={styles.smallAvatar}\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={adapter}\n                    title={this.getNews(adapter)\n                        .map(item => `${item.version}: ${item.news}`)\n                        .join('\\n')}\n                    secondary={\n                        <span>\n                            <div style={styles.versions}>\n                                {this.initialVersions[adapter]} →\n                                <Box\n                                    component=\"span\"\n                                    sx={styles.toVersion}\n                                >\n                                    {this.props.repository[adapter].version}\n                                </Box>\n                            </div>\n                            <IconButton\n                                title={I18n.t('Show change log')}\n                                onClick={() =>\n                                    this.setState({\n                                        showNews: {\n                                            adapter,\n                                            version: this.props.repository[adapter].version,\n                                            fromVersion: this.initialVersions[adapter],\n                                        },\n                                    })\n                                }\n                                size=\"small\"\n                            >\n                                <InfoIcon />\n                            </IconButton>\n                        </span>\n                    }\n                />\n            </ListItem>\n        );\n    }\n\n    getReactNews(adapter: string, fromVersion: string): JSX.Element[] {\n        const adapterObj = this.props.repository[adapter];\n        const installed = this.props.installed[adapter];\n        fromVersion = fromVersion || installed.version;\n        const result: JSX.Element[] = [];\n\n        if (installed && adapterObj?.news) {\n            Object.keys(adapterObj.news).forEach(version => {\n                try {\n                    if (semver.gt(version, fromVersion) && adapterObj.news[version]) {\n                        const newsText: string = this.props.noTranslation\n                            ? adapterObj.news[version].en || ''\n                            : adapterObj.news[version][this.props.lang] || adapterObj.news[version].en || '';\n\n                        const news = newsText\n                            .split('\\n')\n                            .map(line =>\n                                line\n                                    .trim()\n                                    .replace(/^\\*\\s?/, '')\n                                    .replace(/<!--[^>]*->/g, '')\n                                    .replace(/<! -[^>]*->/g, '')\n                                    .trim(),\n                            )\n                            .filter(line => !!line);\n\n                        result.push(\n                            <Grid2 key={version}>\n                                <Typography sx={styles.versionHeader}>{version}</Typography>\n                                {news.map((value, index) => (\n                                    <Typography\n                                        key={`${version}-${index}`}\n                                        component=\"div\"\n                                        variant=\"body2\"\n                                    >\n                                        {`• ${value}`}\n                                    </Typography>\n                                ))}\n                            </Grid2>,\n                        );\n                    }\n                } catch {\n                    // ignore it\n                    console.warn(`Cannot compare \"${version}\" and \"${fromVersion}\"`);\n                }\n            });\n        }\n\n        return result;\n    }\n\n    renderShowNews(): JSX.Element | null {\n        if (this.state.showNews) {\n            const news = this.getReactNews(this.state.showNews.adapter, this.state.showNews.fromVersion);\n\n            const closeButton = Utils.getStyle(this.props.theme, styles.closeButton);\n\n            const languageButtonActive = Utils.getStyle(this.props.theme, styles.languageButtonActive);\n\n            return (\n                <Dialog\n                    onClose={() => this.setState({ showNews: null })}\n                    open={!0}\n                >\n                    <DialogTitle>\n                        <Typography\n                            component=\"h2\"\n                            variant=\"h6\"\n                            sx={{ '&.MuiTypography-root': styles.typography }}\n                        >\n                            <div style={{ width: 'calc(100% - 60px)' }}>\n                                {I18n.t('Update \"%s\" to v%s', this.state.showNews.adapter, this.state.showNews.version)}\n                            </div>\n                            <IconButton\n                                size=\"large\"\n                                style={closeButton}\n                                onClick={() => this.setState({ showNews: null })}\n                            >\n                                <CloseIcon />\n                            </IconButton>\n                            {I18n.getLanguage() !== 'en' && this.props.toggleTranslation ? (\n                                <IconButton\n                                    size=\"large\"\n                                    style={{\n                                        ...styles.languageButton,\n                                        ...(this.props.noTranslation ? languageButtonActive : undefined),\n                                    }}\n                                    onClick={this.props.toggleTranslation}\n                                    title={I18n.t('Disable/Enable translation')}\n                                >\n                                    <LanguageIcon />\n                                </IconButton>\n                            ) : null}\n                        </Typography>\n                    </DialogTitle>\n                    <DialogContent dividers>\n                        <Grid2\n                            container\n                            direction=\"column\"\n                            spacing={2}\n                            wrap=\"nowrap\"\n                        >\n                            {news.length ? (\n                                <Grid2>\n                                    <Typography\n                                        variant=\"h6\"\n                                        gutterBottom\n                                    >\n                                        {I18n.t('Change log')}\n                                    </Typography>\n                                    <Grid2\n                                        container\n                                        spacing={2}\n                                        direction=\"column\"\n                                        wrap=\"nowrap\"\n                                    >\n                                        {news}\n                                    </Grid2>\n                                </Grid2>\n                            ) : (\n                                I18n.t('No change log available')\n                            )}\n                        </Grid2>\n                    </DialogContent>\n                    <DialogActions style={styles.wrapperButton}>\n                        <Button\n                            variant=\"contained\"\n                            onClick={() => this.setState({ showNews: null })}\n                            color=\"grey\"\n                            startIcon={<CloseIcon />}\n                        >\n                            {I18n.t('Close')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }\n        return null;\n    }\n\n    render(): JSX.Element {\n        if (this.current !== this.props.current) {\n            this.current = this.props.current;\n            setTimeout(() => this.currentRef.current?.scrollIntoView(), 200);\n        }\n\n        return (\n            <List style={styles.root}>\n                {this.updateAvailable.map(adapter => this.renderOneAdapter(adapter))}\n                {this.renderShowNews()}\n            </List>\n        );\n    }\n}\n\nexport default AdaptersUpdater;\n","import React, { Component, type JSX } from 'react';\n\nimport {\n    DialogActions,\n    Checkbox,\n    DialogTitle,\n    Button,\n    Dialog,\n    Grid2,\n    FormControlLabel,\n    Toolbar,\n    IconButton,\n    Tooltip,\n    DialogContent,\n} from '@mui/material';\n\nimport {\n    Check as CheckIcon,\n    Close as CloseIcon,\n    Cancel as CancelIcon,\n    Language as LanguageIcon,\n} from '@mui/icons-material';\n\nimport { type AdminConnection, I18n, Utils, type IobTheme, type Translate } from '@iobroker/adapter-react-v5';\n\nimport type { AdapterRatingInfo, InstalledInfo } from '@/components/Adapters/AdapterInstallDialog';\nimport type { RepoAdapterObject } from '@/components/Adapters/Utils';\nimport AdaptersUpdater from '../components/Adapters/AdaptersUpdater';\nimport Command from '../components/Command';\n\nconst styles: Record<string, any> = {\n    dialogRoot: {\n        height: 'calc(100% - 64px)',\n    },\n    wrapperHead: {\n        justifyContent: 'space-between',\n        display: 'flex',\n    },\n    checkbox: {\n        marginRight: 10,\n    },\n    appBar: (theme: IobTheme) => ({\n        flexWrap: 'wrap',\n        position: 'sticky',\n        bottom: -10,\n        pl: 1,\n        background: theme.name === 'blue' ? '#5d6467' : theme.name === 'dark' ? '#5b5b5b' : '#FFF',\n    }),\n    container: {\n        overflow: 'hidden',\n        height: 'calc(100% - 48px)',\n        '@media screen and (max-width: 602px)': {\n            height: 'auto',\n        },\n    },\n    content: {\n        '@media screen and (max-width: 500px)': {\n            p: 1,\n        },\n    },\n    languageButton: {\n        position: 'absolute',\n        right: 73,\n        top: 11,\n    },\n    languageButtonActive: (theme: IobTheme) => ({\n        color: theme.palette.primary.main,\n    }),\n};\n\ninterface AdaptersUpdaterDialogProps {\n    currentHost: string;\n    lang: ioBroker.Languages;\n    t: Translate;\n    socket: AdminConnection;\n    onClose: (updated: boolean) => void;\n    repository: Record<string, RepoAdapterObject & { rating?: AdapterRatingInfo }>;\n    installed: InstalledInfo;\n    onSetCommandRunning: (running: boolean) => void;\n    noTranslation?: boolean;\n    toggleTranslation?: () => void;\n    theme: IobTheme;\n}\n\ninterface AdaptersUpdaterDialogState {\n    selected: string[];\n    inProcess: boolean;\n    finished: boolean;\n    current: string;\n    updated: string[];\n    stopped: boolean;\n    debug: boolean;\n    stopOnError: boolean;\n    closeOnFinished: boolean;\n    currentVersion: string;\n}\n\nclass AdaptersUpdaterDialog extends Component<AdaptersUpdaterDialogProps, AdaptersUpdaterDialogState> {\n    updateAvailable: string[] = [];\n\n    onAdapterFinished: () => void;\n\n    processList: { adapter: string; version: string }[];\n\n    constructor(props: AdaptersUpdaterDialogProps) {\n        super(props);\n\n        this.state = {\n            selected: [],\n            inProcess: false,\n            finished: false,\n            current: '',\n            updated: [],\n            /** If an upgrade process has been stopped, e.g., due to an error */\n            stopped: false,\n            debug:\n                (((window as any)._localStorage as Storage) || window.localStorage).getItem(\n                    'AdaptersUpdaterDialog.debug',\n                ) === 'true',\n            stopOnError:\n                (((window as any)._localStorage as Storage) || window.localStorage).getItem(\n                    'AdaptersUpdaterDialog.stopOnError',\n                ) !== 'false',\n            closeOnFinished:\n                (((window as any)._localStorage as Storage) || window.localStorage).getItem(\n                    'AdaptersUpdaterDialog.closeOnFinished',\n                ) === 'true',\n            currentVersion: '',\n        };\n\n        this.updateAvailable = [];\n    }\n\n    updateAdapter(adapter: string, version: string, cb: () => void): void {\n        this.onAdapterFinished = cb;\n        this.setState({ current: adapter, currentVersion: version });\n    }\n\n    onStartUpdate(): void {\n        this.setState({ inProcess: true }, () => {\n            this.props.onSetCommandRunning(true);\n            this.processList = [...this.state.selected].map(adapter => ({\n                adapter,\n                version: this.props.repository[adapter]?.version,\n            }));\n\n            this.updateAdapters(() => {\n                this.setState({ inProcess: false, finished: true }, () => {\n                    this.props.onSetCommandRunning(false);\n                    if (this.state.closeOnFinished) {\n                        this.props.onClose(!!this.state.updated.length);\n                    } else {\n                        // update adapters and so on\n                    }\n                });\n            });\n        });\n    }\n\n    updateAdapters(cb: () => void): void {\n        if (!this.processList || !this.processList.length || this.state.stopped) {\n            if (cb) {\n                cb();\n            }\n        } else {\n            const { adapter, version } = this.processList.shift();\n\n            this.updateAdapter(adapter, version, () => {\n                const updated = [...this.state.updated];\n                updated.push(adapter);\n                this.setState({ updated }, () => setTimeout(() => this.updateAdapters(cb), 200));\n            });\n        }\n    }\n\n    render(): JSX.Element {\n        const languageButtonActive = this.props.noTranslation\n            ? Utils.getStyle(this.props.theme, styles.languageButtonActive)\n            : undefined;\n\n        return (\n            <Dialog\n                open={!0}\n                maxWidth=\"lg\"\n                fullWidth={!!this.state.current}\n                onClose={() => this.props.onClose(!!this.state.updated.length)}\n                aria-labelledby=\"update-dialog-title\"\n                aria-describedby=\"update-dialog-description\"\n                sx={{ '& .MuiPaper-root': styles.dialogRoot }}\n                scroll=\"paper\"\n            >\n                <DialogTitle id=\"update-dialog-title\">\n                    <div style={styles.wrapperHead}>\n                        {this.props.t('Update %s adapter(s)', this.state.selected.length)}\n                        {!this.state.finished && !this.state.inProcess && (\n                            <Tooltip\n                                title={this.props.t('Select/Unselect all')}\n                                slotProps={{ popper: { sx: { pointerEvents: 'none' } } }}\n                            >\n                                <Checkbox\n                                    checked={this.state.selected.length === this.updateAvailable.length}\n                                    style={styles.checkbox}\n                                    tabIndex={-1}\n                                    indeterminate={\n                                        this.state.selected.length !== this.updateAvailable.length &&\n                                        this.state.selected.length !== 0\n                                    }\n                                    disableRipple\n                                    onClick={() => {\n                                        let selected: string[] = [];\n                                        if (this.state.selected.length !== this.updateAvailable.length) {\n                                            selected = [...this.updateAvailable];\n                                        }\n                                        this.setState({ selected });\n                                    }}\n                                />\n                            </Tooltip>\n                        )}\n                        {I18n.getLanguage() !== 'en' && this.props.toggleTranslation ? (\n                            <IconButton\n                                size=\"large\"\n                                style={{ ...styles.languageButton, ...languageButtonActive }}\n                                onClick={() => this.props.toggleTranslation()}\n                                title={I18n.t('Disable/Enable translation')}\n                            >\n                                <LanguageIcon />\n                            </IconButton>\n                        ) : null}\n                    </div>\n                </DialogTitle>\n                <DialogContent\n                    sx={{ '&.MuiDialogContent-root': styles.content }}\n                    style={{ height: '100%' }}\n                >\n                    <Grid2\n                        container\n                        direction=\"row\"\n                        sx={styles.container}\n                    >\n                        <Grid2 style={{ height: '100%', overflow: 'hidden', width: this.state.current ? 250 : '100%' }}>\n                            <div style={{ height: '100%', overflow: 'auto' }}>\n                                <AdaptersUpdater\n                                    finished={this.state.finished}\n                                    inProcess={this.state.inProcess}\n                                    selected={this.state.selected}\n                                    current={this.state.current}\n                                    stopped={this.state.stopped}\n                                    updated={this.state.updated}\n                                    lang={this.props.lang}\n                                    installed={this.props.installed}\n                                    repository={this.props.repository}\n                                    noTranslation={this.props.noTranslation}\n                                    toggleTranslation={this.props.toggleTranslation}\n                                    onUpdateSelected={(selected: string[], updateAvailable: string[]) => {\n                                        if (updateAvailable) {\n                                            this.updateAvailable = updateAvailable;\n                                        }\n                                        this.setState({ selected });\n                                    }}\n                                    theme={this.props.theme}\n                                />\n                            </div>\n                        </Grid2>\n                        {!!this.state.current && (\n                            <Grid2\n                                style={{\n                                    height: '100%',\n                                    overflow: 'hidden',\n                                    width: 'calc(100% - 260px)',\n                                    minWidth: 240,\n                                }}\n                            >\n                                <Command\n                                    noSpacing\n                                    key={this.state.current}\n                                    ready\n                                    host={this.props.currentHost}\n                                    socket={this.props.socket}\n                                    t={this.props.t}\n                                    cmd={`upgrade ${this.state.current}@${this.state.currentVersion}${this.state.debug ? ' --debug' : ''}`}\n                                    onFinished={() => this.onAdapterFinished()}\n                                    errorFunc={() => {\n                                        if (this.state.stopOnError) {\n                                            this.setState({ stopped: true, finished: true });\n                                            this.onAdapterFinished = null;\n                                            this.props.onSetCommandRunning(false);\n                                        } else {\n                                            this.onAdapterFinished();\n                                        }\n                                    }}\n                                />\n                            </Grid2>\n                        )}\n                    </Grid2>\n                    <Toolbar\n                        variant=\"dense\"\n                        disableGutters\n                        sx={styles.appBar}\n                    >\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    disabled={this.state.finished}\n                                    checked={this.state.stopOnError}\n                                    onChange={() => {\n                                        (((window as any)._localStorage as Storage) || window.localStorage).setItem(\n                                            'AdaptersUpdaterDialog.stopOnError',\n                                            this.state.stopOnError ? 'false' : 'true',\n                                        );\n                                        this.setState({ stopOnError: !this.state.stopOnError });\n                                    }}\n                                />\n                            }\n                            label={this.props.t('Stop on error')}\n                        />\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    disabled={this.state.finished}\n                                    checked={this.state.closeOnFinished}\n                                    onChange={() => {\n                                        (((window as any)._localStorage as Storage) || window.localStorage).setItem(\n                                            'AdaptersUpdaterDialog.closeOnFinished',\n                                            this.state.closeOnFinished ? 'false' : 'true',\n                                        );\n                                        this.setState({ closeOnFinished: !this.state.closeOnFinished });\n                                    }}\n                                />\n                            }\n                            label={this.props.t('Close on finished')}\n                        />\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    disabled={this.state.finished || this.state.inProcess}\n                                    checked={this.state.debug}\n                                    onChange={() => {\n                                        (((window as any)._localStorage as Storage) || window.localStorage).setItem(\n                                            'AdaptersUpdaterDialog.debug',\n                                            this.state.debug ? 'false' : 'true',\n                                        );\n                                        this.setState({ debug: !this.state.debug });\n                                    }}\n                                />\n                            }\n                            label={this.props.t('Debug info')}\n                        />\n                    </Toolbar>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        id=\"adapters-update-dialog-update\"\n                        variant=\"contained\"\n                        disabled={\n                            this.state.stopped ||\n                            this.state.inProcess ||\n                            this.state.finished ||\n                            !this.state.selected.length\n                        }\n                        onClick={() => this.onStartUpdate()}\n                        color=\"primary\"\n                        autoFocus\n                        startIcon={<CheckIcon />}\n                    >\n                        {this.props.t('Update')}\n                    </Button>\n                    <Button\n                        id=\"adapters-update-dialog-cancel\"\n                        variant=\"contained\"\n                        disabled={!this.state.inProcess}\n                        color=\"grey\"\n                        startIcon={<CancelIcon />}\n                        onClick={() => {\n                            this.setState({ stopped: true, finished: true });\n                            this.props.onSetCommandRunning(false);\n                        }}\n                    >\n                        {this.props.t('Cancel')}\n                    </Button>\n                    <Button\n                        id=\"adapters-update-dialog-close\"\n                        variant=\"contained\"\n                        onClick={() => this.props.onClose(!!this.state.updated.length)}\n                        disabled={this.state.inProcess && !this.state.stopped}\n                        color={this.state.stopped ? 'error' : 'grey'}\n                        startIcon={<CloseIcon />}\n                    >\n                        {this.props.t('Close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default AdaptersUpdaterDialog;\n","import { type AdminConnection } from '@iobroker/adapter-react-v5';\nimport GenericWorker, { type EventType, type GenericEvent } from './GenericWorker';\n\nexport type HostAdapterEventType = EventType;\n\nexport type HostAdapterEvent = GenericEvent<'adapter'>;\n\nexport default class HostAdapterWorker extends GenericWorker<'adapter'> {\n    private readonly host: string;\n    private readonly prefix: string;\n\n    constructor(socket: AdminConnection, host: string) {\n        super(socket, `${host}.adapter`, 'adapter');\n        this.prefix = `${host}.adapter.`;\n        this.host = host;\n    }\n\n    getObject(adapterName: string): ioBroker.AdapterObject | null {\n        if (!this.objects) {\n            return null;\n        }\n        return this.objects[this.prefix + adapterName] || null;\n    }\n\n    getHost(): string {\n        return this.host;\n    }\n}\n","import React, { type JSX } from 'react';\n\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    Paper,\n    AppBar,\n    Box,\n    Checkbox,\n    FormControlLabel,\n    IconButton,\n    InputAdornment,\n    Tab,\n    Tabs,\n    TextField,\n    Autocomplete,\n} from '@mui/material';\n\nimport { FaGithub as GithubIcon } from 'react-icons/fa';\nimport {\n    Language as UrlIcon,\n    Sms as SmsIcon,\n    Close as CloseIcon,\n    Check as CheckIcon,\n    Delete,\n} from '@mui/icons-material';\n\nimport { I18n, Icon, type IobTheme } from '@iobroker/adapter-react-v5';\n\nimport type { RepoAdapterObject } from '@/components/Adapters/Utils';\nimport type { AdapterRatingInfo, InstalledInfo } from '@/components/Adapters/AdapterInstallDialog';\n\nimport npmIcon from '../assets/npm.png';\n\nfunction a11yProps(name: string): { id: string; 'aria-controls': string } {\n    return {\n        id: `github-install-dialog-tab-${name}`,\n        'aria-controls': `github-install-dialog-panel-${name}`,\n    };\n}\n\nconst styles: Record<string, any> = {\n    root: (theme: IobTheme) => ({\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        height: '100%',\n    }),\n    paper: {\n        maxWidth: 1000,\n    },\n    tabPaper: {\n        padding: 16,\n    },\n    title: (theme: IobTheme) => ({\n        mt: '10px',\n        p: 1,\n        ml: 1,\n        fontSize: 18,\n        color: theme.palette.primary.main,\n    }),\n    warningText: {\n        color: '#f53939',\n    },\n    noteText: {\n        marginTop: 16,\n    },\n    errorTextNoGit: {\n        fontSize: 13,\n        color: '#ff1616',\n    },\n    listIcon: {\n        width: 24,\n        height: 24,\n    },\n    listIconWithMargin: {\n        width: 24,\n        height: 24,\n        marginRight: 8,\n    },\n    tabSelected: (theme: IobTheme) => ({\n        color: theme.palette.mode === 'dark' ? theme.palette.secondary.contrastText : '#222 !important',\n    }),\n};\n\n// some older browsers do not have `flat`\nfunction arrayFlat(arr: (string[] | string)[]): string[] {\n    const result: string[] = [];\n    for (let i = 0; i < arr.length; i++) {\n        if (typeof arr[i] === 'object') {\n            (arr[i] as string[]).forEach((item: string) => result.push(item));\n        } else {\n            result.push(arr[i] as string);\n        }\n    }\n    return result;\n}\n\ninterface GitHubInstallDialogProps {\n    categories: {\n        name: string;\n        translation: string;\n        count: number;\n        installed: number;\n        adapters: string[];\n    }[];\n    repository: Record<string, RepoAdapterObject & { rating?: AdapterRatingInfo }>;\n    installed: InstalledInfo;\n    onClose: () => void;\n    t: typeof I18n.t;\n    /** Method to install adapter */\n    installFromUrl: (adapter: string, debug: boolean, customUrl: boolean) => Promise<void>;\n    /** Upload the adapter */\n    upload: (adapter: string) => void;\n}\n\ninterface AutoCompleteValue {\n    value: string;\n    nogit: boolean;\n    name: string;\n    icon: string;\n    title: string;\n}\n\ninterface GitHubInstallDialogState {\n    autoCompleteValue: AutoCompleteValue | null;\n    /** If debug output is desired */\n    debug: boolean;\n    /** The selected url */\n    url: string;\n    /** Name of the current tab */\n    currentTab: string;\n    /** History of custom commands */\n    customHistory: string[];\n}\n\nconst MAX_HISTORY_LENGTH = 10;\n\nclass GitHubInstallDialog extends React.Component<GitHubInstallDialogProps, GitHubInstallDialogState> {\n    constructor(props: GitHubInstallDialogProps) {\n        super(props);\n\n        let customHistory = [];\n        const customHistoryStr = ((window as any)._localstorage || window.localStorage).getItem('App.npmHistory');\n        if (customHistoryStr) {\n            try {\n                customHistory = JSON.parse(customHistoryStr);\n            } catch {\n                // ignore\n            }\n        }\n        this.state = {\n            autoCompleteValue:\n                ((window as any)._localstorage || window.localStorage).getItem('App.autocomplete') || null,\n            debug: ((window as any)._localstorage || window.localStorage).getItem('App.gitDebug') === 'true',\n            url: ((window as any)._localstorage || window.localStorage).getItem('App.userUrl') || '',\n            currentTab: ((window as any)._localstorage || window.localStorage).getItem('App.gitTab') || 'npm',\n            customHistory,\n        };\n    }\n\n    renderNpm(): JSX.Element | null {\n        return this.state.currentTab === 'npm' ? (\n            <Paper\n                style={styles.tabPaper}\n                id=\"github-install-dialog-panel-npm\"\n            >\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={this.state.debug}\n                                onChange={e => {\n                                    ((window as any)._localstorage || window.localStorage).setItem(\n                                        'App.gitDebug',\n                                        e.target.checked ? 'true' : 'false',\n                                    );\n                                    this.setState({ debug: e.target.checked });\n                                }}\n                            />\n                        }\n                        label={this.props.t('Debug outputs')}\n                    />\n                </div>\n                <div style={{ display: 'flex', alignItems: 'flex-end' }}>\n                    <SmsIcon style={{ marginRight: 10 }} />\n                    <Autocomplete\n                        fullWidth\n                        value={this.state.autoCompleteValue}\n                        onChange={(_, newValue) => {\n                            ((window as any)._localstorage || window.localStorage).setItem(\n                                'App.autocomplete',\n                                newValue,\n                            );\n                            this.setState({ autoCompleteValue: newValue });\n                        }}\n                        options={this.getList()}\n                        getOptionLabel={option => option?.name ?? ''}\n                        renderInput={params => {\n                            const _params = { ...params };\n                            _params.InputProps = _params.InputProps || ({} as any);\n                            _params.InputProps.startAdornment = (\n                                <InputAdornment position=\"start\">\n                                    <Icon\n                                        src={this.state.autoCompleteValue?.icon || ''}\n                                        style={styles.listIcon}\n                                    />\n                                </InputAdornment>\n                            );\n\n                            return (\n                                <TextField\n                                    variant=\"standard\"\n                                    {...params}\n                                    label={I18n.t('Select adapter')}\n                                />\n                            );\n                        }}\n                        renderOption={(props, option) => (\n                            <Box\n                                component=\"li\"\n                                sx={{ '& > img': { mr: 2, flexShrink: 0 } }}\n                                {...props}\n                            >\n                                <Icon\n                                    src={option?.icon || ''}\n                                    style={styles.listIconWithMargin}\n                                />\n                                {option?.name ?? ''}\n                            </Box>\n                        )}\n                    />\n                </div>\n                <div\n                    style={{\n                        fontSize: 24,\n                        fontWeight: 'bold',\n                        marginTop: 40,\n                    }}\n                >\n                    {this.props.t('Warning!')}\n                </div>\n                <div style={styles.warningText}>{this.props.t('npm_warning', 'NPM', 'NPM')}</div>\n                <div style={styles.noteText}>{this.props.t('github_note')}</div>\n            </Paper>\n        ) : null;\n    }\n\n    renderGitHub(): JSX.Element | null {\n        return this.state.currentTab === 'GitHub' ? (\n            <Paper\n                style={styles.tabPaper}\n                id=\"github-install-dialog-panel-github\"\n            >\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={this.state.debug}\n                                onChange={e => {\n                                    ((window as any)._localstorage || window.localStorage).setItem(\n                                        'App.gitDebug',\n                                        e.target.checked ? 'true' : 'false',\n                                    );\n                                    this.setState({ debug: e.target.checked });\n                                }}\n                            />\n                        }\n                        label={this.props.t('Debug outputs')}\n                    />\n                </div>\n                <div style={{ display: 'flex', alignItems: 'flex-end' }}>\n                    <SmsIcon style={{ marginRight: 10 }} />\n                    <Autocomplete\n                        fullWidth\n                        value={this.state.autoCompleteValue}\n                        getOptionDisabled={option => !!option?.nogit}\n                        renderOption={(props, option) => (\n                            <Box\n                                component=\"li\"\n                                sx={{ '& > img': { mr: 2, flexShrink: 0 } }}\n                                {...props}\n                            >\n                                <Icon\n                                    src={option?.icon || ''}\n                                    style={styles.listIconWithMargin}\n                                />\n                                {option?.name ?? ''}\n                                {option?.nogit && (\n                                    <div style={styles.errorTextNoGit}>\n                                        {I18n.t(\n                                            'This adapter cannot be installed from git as must be built before installation.',\n                                        )}\n                                    </div>\n                                )}\n                            </Box>\n                        )}\n                        onChange={(_, newValue) => {\n                            ((window as any)._localstorage || window.localStorage).setItem(\n                                'App.autocomplete',\n                                newValue,\n                            );\n                            this.setState({ autoCompleteValue: newValue });\n                        }}\n                        options={this.getList()}\n                        getOptionLabel={option => option?.name ?? ''}\n                        renderInput={params => {\n                            const _params = { ...params };\n                            _params.InputProps = _params.InputProps || ({} as any);\n                            _params.InputProps.startAdornment = (\n                                <InputAdornment position=\"start\">\n                                    <Icon\n                                        src={this.state.autoCompleteValue?.icon || ''}\n                                        style={styles.listIconWithMargin}\n                                    />\n                                </InputAdornment>\n                            );\n\n                            return (\n                                <TextField\n                                    variant=\"standard\"\n                                    {...params}\n                                    label={I18n.t('Select adapter')}\n                                />\n                            );\n                        }}\n                    />\n                </div>\n                <div\n                    style={{\n                        fontSize: 24,\n                        fontWeight: 'bold',\n                        marginTop: 40,\n                    }}\n                >\n                    {this.props.t('Warning!')}\n                </div>\n                <div style={styles.warningText}>{this.props.t('github_warning', 'GitHub', 'GitHub')}</div>\n                <div style={styles.noteText}>{this.props.t('github_note')}</div>\n            </Paper>\n        ) : null;\n    }\n\n    renderCustom(): JSX.Element | null {\n        return this.state.currentTab === 'URL' ? (\n            <Paper\n                style={styles.tabPaper}\n                id=\"github-install-dialog-panel-custom\"\n            >\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={this.state.debug}\n                                onChange={e => {\n                                    ((window as any)._localstorage || window.localStorage).setItem(\n                                        'App.gitDebug',\n                                        e.target.checked ? 'true' : 'false',\n                                    );\n                                    this.setState({ debug: e.target.checked });\n                                }}\n                            />\n                        }\n                        label={this.props.t('Debug outputs')}\n                    />\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <Autocomplete\n                        fullWidth\n                        value={this.state.url || ''}\n                        onInputChange={(_, newValue) => {\n                            ((window as any)._localstorage || window.localStorage).setItem(\n                                'App.userUrl',\n                                newValue || '',\n                            );\n                            this.setState({ url: newValue });\n                        }}\n                        onChange={(_, newValue) => {\n                            ((window as any)._localstorage || window.localStorage).setItem(\n                                'App.userUrl',\n                                newValue || '',\n                            );\n                            this.setState({ url: newValue });\n                        }}\n                        renderOption={(props, option) => (\n                            <Box\n                                component=\"li\"\n                                {...props}\n                                style={{ display: 'flex', alignItems: 'left' }}\n                            >\n                                {option}\n                                <div style={{ flexGrow: 1 }} />\n                                <IconButton\n                                    size=\"small\"\n                                    onClick={e => {\n                                        e.stopPropagation();\n                                        const customHistory = this.state.customHistory.filter(it => it !== option);\n                                        ((window as any)._localstorage || window.localStorage).setItem(\n                                            'App.npmHistory',\n                                            JSON.stringify(customHistory),\n                                        );\n                                        this.setState({ customHistory });\n                                    }}\n                                >\n                                    <Delete />\n                                </IconButton>\n                            </Box>\n                        )}\n                        freeSolo\n                        options={this.state.customHistory}\n                        renderInput={params => (\n                            <TextField\n                                variant=\"standard\"\n                                {...params}\n                                onKeyUp={event => {\n                                    if (event.key === 'Enter' && this.state.url) {\n                                        const customHistory = [...this.state.customHistory];\n                                        customHistory.unshift(this.state.url);\n                                        if (customHistory.length > MAX_HISTORY_LENGTH) {\n                                            customHistory.pop();\n                                        }\n                                        ((window as any)._localstorage || window.localStorage).setItem(\n                                            'App.npmHistory',\n                                            JSON.stringify(customHistory),\n                                        );\n\n                                        if (!this.state.url.includes('.')) {\n                                            void this.props.installFromUrl(\n                                                `iobroker.${this.state.url}`,\n                                                this.state.debug,\n                                                true,\n                                            );\n                                        } else {\n                                            void this.props.installFromUrl(this.state.url, this.state.debug, true);\n                                        }\n                                        this.setState({ autoCompleteValue: null, url: '' });\n                                        this.props.onClose();\n                                    }\n                                }}\n                                helperText={this.props.t('URL or file path')}\n                                label={this.props.t('URL')}\n                            />\n                        )}\n                    />\n                </div>\n                <div\n                    style={{\n                        fontSize: 24,\n                        fontWeight: 'bold',\n                        marginTop: 40,\n                    }}\n                >\n                    {this.props.t('Warning!')}\n                </div>\n                <div style={styles.warningText}>{this.props.t('github_warning', 'URL', 'URL')}</div>\n                <div style={styles.noteText}>{this.props.t('github_note')}</div>\n            </Paper>\n        ) : null;\n    }\n\n    getList(): ({ value: string; name: string; icon: string; nogit: boolean; title: string } | null)[] {\n        const adaptersArrays: string[][] = this.props.categories.map(category => category.adapters);\n        const adapters: string[] = arrayFlat(adaptersArrays);\n        adapters.sort();\n\n        return adapters\n            .map((el, i) => {\n                if (i && adapters[i - 1] === el) {\n                    return null;\n                }\n                const adapter = this.props.repository[el];\n                if (!adapter?.controller) {\n                    // @ts-expect-error meta / readme\n                    const parts = (adapter.extIcon || adapter.meta || adapter.readme || '').toString().split('/');\n\n                    let name: ioBroker.StringOrTranslated = adapter?.name;\n                    if (!name) {\n                        name = adapter.titleLang;\n                        if (name && typeof name === 'object') {\n                            name = name[I18n.getLanguage()] || name.en;\n                        } else {\n                            name = adapter.title || el;\n                        }\n                    }\n\n                    const item = {\n                        value: `${el}/${parts[3]}`,\n                        name: `${name} [${parts[3]}]`,\n                        icon: adapter.extIcon || adapter.icon,\n                        nogit: !!adapter.nogit,\n                        title: el,\n                    };\n\n                    // If installed, take the icon from local web server\n                    if (this.props.installed[name] && name !== 'admin') {\n                        item.icon = `/adapter/${el}/${adapter.icon.split('/admin/').pop()}`;\n                    }\n\n                    return item;\n                }\n                return null;\n            })\n            .filter(it => it)\n            .sort((a: any, b: any) => (a.name < b.name ? -1 : a.name > b.name ? 1 : 0));\n    }\n\n    render(): JSX.Element {\n        const closeInit = (): void => this.setState({ autoCompleteValue: null, url: '' });\n\n        return (\n            <Dialog\n                onClose={() => this.props.onClose()}\n                open={!0}\n                sx={{ '& .MuiDialog-paper': styles.paper }}\n            >\n                <DialogContent dividers>\n                    <Box\n                        component=\"div\"\n                        sx={styles.root}\n                    >\n                        <AppBar\n                            position=\"static\"\n                            color=\"default\"\n                        >\n                            <Tabs\n                                value={this.state.currentTab}\n                                onChange={(_e, newTab) => {\n                                    ((window as any)._localstorage || window.localStorage).setItem(\n                                        'App.gitTab',\n                                        newTab,\n                                    );\n                                    this.setState({ currentTab: newTab });\n                                }}\n                                variant=\"fullWidth\"\n                                indicatorColor=\"secondary\"\n                            >\n                                <Tab\n                                    label={this.props.t('From npm')}\n                                    wrapped\n                                    sx={{ '&.Mui-selected': styles.tabSelected }}\n                                    icon={\n                                        <img\n                                            src={npmIcon}\n                                            alt=\"npm\"\n                                            width={24}\n                                            height={24}\n                                        />\n                                    }\n                                    {...a11yProps('npm')}\n                                    value=\"npm\"\n                                />\n                                <Tab\n                                    label={this.props.t('From github')}\n                                    wrapped\n                                    sx={{ '&.Mui-selected': styles.tabSelected }}\n                                    icon={\n                                        <GithubIcon\n                                            style={{ width: 24, height: 24 }}\n                                            width={24}\n                                            height={24}\n                                        />\n                                    }\n                                    {...a11yProps('github')}\n                                    value=\"GitHub\"\n                                />\n                                <Tab\n                                    label={this.props.t('Custom')}\n                                    wrapped\n                                    sx={{ '&.Mui-selected': styles.tabSelected }}\n                                    icon={\n                                        <UrlIcon\n                                            width={24}\n                                            height={24}\n                                        />\n                                    }\n                                    {...a11yProps('custom')}\n                                    value=\"URL\"\n                                />\n                            </Tabs>\n                        </AppBar>\n                        <Box\n                            component=\"div\"\n                            sx={styles.title}\n                        >\n                            {this.props.t('Install or update the adapter from %s', this.state.currentTab || 'npm')}\n                        </Box>\n                        {this.renderNpm()}\n                        {this.renderGitHub()}\n                        {this.renderCustom()}\n                    </Box>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        id=\"github-install-dialog-ok\"\n                        variant=\"contained\"\n                        disabled={\n                            ((this.state.currentTab === 'GitHub' || this.state.currentTab === 'npm') &&\n                                !this.state.autoCompleteValue?.value) ||\n                            (this.state.currentTab === 'URL' && !this.state.url)\n                        }\n                        autoFocus\n                        onClick={async () => {\n                            if (this.state.currentTab === 'GitHub') {\n                                const parts = (this.state.autoCompleteValue?.value || '').split('/');\n                                const _url = `${parts[1]}/ioBroker.${parts[0]}`;\n                                void this.props.installFromUrl(_url, this.state.debug, true);\n                            } else if (this.state.currentTab === 'URL') {\n                                const customHistory = [...this.state.customHistory];\n                                customHistory.unshift(this.state.url);\n                                if (customHistory.length > MAX_HISTORY_LENGTH) {\n                                    customHistory.pop();\n                                }\n                                ((window as any)._localstorage || window.localStorage).setItem(\n                                    'App.npmHistory',\n                                    JSON.stringify(customHistory),\n                                );\n\n                                if (!this.state.url.includes('.')) {\n                                    void this.props.installFromUrl(\n                                        `iobroker.${this.state.url}`,\n                                        this.state.debug,\n                                        true,\n                                    );\n                                } else {\n                                    void this.props.installFromUrl(this.state.url, this.state.debug, true);\n                                }\n                            } else if (this.state.currentTab === 'npm') {\n                                const fullAdapterName = (this.state.autoCompleteValue?.value || '').split('/')[0];\n                                const adapterName = fullAdapterName.includes('.')\n                                    ? fullAdapterName.split('.')[1]\n                                    : fullAdapterName;\n\n                                try {\n                                    await this.props.installFromUrl(\n                                        `iobroker.${adapterName}@latest`,\n                                        this.state.debug,\n                                        true,\n                                    );\n                                    // on npm installations we want to perform an additional upload\n                                    this.props.upload(adapterName);\n                                } catch (e) {\n                                    console.error(`Installation from url failed: ${e.message}`);\n                                }\n                            }\n                            this.props.onClose();\n                            closeInit();\n                        }}\n                        color=\"primary\"\n                        startIcon={<CheckIcon />}\n                    >\n                        {this.props.t('Install')}\n                    </Button>\n                    <Button\n                        id=\"github-install-dialog-close\"\n                        variant=\"contained\"\n                        onClick={() => {\n                            this.props.onClose();\n                            closeInit();\n                        }}\n                        color=\"grey\"\n                        startIcon={<CloseIcon />}\n                    >\n                        {this.props.t('Close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default GitHubInstallDialog;\n","import React, { Component, type JSX } from 'react';\n\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    FormControl,\n    Grid2,\n    IconButton,\n    InputLabel,\n    MenuItem,\n    Select,\n    Typography,\n    type SelectChangeEvent,\n    Box,\n} from '@mui/material';\nimport { Close as CloseIcon, Add as AddIcon, Public as IconWeb, Language as LanguageIcon } from '@mui/icons-material';\n\nimport { type AdminConnection, I18n, Utils, type IobTheme, type Translate } from '@iobroker/adapter-react-v5';\n\nimport type HostsWorker from '@/Workers/HostsWorker';\nimport type InstancesWorker from '@/Workers/InstancesWorker';\nimport { checkCondition, type CompactInstanceInfo, type Message } from '@/dialogs/AdapterUpdateDialog';\nimport HostSelectors from '@/components/HostSelectors';\n\nconst styles: Record<string, any> = {\n    formControl: {\n        marginTop: 24,\n        width: 100,\n    },\n    closeButton: (theme: IobTheme) => ({\n        position: 'absolute',\n        right: 8,\n        top: 8,\n        color: theme.palette.grey[500],\n    }),\n    languageButton: {\n        position: 'absolute',\n        right: 52 + 8,\n        top: 8,\n    },\n    languageButtonActive: (theme: IobTheme) => ({\n        color: theme.palette.primary.main,\n    }),\n    paper: {\n        // minWidth: 600\n    },\n    typography: {\n        pr: '30px',\n    },\n    messageText: {},\n    messageColor_warn: {\n        color: '#cb7642',\n    },\n    messageColor_error: {\n        color: '#f5614d',\n    },\n    messageColor_info: {\n        color: '#5abd29',\n    },\n    messageTitle_warn: (theme: IobTheme) => ({\n        background: '#cb7642',\n        borderRadius: '3px',\n        pl: '10px',\n        fontWeight: 'bold',\n        color: theme.palette.mode === 'dark' ? 'black' : 'white',\n    }),\n    messageTitle_error: (theme: IobTheme) => ({\n        background: '#f5614d',\n        borderRadius: '3px',\n        pl: '10px',\n        fontWeight: 'bold',\n        color: theme.palette.mode === 'dark' ? 'black' : 'white',\n    }),\n    messageTitle_info: (theme: IobTheme) => ({\n        background: '#5abd29',\n        borderRadius: '3px',\n        pl: '10px',\n        fontWeight: 'bold',\n        color: theme.palette.mode === 'dark' ? 'black' : 'white',\n    }),\n    deps: (theme: IobTheme) => ({\n        m: '10px',\n        fontSize: 16,\n        color: theme.palette.mode === 'dark' ? '#e70000' : '#840101',\n    }),\n};\n\nexport interface AdapterDependencies {\n    name: string;\n    version: string | null;\n    installed: boolean;\n    installedVersion: string;\n    rightVersion: boolean;\n}\n\ninterface AddInstanceDialogProps {\n    adapter: string;\n    instancesWorker: InstancesWorker;\n    socket: AdminConnection;\n    currentHost: string;\n    currentInstance: string;\n    t: Translate;\n    onClose: (result: boolean) => void;\n    onHostChange: (host: string) => void;\n    onInstanceChange: (event: SelectChangeEvent<string>) => void;\n    instances: Record<string, CompactInstanceInfo>;\n    adapterObject: ioBroker.AdapterCommon;\n    dependencies: AdapterDependencies[];\n    hostsWorker: InstanceType<typeof HostsWorker>;\n    noTranslation: boolean;\n    toggleTranslation: () => void;\n    expertMode: boolean;\n    theme: IobTheme;\n}\n\ninterface AddInstanceDialogState {\n    instanceNumbers: string[];\n}\n\nclass AddInstanceDialog extends Component<AddInstanceDialogProps, AddInstanceDialogState> {\n    private readonly t: Translate;\n\n    private readonly messages: Message[] | null = null;\n\n    private readonly lang: string;\n\n    constructor(props: AddInstanceDialogProps) {\n        super(props);\n        this.state = {\n            instanceNumbers: [],\n        };\n        this.t = props.t;\n        this.lang = I18n.getLanguage();\n\n        this.messages = checkCondition(\n            props.adapterObject.messages,\n            null,\n            props.adapterObject.version,\n            props.instances,\n        );\n    }\n\n    componentDidMount(): void {\n        void this.props.instancesWorker.getObjects().then((instances: Record<string, ioBroker.InstanceObject>) => {\n            const instanceNumbers = Object.keys(instances)\n                .filter(id => instances[id]?.common?.name === this.props.adapter)\n                .map(id => id.substring(id.lastIndexOf('.') + 1));\n\n            this.setState({ instanceNumbers });\n        });\n    }\n\n    getAvailableInstances(): JSX.Element[] {\n        const result = [];\n        result.push(\n            <MenuItem\n                value=\"auto\"\n                key=\"auto\"\n            >\n                {this.t('auto')}\n            </MenuItem>,\n        );\n\n        for (let i = 0; i <= 100; i++) {\n            if (!this.state.instanceNumbers.includes(i.toString())) {\n                result.push(\n                    <MenuItem\n                        value={i.toString()}\n                        key={i}\n                    >\n                        {i}\n                    </MenuItem>,\n                );\n            }\n            if (result.length > 11) {\n                break;\n            }\n        }\n\n        return result;\n    }\n\n    checkDependencies(dependencies = this.props.dependencies): string | JSX.Element[] {\n        if (!dependencies) {\n            return '';\n        }\n        const array = [];\n        for (const adapter of dependencies) {\n            if (!adapter.installedVersion) {\n                array.push(this.props.t('No version of %s', adapter.name, adapter.name));\n            } else if (!adapter.rightVersion) {\n                array.push(\n                    `${this.props.t('Invalid version of %s. Required %s. Current ', adapter.name, adapter.version)}${adapter.installedVersion}`,\n                );\n            }\n        }\n        return array.length ? array.map(el => <div key={el}>{el}</div>) : '';\n    }\n\n    getText(text: string | { [lang: string]: string }, noTranslation?: boolean): string {\n        if (text && typeof text === 'object') {\n            if (noTranslation) {\n                return text.en;\n            }\n            return text[this.lang] || text.en;\n        }\n        return typeof text === 'object' ? '' : text;\n    }\n\n    renderOneMessage(message: Message, index: number): JSX.Element {\n        return (\n            <Grid2 key={index}>\n                <Typography sx={styles[`messageTitle_${message.level || 'warn'}`]}>\n                    {this.getText(message.title, this.props.noTranslation) || ''}\n                </Typography>\n                <Typography\n                    component=\"div\"\n                    variant=\"body2\"\n                    style={styles.messageText}\n                >\n                    {this.getText(message.text, this.props.noTranslation) || ''}\n                </Typography>\n                {message.link ? (\n                    <Button\n                        onClick={() => {\n                            const w = window.open(message.link, '_blank');\n                            w.focus();\n                        }}\n                        startIcon={<IconWeb />}\n                        variant=\"contained\"\n                        color=\"grey\"\n                    >\n                        {this.getText(message.linkText, this.props.noTranslation) || this.props.t('More info')}\n                    </Button>\n                ) : null}\n            </Grid2>\n        );\n    }\n\n    renderMessages(): JSX.Element | null {\n        if (this.messages) {\n            return (\n                <Grid2\n                    container\n                    spacing={2}\n                    direction=\"column\"\n                    wrap=\"nowrap\"\n                    sx={{ marginBottom: 1 }}\n                >\n                    {this.messages.map((message, i) => this.renderOneMessage(message, i))}\n                </Grid2>\n            );\n        }\n        return null;\n    }\n\n    render(): JSX.Element {\n        const checkDeps = this.checkDependencies();\n\n        return (\n            <Dialog\n                onClose={() => {}}\n                open={!0}\n                sx={{ '& .MuiDialog-paper': styles.paper }}\n            >\n                <DialogTitle>\n                    <Typography\n                        component=\"h2\"\n                        variant=\"h6\"\n                        sx={{ '&.MuiTypography-root': styles.typography }}\n                    >\n                        {this.t('You are going to add new instance:')} {this.props.adapter}\n                        <IconButton\n                            size=\"large\"\n                            sx={styles.closeButton}\n                            onClick={() => this.props.onClose(false)}\n                        >\n                            <CloseIcon />\n                        </IconButton>\n                        {this.messages && this.lang !== 'en' && this.props.toggleTranslation ? (\n                            <IconButton\n                                size=\"large\"\n                                style={Utils.getStyle(\n                                    this.props.theme,\n                                    styles.languageButton,\n                                    this.props.noTranslation && styles.languageButtonActive,\n                                )}\n                                onClick={this.props.toggleTranslation}\n                                title={I18n.t('Disable/Enable translation')}\n                            >\n                                <LanguageIcon />\n                            </IconButton>\n                        ) : null}\n                    </Typography>\n                </DialogTitle>\n                <DialogContent dividers>\n                    {this.renderMessages()}\n                    {!checkDeps && this.props.expertMode ? (\n                        <Grid2\n                            container\n                            direction=\"column\"\n                        >\n                            <HostSelectors\n                                tooltip={this.t('Select host to add the instance')}\n                                expertMode\n                                socket={this.props.socket}\n                                hostsWorker={this.props.hostsWorker}\n                                currentHost={this.props.currentHost}\n                                setCurrentHost={(hostName, hostId) =>\n                                    this.props.onHostChange(hostId.replace(/^system\\.host\\./, ''))\n                                }\n                            />\n                            <FormControl\n                                variant=\"standard\"\n                                style={styles.formControl}\n                            >\n                                <InputLabel id=\"instance-label\">{this.t('Instance')}</InputLabel>\n                                <Select\n                                    variant=\"standard\"\n                                    labelId=\"instance-label\"\n                                    value={this.props.currentInstance}\n                                    onChange={this.props.onInstanceChange}\n                                >\n                                    {this.getAvailableInstances()}\n                                </Select>\n                            </FormControl>\n                        </Grid2>\n                    ) : null}\n                    <Box\n                        component=\"div\"\n                        sx={styles.deps}\n                    >\n                        {checkDeps}\n                    </Box>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        id=\"instance-add-dialog-ok\"\n                        variant=\"contained\"\n                        autoFocus\n                        disabled={!!checkDeps}\n                        onClick={() => this.props.onClose(true)}\n                        color=\"primary\"\n                        startIcon={<AddIcon />}\n                    >\n                        {this.t('Add')}\n                    </Button>\n                    <Button\n                        id=\"instance-add-dialog-cancel\"\n                        variant=\"contained\"\n                        onClick={() => this.props.onClose(false)}\n                        color=\"grey\"\n                        startIcon={<CloseIcon />}\n                    >\n                        {this.t('Close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default AddInstanceDialog;\n","export interface RepoAdapterObject extends ioBroker.AdapterCommon {\n    versionDate: string;\n    controller?: boolean;\n    stat?: number;\n    node?: string;\n    allowAdapterInstall?: boolean;\n    allowAdapterUpdate?: boolean;\n    allowAdapterDelete?: boolean;\n    allowAdapterReadme?: boolean;\n    allowAdapterRating?: boolean;\n}\n\nexport function extractUrlLink(adapterRepo: RepoAdapterObject): string {\n    if (!adapterRepo) {\n        return '';\n    }\n    let url =\n        adapterRepo.licenseInformation?.link ||\n        // @ts-expect-error licenseUrl is deprecated\n        adapterRepo.licenseUrl;\n\n    if (!url || !url.includes('/LICENSE') || !url.includes('raw.githubusercontent.com')) {\n        url = adapterRepo.extIcon;\n        if (!url) {\n            url = adapterRepo.readme;\n            if (!url) {\n                console.error(`No extIcon for ${adapterRepo.name || JSON.stringify(adapterRepo)}`);\n                return '';\n            }\n            url = url.replace('github.com', 'raw.githubusercontent.com').replace('/blob/', '/');\n            if (url.includes('/main')) {\n                url = `${url.split('/main')[0]}/main/LICENSE`;\n            } else if (url.includes('/master')) {\n                url = `${url.split('/master')[0]}/master/LICENSE`;\n            }\n        }\n        if (url.includes('/main')) {\n            url = `${url.split('/main')[0]}/main/LICENSE`;\n        } else if (url.includes('/master')) {\n            url = `${url.split('/master')[0]}/master/LICENSE`;\n        } else {\n            return '';\n        }\n    }\n\n    return url;\n}\n","import React, { Component, type JSX } from 'react';\nimport semver from 'semver';\n\nimport { type Translate, type AdminConnection, type ThemeType, type IobTheme, I18n } from '@iobroker/adapter-react-v5';\n\nimport { checkCondition, type CompactInstanceInfo } from '@/dialogs/AdapterUpdateDialog';\n\nimport AddInstanceDialog, { type AdapterDependencies } from '@/dialogs/AddInstanceDialog';\nimport LicenseDialog from '@/dialogs/LicenseDialog';\nimport type { AdapterInformation } from '@iobroker/js-controller-common-db/build/esm/lib/common/tools';\nimport type InstancesWorker from '@/Workers/InstancesWorker';\nimport type HostsWorker from '@/Workers/HostsWorker';\nimport type { RatingDialogRepository } from '@/dialogs/RatingDialog';\nimport type HostAdapterWorker from '@/Workers/HostAdapterWorker';\nimport { extractUrlLink, type RepoAdapterObject } from './Utils';\n\nexport type AdapterRating = {\n    rating?: { r: number; c: number };\n    [version: string]: { r: number; c: number };\n};\nexport type AdapterRatingInfo = AdapterRating & { title: string };\n\nexport type AdapterInformationEx = AdapterInformation & {\n    installedFrom?: string;\n    enabled: number;\n    count: number;\n    ignoreVersion?: string;\n};\nexport type InstalledInfo = { [adapterName: string]: AdapterInformationEx } & {\n    hosts?: { [hostName: string]: ioBroker.HostCommon & { host: string; runningVersion: string } };\n};\n\nexport type AdaptersContext = {\n    expertMode: boolean;\n    t: Translate;\n    /** current selected host */\n    socket: AdminConnection;\n    removeUpdateAvailable: (adapterName: string) => void;\n    toggleTranslation: () => void;\n    noTranslation: boolean;\n    rightDependenciesFunc: (adapterName: string) => boolean;\n    lang: ioBroker.Languages;\n    uuid: string;\n    themeType: ThemeType;\n    theme: IobTheme;\n    onUpdating: (isUpdating: boolean) => void;\n    /** Information about ALL KNOWN adapters in the ioBroker infrastructure. Repo */\n    repository: Record<string, RepoAdapterObject & { rating?: AdapterRatingInfo }>;\n    /** Information about all installed adapters on this host */\n    installed: InstalledInfo;\n    /** Information about all installed adapters on all hosts */\n    installedGlobal: InstalledInfo;\n    /** very compact information about instances */\n    compactInstances: Record<string, CompactInstanceInfo>;\n    /** Information about installed adapters */\n    adapters: Record<string, ioBroker.AdapterObject>;\n    nodeJsVersion: string;\n    currentHost: string;\n    /** The host ID of the admin adapter, like system.host.test */\n    adminHost: string;\n    adminInstance: string;\n    /** Current selected host */\n    instancesWorker: InstancesWorker;\n    hostsWorker: HostsWorker;\n    executeCommand: (cmd: string, host?: string, callback?: (exitCode: number) => void) => void;\n    /** node.js version of current host */\n    categories: {\n        name: string;\n        translation: string;\n        count: number;\n        installed: number;\n        adapters: string[];\n    }[];\n    descHidden: boolean;\n    sortPopularFirst: boolean;\n    sortRecentlyUpdated: boolean;\n    isTileView: boolean;\n    updateRating: (adapter: string, rating: RatingDialogRepository) => void;\n    setAdminUpgradeTo: (version: string) => void;\n    hostAdapterWorker: HostAdapterWorker;\n};\n\nexport interface AdapterInstallDialogState {\n    showLicenseDialog: {\n        url: string;\n        licenseType: string;\n        upload?: boolean;\n        adapterName: string;\n    } | null;\n    addInstanceHostName: string;\n    addInstanceId: string;\n    addInstanceDialog: string;\n    showDialog: boolean;\n}\n\nexport default abstract class AdapterInstallDialog<TProps, TState extends AdapterInstallDialogState> extends Component<\n    TProps,\n    TState\n> {\n    protected constructor(props: TProps) {\n        super(props);\n\n        this.state = {\n            showDialog: false,\n            showLicenseDialog: null,\n            addInstanceHostName: '',\n            addInstanceId: 'auto',\n            addInstanceDialog: '',\n        } as TState;\n    }\n\n    renderLicenseDialog(context: AdaptersContext): JSX.Element | null {\n        if (!this.state.showLicenseDialog) {\n            return null;\n        }\n\n        return (\n            <LicenseDialog\n                licenseType={this.state.showLicenseDialog.licenseType}\n                url={this.state.showLicenseDialog.url}\n                onClose={result => {\n                    const showLicenseDialog = result ? this.state.showLicenseDialog : null;\n                    this.setState({ showLicenseDialog: null, showDialog: false }, () => {\n                        if (showLicenseDialog) {\n                            if (showLicenseDialog.upload) {\n                                AdapterInstallDialog.upload(showLicenseDialog.adapterName, context);\n                            } else {\n                                this.addInstance({ adapterName: showLicenseDialog.adapterName, context }).catch(e =>\n                                    window.alert(`Cannot add instance: ${e}`),\n                                );\n                            }\n                        }\n                    });\n                }}\n            />\n        );\n    }\n\n    async addInstance(options: {\n        adapterName: string;\n        // eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\n        instance?: 'auto' | string;\n        debug?: boolean;\n        customUrl?: boolean;\n        context: AdaptersContext;\n    }): Promise<void> {\n        if (!options.customUrl) {\n            const adapterObject = options.context.repository[options.adapterName];\n\n            const messages = checkCondition(\n                adapterObject.messages,\n                null,\n                adapterObject.version,\n                options.context.compactInstances,\n            );\n\n            if (!options.instance && (options.context.expertMode || messages)) {\n                this.setState({\n                    addInstanceDialog: options.adapterName,\n                    showDialog: true,\n                    addInstanceHostName: options.context.currentHost.replace(/^system\\.host\\./, ''),\n                    addInstanceId: options.instance || 'auto',\n                });\n                return;\n            }\n\n            if (options.instance) {\n                const instances = await options.context.instancesWorker.getObjects();\n                // if the instance already exists\n                if (instances && instances[`system.adapter.${options.adapterName}.${options.instance}`]) {\n                    window.alert(\n                        options.context.t('Instance %s already exists', `${options.adapterName}.${options.instance}`),\n                    );\n                    return;\n                }\n            }\n        }\n\n        const host = (this.state.addInstanceHostName || options.context.currentHost).replace(/^system\\.host\\./, '');\n\n        try {\n            await new Promise<void>((resolve, reject) => {\n                options.context.executeCommand(\n                    `${options.customUrl ? 'url' : 'add'} ${options.adapterName} ${options.instance ? `${options.instance} ` : ''}--host ${host} ${\n                        options.debug || options.context.expertMode ? '--debug' : ''\n                    }`,\n                    host,\n                    exitCode =>\n                        !exitCode ? resolve() : reject(new Error(`The process returned an exit code of ${exitCode}`)),\n                );\n            });\n        } catch (e) {\n            window.alert(`${I18n.t('Cannot install')}: ${e}`);\n        }\n    }\n\n    static getDependencies(adapterName: string, context: AdaptersContext): AdapterDependencies[] {\n        const adapter = context.repository[adapterName];\n        const result: AdapterDependencies[] = [];\n\n        if (adapter) {\n            if (adapter.dependencies && !Array.isArray(adapter.dependencies)) {\n                adapter.dependencies = [adapter.dependencies];\n            }\n\n            if (adapter.globalDependencies && !Array.isArray(adapter.globalDependencies)) {\n                adapter.globalDependencies = [adapter.globalDependencies];\n            }\n\n            const nodeVersion = adapter.node;\n\n            if (adapter.dependencies?.length) {\n                for (const dependency of adapter.dependencies) {\n                    const entry: AdapterDependencies = {\n                        name: '',\n                        version: null,\n                        installed: false,\n                        installedVersion: null,\n                        rightVersion: false,\n                    };\n\n                    const checkVersion = typeof dependency !== 'string';\n                    const keys = Object.keys(dependency);\n                    entry.name = !checkVersion ? dependency : keys ? keys[0] : null;\n                    entry.version = checkVersion ? dependency[entry.name] : null;\n\n                    if (result && entry.name) {\n                        const installed = context.installed[entry.name];\n\n                        entry.installed = !!installed;\n                        entry.installedVersion = installed ? installed.version : null;\n                        try {\n                            entry.rightVersion = installed\n                                ? checkVersion\n                                    ? semver.satisfies(installed.version, entry.version, { includePrerelease: true })\n                                    : true\n                                : false;\n                        } catch {\n                            entry.rightVersion = true;\n                        }\n                    }\n\n                    result.push(entry);\n                }\n            }\n\n            if (adapter.globalDependencies?.length) {\n                for (const dependency of adapter.globalDependencies) {\n                    const entry: AdapterDependencies = {\n                        name: '',\n                        version: null,\n                        installed: false,\n                        installedVersion: null,\n                        rightVersion: false,\n                    };\n\n                    const checkVersion = typeof dependency !== 'string';\n                    const keys = Object.keys(dependency);\n                    entry.name = !checkVersion ? dependency : keys ? keys[0] : null;\n                    entry.version = checkVersion ? dependency[entry.name] : null;\n\n                    if (result && entry.name) {\n                        const installed = context.installedGlobal[entry.name];\n\n                        entry.installed = !!installed;\n                        entry.installedVersion = installed ? installed.version : null;\n                        try {\n                            entry.rightVersion = installed\n                                ? checkVersion\n                                    ? semver.satisfies(installed.version, entry.version, { includePrerelease: true })\n                                    : true\n                                : false;\n                        } catch {\n                            entry.rightVersion = true;\n                        }\n                    }\n\n                    result.push(entry);\n                }\n            }\n\n            if (nodeVersion) {\n                const entry: AdapterDependencies = {\n                    name: 'node',\n                    version: nodeVersion,\n                    installed: true,\n                    installedVersion: context.nodeJsVersion,\n                    rightVersion: false,\n                };\n\n                try {\n                    entry.rightVersion = semver.satisfies(context.nodeJsVersion, nodeVersion);\n                } catch {\n                    entry.rightVersion = true;\n                }\n\n                result.push(entry);\n            }\n        }\n\n        return result;\n    }\n\n    renderAddInstanceDialog(context: AdaptersContext): JSX.Element | null {\n        if (!this.state.addInstanceDialog) {\n            return null;\n        }\n\n        return (\n            <AddInstanceDialog\n                adapter={this.state.addInstanceDialog}\n                socket={context.socket}\n                hostsWorker={context.hostsWorker}\n                instancesWorker={context.instancesWorker}\n                dependencies={AdapterInstallDialog.getDependencies(this.state.addInstanceDialog, context)}\n                currentHost={`system.host.${this.state.addInstanceHostName}`}\n                currentInstance={this.state.addInstanceId}\n                t={context.t}\n                onClose={(result: boolean) => {\n                    const addInstanceDialog = result ? this.state.addInstanceDialog : '';\n                    const addInstanceId = result ? this.state.addInstanceId : '';\n                    this.setState(\n                        {\n                            addInstanceDialog: '',\n                            addInstanceId: 'auto',\n                            showDialog: false,\n                        },\n                        () => {\n                            if (addInstanceDialog) {\n                                try {\n                                    void this.addInstance({\n                                        adapterName: addInstanceDialog,\n                                        instance: addInstanceId,\n                                        context,\n                                    });\n                                } catch (e) {\n                                    window.alert(`Cannot add instance: ${e}`);\n                                }\n                            }\n                        },\n                    );\n                }}\n                onHostChange={hostName =>\n                    this.setState({ addInstanceHostName: hostName.replace(/^system\\.host\\./, '') })\n                }\n                onInstanceChange={event => this.setState({ addInstanceId: event.target.value.toString() })}\n                adapterObject={context.repository[this.state.addInstanceDialog]}\n                instances={context.compactInstances}\n                toggleTranslation={context.toggleTranslation}\n                noTranslation={context.noTranslation}\n                expertMode={context.expertMode}\n                theme={context.theme}\n            />\n        );\n    }\n\n    static upload(adapterName: string, context: AdaptersContext): void {\n        context.executeCommand(`upload ${adapterName}${context.expertMode ? ' --debug' : ''}`);\n    }\n\n    // eslint-disable-next-line react/no-unused-class-component-methods\n    onAddInstance(adapterName: string, context: AdaptersContext): void {\n        const adapter = context.repository[adapterName];\n        const url = extractUrlLink(adapter);\n        const licenseType = adapter.licenseInformation?.license || adapter.license;\n\n        if (licenseType === 'MIT') {\n            this.addInstance({ adapterName, context }).catch(e => window.alert(`Cannot add instance: ${e}`));\n        } else {\n            this.setState({ showLicenseDialog: { url, adapterName, licenseType }, showDialog: true });\n        }\n    }\n\n    // eslint-disable-next-line react/no-unused-class-component-methods\n    renderDialogs(context: AdaptersContext): JSX.Element | null {\n        if (!this.state.showDialog) {\n            return null;\n        }\n\n        return (\n            <>\n                {this.renderAddInstanceDialog(context)}\n                {this.renderLicenseDialog(context)}\n            </>\n        );\n    }\n}\n","import React, { type JSX } from 'react';\n\nimport { Grid2 as Grid, IconButton, TableCell, TableRow, Typography } from '@mui/material';\n\nimport { blue, green } from '@mui/material/colors';\n\nimport { ChevronRight as ChevronRightIcon, ExpandMore as ExpandMoreIcon } from '@mui/icons-material';\n\nimport { type Translate } from '@iobroker/adapter-react-v5';\n\nimport MaterialDynamicIcon from '../../helpers/MaterialDynamicIcon';\n\nconst styles: Record<string, React.CSSProperties> = {\n    name: {\n        flexWrap: 'nowrap',\n        width: 300,\n        marginTop: 0,\n    },\n    nameDiv: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    categoryName: {\n        fontWeight: 'bold',\n        cursor: 'pointer',\n    },\n    green: {\n        color: green[500],\n    },\n    blue: {\n        color: blue[700],\n    },\n    category: {\n        backgroundColor: 'background.default',\n    },\n    marginRight5: {\n        marginRight: 5,\n    },\n};\n\ninterface AdapterCategoryRowProps {\n    descHidden: boolean;\n    categoryName: string;\n    expanded: boolean;\n    installedCount: number;\n    /** Translated name */\n    name: string;\n    /** If category is toggled */\n    onToggle: () => void;\n    /** Number of adapters in category */\n    count: number;\n    t: Translate;\n}\n\nfunction AdapterCategoryRow(props: AdapterCategoryRowProps): JSX.Element {\n    const { installedCount, name, categoryName } = props;\n\n    return (\n        <TableRow\n            hover={false}\n            sx={styles.category}\n        >\n            <TableCell>\n                <Grid\n                    container\n                    spacing={1}\n                    alignItems=\"center\"\n                    style={styles.name}\n                >\n                    <Grid component=\"div\">\n                        <IconButton\n                            size=\"small\"\n                            onClick={props.onToggle}\n                        >\n                            {props.expanded ? <ExpandMoreIcon /> : <ChevronRightIcon />}\n                        </IconButton>\n                    </Grid>\n                </Grid>\n            </TableCell>\n            <TableCell onClick={props.onToggle}>\n                <div style={{ ...styles.nameDiv, ...styles.categoryName }}>\n                    <MaterialDynamicIcon\n                        iconName={categoryName}\n                        style={styles.marginRight5}\n                    />\n                    {name}\n                </div>\n            </TableCell>\n            <TableCell colSpan={props.descHidden ? 5 : 6}>\n                <Typography\n                    component=\"span\"\n                    variant=\"body2\"\n                    style={styles.green}\n                >\n                    {installedCount}\n                </Typography>\n                {` ${props.t('of')} `}\n                <Typography\n                    component=\"span\"\n                    variant=\"body2\"\n                    style={styles.blue}\n                >\n                    {props.count}\n                </Typography>\n                {` ${props.t('Adapters from this Group installed')}`}\n            </TableCell>\n        </TableRow>\n    );\n}\n\nexport default AdapterCategoryRow;\n","import React, { Component, type JSX } from 'react';\n\nimport {\n    Dialog,\n    DialogContent,\n    DialogActions,\n    DialogTitle,\n    Rating,\n    Button,\n    IconButton,\n    InputAdornment,\n    TextField,\n    List,\n    ListItem,\n    ListItemText,\n    ListItemAvatar,\n    InputLabel,\n    MenuItem,\n    FormControl,\n    Select,\n    Typography,\n    Box,\n} from '@mui/material';\n\nimport { HowToVote as VoteIcon, Close as CloseIcon, Info as InfoIcon } from '@mui/icons-material';\n\nimport type { IobTheme, Translate } from '@iobroker/adapter-react-v5';\n\nconst styles: Record<string, any> = {\n    rating: {\n        marginBottom: 20,\n    },\n    listRating: {\n        marginRight: 8,\n    },\n    listTime: {\n        opacity: 0.5,\n        fontStyle: 'italic',\n    },\n    list: {\n        // maxHeight: 200,\n    },\n    listOwn: (theme: IobTheme) => ({\n        backgroundColor:\n            theme.name === 'colored' || theme.name === 'light' ? '#16516e2e' : theme.palette.secondary.dark,\n    }),\n    listTitle: (theme: IobTheme) => ({\n        backgroundColor: theme.palette.primary.dark,\n        pt: '4px',\n        pb: '4px',\n        mb: '4px',\n        color: '#ffffff',\n        textAlign: 'center',\n    }),\n    languageFilter: {\n        width: 300,\n    },\n    ratingTextControl: {\n        width: 'calc(100% - 138px)',\n        marginRight: 8,\n    },\n    ratingLanguageControl: {\n        width: 130,\n    },\n    noComments: {\n        width: '100%',\n        textAlign: 'center',\n        marginTop: 16,\n    },\n    commentCount: {\n        marginTop: 2,\n        marginLeft: 8,\n        opacity: 0.8,\n        fontSize: 10,\n        float: 'right',\n    },\n    infoText: {\n        textAlign: 'left',\n        fontSize: '14px',\n    },\n    infoTextContainer: {\n        display: 'flex',\n        paddingBottom: '10px',\n        alignItems: 'center',\n        gap: '10px',\n    },\n};\n\nconst LANGUAGES = [\n    {\n        id: 'en',\n        title: 'English',\n    },\n    {\n        id: 'de',\n        title: 'Deutsch',\n    },\n    {\n        id: 'ru',\n        title: 'русский',\n    },\n    {\n        id: 'pt',\n        title: 'Portugues',\n    },\n    {\n        id: 'nl',\n        title: 'Nederlands',\n    },\n    {\n        id: 'fr',\n        title: 'français',\n    },\n    {\n        id: 'it',\n        title: 'Italiano',\n    },\n    {\n        id: 'es',\n        title: 'Espanol',\n    },\n    {\n        id: 'pl',\n        title: 'Polski',\n    },\n    {\n        id: 'uk',\n        title: 'Українська',\n    },\n    {\n        id: 'zh-ch',\n        title: '简体中文',\n    },\n];\n// {\n//     \"adapter\": \"history\",\n//     \"rating\": {\n//     \"r\": 3.5,\n//         \"c\": 20\n//     },\n//     \"3.0.1\": {\n//         \"r\": 3.8,\n//         \"c\": 5\n//     }\n// }\nexport interface RatingDialogRepository {\n    rating: {\n        r: number;\n        ts: number;\n    };\n    [version: string]: {\n        r: number;\n        ts: number;\n    };\n}\n\ninterface RatingDialogVotings {\n    rating?: Record<string, { r: number; ts: number }>;\n    comments?: Array<{ comment: string; lang: string; rating: number; ts: number; uuid: string; version: string }>;\n}\n\ninterface RatingDialogProps {\n    t: Translate;\n    lang: string;\n    uuid: string;\n    version: string;\n    currentRating: { rating?: { r: number; c: number }; title: string };\n    adapter: string;\n    onClose: (update?: RatingDialogRepository) => void;\n}\n\ninterface RatingDialogState {\n    ratingNumber: number;\n    ratingComment: string;\n    votings: RatingDialogVotings;\n    ratingLang: string;\n    filterLang: string;\n    commentsByLanguage: Record<string, number>;\n}\n\nclass RatingDialog extends Component<RatingDialogProps, RatingDialogState> {\n    constructor(props: RatingDialogProps) {\n        super(props);\n\n        this.state = {\n            ratingNumber: 0,\n            ratingComment: '',\n            votings: null,\n            ratingLang: this.props.lang,\n            filterLang:\n                (((window as any)._localStorage as Storage) || window.localStorage).getItem('app.commentLang') ||\n                this.props.lang,\n            commentsByLanguage: {},\n        };\n    }\n\n    componentDidMount(): void {\n        void fetch(`https://rating.iobroker.net/adapter/${this.props.adapter}?uuid=${this.props.uuid}`)\n            .then(res => res.json())\n            .then((votings: RatingDialogVotings) => {\n                votings = votings || {};\n                votings.rating = votings.rating || {};\n                const versions = Object.keys(votings.rating);\n                versions.sort((a, b) =>\n                    votings.rating[a].ts > votings.rating[b].ts\n                        ? -1\n                        : votings.rating[a].ts < votings.rating[b].ts\n                          ? 1\n                          : 0,\n                );\n                const commentsByLanguage: Record<string, number> = {};\n\n                if (votings.comments) {\n                    votings.comments.sort((a, b) => (a.ts > b.ts ? -1 : a.ts < b.ts ? 1 : 0));\n\n                    votings.comments.forEach(comment => {\n                        commentsByLanguage[comment.lang] = commentsByLanguage[comment.lang] || 0;\n                        commentsByLanguage[comment.lang]++;\n                    });\n                }\n\n                if (versions.length) {\n                    const item = votings.rating[versions[0]];\n                    this.setState({ votings, ratingNumber: item ? item.r : 0, commentsByLanguage });\n                } else {\n                    this.setState({ votings, commentsByLanguage });\n                }\n            });\n    }\n\n    setAdapterRating(\n        adapter: string,\n        version: string,\n        rating: number,\n        comment: string,\n        lang: string,\n    ): Promise<RatingDialogRepository | null> {\n        return fetch('https://rating.iobroker.net/vote', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            redirect: 'follow',\n            body: JSON.stringify({\n                uuid: this.props.uuid,\n                adapter,\n                version,\n                rating,\n                comment,\n                lang,\n            }),\n        })\n            .then(res => res.json())\n            .then((update: RatingDialogRepository & { adapter: string }) => {\n                window.alert(`${this.props.t('Vote:')} ${adapter}@${version}=${rating}`);\n                delete update.adapter;\n                return update;\n            })\n            .catch((e: unknown): null => {\n                window.alert(`Cannot vote: ${e as Error}`);\n                return null;\n            });\n    }\n\n    /**\n     * Renders the info text component, which explains the rating section\n     */\n    renderInfoText(): JSX.Element {\n        return (\n            <div style={styles.infoTextContainer}>\n                <InfoIcon />\n                <Typography style={styles.infoText}>{this.props.t('use GitHub for issues')}</Typography>\n            </div>\n        );\n    }\n\n    renderComments(): JSX.Element {\n        if (this.state.votings?.comments && this.state.votings.comments.length) {\n            const found = this.state.votings.comments.find(\n                comment =>\n                    !(this.state.filterLang && this.state.filterLang !== '_' && comment.lang !== this.state.filterLang),\n            );\n\n            return (\n                <div style={{ width: '100%', textAlign: 'left' }}>\n                    <Box\n                        component=\"h3\"\n                        sx={styles.listTitle}\n                    >\n                        {this.props.t('Comments')}\n                    </Box>\n                    <FormControl\n                        variant=\"standard\"\n                        style={styles.languageFilter}\n                    >\n                        <InputLabel>{this.props.t('Show comments in language')}</InputLabel>\n                        <Select\n                            variant=\"standard\"\n                            value={this.state.filterLang}\n                            onChange={e => {\n                                (((window as any)._localStorage as Storage) || window.localStorage).setItem(\n                                    'app.commentLang',\n                                    e.target.value,\n                                );\n                                this.setState({ filterLang: e.target.value });\n                            }}\n                        >\n                            <MenuItem value=\"_\">\n                                {this.props.t('All')}{' '}\n                                <span style={styles.commentCount}>{this.state.votings.comments.length}</span>\n                            </MenuItem>\n                            {LANGUAGES.map(item => (\n                                <MenuItem\n                                    key={item.id}\n                                    value={item.id}\n                                >\n                                    {item.title}{' '}\n                                    {this.state.commentsByLanguage[item.id] ? (\n                                        <span style={styles.commentCount}>\n                                            {this.state.commentsByLanguage[item.id]}\n                                        </span>\n                                    ) : null}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                    <List\n                        style={styles.list}\n                        dense\n                        disablePadding\n                    >\n                        {found &&\n                            this.state.votings.comments.map((comment, i) => {\n                                if (\n                                    this.state.filterLang &&\n                                    this.state.filterLang !== '_' &&\n                                    comment.lang !== this.state.filterLang\n                                ) {\n                                    return null;\n                                }\n                                return comment ? (\n                                    <ListItem\n                                        key={i}\n                                        title={comment.uuid ? this.props.t('Your comment') : ''}\n                                        sx={{ '&.MuiListItem-root': comment.uuid ? styles.listOwn : undefined }}\n                                        dense\n                                    >\n                                        <ListItemAvatar style={styles.listRating}>\n                                            <Rating\n                                                readOnly\n                                                defaultValue={comment.rating}\n                                                size=\"small\"\n                                            />\n                                        </ListItemAvatar>\n                                        <ListItemText\n                                            primary={comment.comment}\n                                            secondary={`${new Date(comment.ts).toLocaleString()} / v${comment.version}`}\n                                            sx={{ '& .MuiListItemText-secondary': styles.listTime }}\n                                        />\n                                    </ListItem>\n                                ) : null;\n                            })}\n                        {!found && (\n                            <div style={styles.noComments}>{this.props.t('No comments in selected language')}</div>\n                        )}\n                    </List>\n                </div>\n            );\n        }\n        return null;\n    }\n\n    render(): JSX.Element {\n        let item: { r: number; ts: number };\n        let versions: string[];\n        if (this.state.votings) {\n            const votings = this.state.votings.rating;\n            versions = Object.keys(votings);\n            versions.sort((a, b) => (votings[a].ts > votings[b].ts ? -1 : votings[a].ts < votings[b].ts ? 1 : 0));\n            if (versions.length) {\n                item = votings[versions[0]];\n            }\n        }\n\n        return (\n            <Dialog\n                open={!0}\n                onClose={() => this.props.onClose()}\n            >\n                <DialogTitle>{`${this.props.t('Review')} ${this.props.adapter}${this.props.version ? `@${this.props.version}` : ''}`}</DialogTitle>\n                <DialogContent\n                    style={{ textAlign: 'center' }}\n                    title={this.props.currentRating?.title || ''}\n                >\n                    {this.renderInfoText()}\n                    <Rating\n                        style={styles.rating}\n                        name={this.props.adapter}\n                        value={this.props.version ? this.state.ratingNumber : this.props.currentRating?.rating?.r}\n                        size=\"large\"\n                        readOnly={!this.props.version}\n                        onChange={(_event, newValue) => this.setState({ ratingNumber: newValue })}\n                    />\n                    {this.props.version ? (\n                        <div style={{ width: '100%', textAlign: 'left' }}>\n                            <TextField\n                                variant=\"standard\"\n                                style={styles.ratingTextControl}\n                                value={this.state.ratingComment}\n                                label={this.props.t('Comment to version')}\n                                helperText={this.props.t('Max length %s characters', 200)}\n                                onChange={e => this.setState({ ratingComment: e.target.value })}\n                                slotProps={{\n                                    input: {\n                                        endAdornment: this.state.ratingComment ? (\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                    size=\"small\"\n                                                    onClick={() => this.setState({ ratingComment: '' })}\n                                                >\n                                                    <CloseIcon />\n                                                </IconButton>\n                                            </InputAdornment>\n                                        ) : null,\n                                    },\n                                    htmlInput: {\n                                        maxLength: 200,\n                                    },\n                                }}\n                            />\n                            <FormControl\n                                variant=\"standard\"\n                                style={styles.ratingLanguageControl}\n                            >\n                                <InputLabel>{this.props.t('Language')}</InputLabel>\n                                <Select\n                                    variant=\"standard\"\n                                    value={this.state.ratingLang}\n                                    onChange={e => this.setState({ ratingLang: e.target.value })}\n                                >\n                                    {LANGUAGES.map(it => (\n                                        <MenuItem\n                                            key={it.id}\n                                            value={it.id}\n                                        >\n                                            {it.title}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                        </div>\n                    ) : null}\n                    {this.props.version ? (\n                        <div style={{ paddingTop: 20, paddingBottom: 16 }}>\n                            {this.props.t(\n                                'Rate how good this version of the adapter works on your system. You can vote for every new version.',\n                            )}\n                        </div>\n                    ) : null}\n\n                    {versions && item ? (\n                        <div>\n                            {this.props.t(\n                                'You voted for %s on %s',\n                                versions[0],\n                                new Date(item.ts).toLocaleDateString(),\n                            )}\n                        </div>\n                    ) : null}\n                    {this.renderComments()}\n                </DialogContent>\n                <DialogActions>\n                    {this.props.version && (\n                        <Button\n                            variant=\"contained\"\n                            autoFocus\n                            color=\"primary\"\n                            disabled={!this.state.ratingNumber || this.state.votings === null}\n                            onClick={() => {\n                                if (this.state.ratingNumber !== item?.r || this.state.ratingComment) {\n                                    void this.setAdapterRating(\n                                        this.props.adapter,\n                                        this.props.version,\n                                        this.state.ratingNumber,\n                                        this.state.ratingComment,\n                                        this.state.ratingLang,\n                                    ).then(update => this.props.onClose(update));\n                                } else {\n                                    this.props.onClose();\n                                }\n                            }}\n                            startIcon={<VoteIcon />}\n                        >\n                            {this.props.t('Rate')}\n                        </Button>\n                    )}\n                    <Button\n                        autoFocus={!this.props.version}\n                        variant=\"contained\"\n                        onClick={() => this.props.onClose()}\n                        color=\"grey\"\n                        startIcon={<CloseIcon />}\n                    >\n                        {this.props.t('Close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default RatingDialog;\n","import React, { Component, type JSX } from 'react';\n\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    IconButton,\n    Typography,\n    FormControlLabel,\n    Checkbox,\n} from '@mui/material';\n\nimport { Close as CloseIcon, Check as CheckIcon } from '@mui/icons-material';\n\nimport type { AdminConnection, IobTheme, Translate } from '@iobroker/adapter-react-v5';\n\nconst styles: Record<string, any> = {\n    formControl: {\n        marginTop: 24,\n    },\n    closeButton: (theme: IobTheme) => ({\n        position: 'absolute',\n        right: 8,\n        top: 8,\n        color: theme.palette.grey[500],\n    }),\n    typography: {\n        paddingRight: 30,\n    },\n};\n\ninterface AdapterDeletionDialogProps {\n    adapter: string;\n    socket: AdminConnection;\n    t: Translate;\n    onClose: () => void;\n    onClick: (deleteCustom: boolean) => void;\n}\n\ninterface AdapterDeletionDialogState {\n    deleteCustom: boolean;\n    deleteCustomSupported: boolean;\n}\n\nclass AdapterDeletionDialog extends Component<AdapterDeletionDialogProps, AdapterDeletionDialogState> {\n    private readonly t: Translate;\n\n    constructor(props: AdapterDeletionDialogProps) {\n        super(props);\n\n        this.state = {\n            deleteCustom: false,\n            deleteCustomSupported: false,\n        };\n        this.t = props.t;\n    }\n\n    componentDidMount(): void {\n        void this.props.socket.checkFeatureSupported('DEL_INSTANCE_CUSTOM').then(deleteCustomSupported => {\n            if (deleteCustomSupported) {\n                return this.props.socket.getObject(`system.adapter.${this.props.adapter}`).then(obj => {\n                    if (obj?.common) {\n                        if (obj.common.supportCustoms) {\n                            this.setState({ deleteCustomSupported: obj.common.supportCustoms });\n                        }\n                    } else {\n                        this.setState({ deleteCustomSupported: true });\n                    }\n                });\n            }\n        });\n    }\n\n    render(): JSX.Element {\n        return (\n            <Dialog\n                onClose={this.props.onClose}\n                open={!0}\n            >\n                <DialogTitle>\n                    <Typography\n                        component=\"h2\"\n                        variant=\"h6\"\n                        sx={{ '&.MuiTypography-root': styles.typography }}\n                    >\n                        {this.t('Please confirm')}\n                        <IconButton\n                            size=\"large\"\n                            sx={styles.closeButton}\n                            onClick={this.props.onClose}\n                        >\n                            <CloseIcon />\n                        </IconButton>\n                    </Typography>\n                </DialogTitle>\n                <DialogContent dividers>\n                    <Typography gutterBottom>\n                        {this.t('Are you sure you want to delete adapter %s?', this.props.adapter)}\n                    </Typography>\n                    {this.state.deleteCustomSupported && (\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={this.state.deleteCustom}\n                                    onChange={e => this.setState({ deleteCustom: e.target.checked })}\n                                />\n                            }\n                            label={this.t('Delete all custom object settings of this adapter too')}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        id=\"adapter-delete-dialog-ok\"\n                        variant=\"contained\"\n                        autoFocus\n                        onClick={() => {\n                            this.props.onClick(this.state.deleteCustom);\n                            this.props.onClose();\n                        }}\n                        color=\"primary\"\n                        startIcon={<CheckIcon />}\n                    >\n                        {this.t('Ok')}\n                    </Button>\n                    <Button\n                        id=\"adapter-delete-dialog-cancel\"\n                        variant=\"contained\"\n                        autoFocus\n                        onClick={() => this.props.onClose()}\n                        color=\"grey\"\n                        startIcon={<CloseIcon />}\n                    >\n                        {this.t('Close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default AdapterDeletionDialog;\n","import React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, MenuItem, Select, Typography } from '@mui/material';\n\nimport {\n    Close as CloseIcon,\n    HorizontalRule,\n    KeyboardDoubleArrowUp,\n    North,\n    VerticalAlignTop,\n    Save,\n} from '@mui/icons-material';\n\nimport { type AdminConnection, I18n } from '@iobroker/adapter-react-v5';\nimport { InfoBox } from '@foxriver76/iob-component-lib';\nimport IsVisible from '@/components/IsVisible';\nimport { AUTO_UPGRADE_OPTIONS_MAPPING, AUTO_UPGRADE_SETTINGS } from '@/helpers/utils';\n\nexport const ICONS: Record<string, React.JSX.Element> = {\n    none: <HorizontalRule />,\n    patch: <KeyboardDoubleArrowUp style={{ color: 'green' }} />,\n    minor: <North style={{ color: 'orange' }} />,\n    major: <VerticalAlignTop style={{ color: 'red' }} />,\n};\n\ninterface AutoUpgradeConfigDialogProps {\n    /** Called when user closes dialog */\n    onClose: () => void;\n    /** The socket connection */\n    socket: AdminConnection;\n    /** The host id of the host to upgrade node.js on */\n    hostId: string;\n    /** Name of the adapter */\n    adapter: string;\n}\n\ninterface AutoUpgradeConfigDialogState {\n    /** Auto upgrade policy which is currently saved */\n    currentSavedPolicy: ioBroker.AutoUpgradePolicy;\n    /** The current configured auto upgrade policy */\n    policy: ioBroker.AutoUpgradePolicy;\n    /** The repositories the config apply for */\n    repositories: string[];\n    /** If the feature is supported */\n    supported: boolean;\n}\n\nexport default class AutoUpgradeConfigDialog extends React.Component<\n    AutoUpgradeConfigDialogProps,\n    AutoUpgradeConfigDialogState\n> {\n    constructor(props: AutoUpgradeConfigDialogProps) {\n        super(props);\n\n        this.state = {\n            currentSavedPolicy: 'none',\n            policy: 'none',\n            repositories: [],\n            supported: true,\n        };\n    }\n\n    /**\n     * Lifecycle hook called if component is mounted\n     */\n    async componentDidMount(): Promise<void> {\n        await this.getConfiguredRepositories();\n        await this.getCurrentAutoUpgradeSetting();\n    }\n\n    async getConfiguredRepositories(): Promise<void> {\n        const sysConfig = await this.props.socket.getObject('system.config');\n\n        if (!sysConfig?.common?.adapterAutoUpgrade) {\n            return;\n        }\n\n        const activeRepos = Object.entries(sysConfig.common.adapterAutoUpgrade.repositories)\n            .filter(([, active]) => active)\n            .map(([repoName]) => repoName);\n\n        this.setState({ repositories: activeRepos });\n    }\n\n    /**\n     * Get id of the adapter object\n     */\n    private getAdapterId(): string {\n        return `${this.props.hostId}.adapter.${this.props.adapter}`;\n    }\n\n    /**\n     * Get the current auto upgrade setting\n     */\n    async getCurrentAutoUpgradeSetting(): Promise<void> {\n        const obj = (await this.props.socket.getObject(this.getAdapterId())) as ioBroker.AdapterObject;\n\n        if (!obj) {\n            console.error('no adapter object existing');\n            this.setState({ supported: false });\n            return;\n        }\n\n        this.setState({\n            policy: obj.common.automaticUpgrade || 'none',\n            currentSavedPolicy: obj.common.automaticUpgrade || 'none',\n        });\n    }\n\n    /**\n     * Save the current setting to the adapter object\n     */\n    async save(): Promise<void> {\n        const obj = (await this.props.socket.getObject(this.getAdapterId())) as ioBroker.AdapterObject;\n\n        if (!obj) {\n            console.error('no adapter object existing');\n            this.setState({ supported: false });\n            return;\n        }\n\n        obj.common.automaticUpgrade = this.state.policy;\n        await this.props.socket.setObject(this.getAdapterId(), obj);\n        this.setState({ currentSavedPolicy: this.state.policy }, () => this.props.onClose());\n    }\n\n    /**\n     * Render the element\n     */\n    render(): React.JSX.Element {\n        return (\n            <Dialog\n                open={!0}\n                maxWidth=\"md\"\n                fullWidth\n            >\n                <DialogTitle>{I18n.t('Auto upgrade policy for %s', this.props.adapter)}</DialogTitle>\n                <DialogContent style={{ padding: '0 20px', overflow: 'hidden' }}>\n                    <IsVisible value={!this.state.supported}>\n                        <Typography>\n                            {I18n.t('This feature is supported up from js-controller Kiera (Version 6)!')}\n                        </Typography>\n                    </IsVisible>\n                    <IsVisible value={this.state.supported}>\n                        <Typography>\n                            {I18n.t('Allow only the following upgrades to be performed automatically:')}\n                        </Typography>\n                        <Select\n                            variant=\"standard\"\n                            style={{\n                                marginTop: 20,\n                                minWidth: 150,\n                                marginBottom: 8,\n                            }}\n                            value={this.state.policy}\n                            onChange={e => this.setState({ policy: e.target.value as ioBroker.AutoUpgradePolicy })}\n                        >\n                            {AUTO_UPGRADE_SETTINGS.map(option => (\n                                <MenuItem\n                                    key={option}\n                                    value={option}\n                                >\n                                    <div style={{ display: 'flex', gap: 8 }}>\n                                        {ICONS[option]}\n                                        {AUTO_UPGRADE_OPTIONS_MAPPING[option]}\n                                    </div>\n                                </MenuItem>\n                            ))}\n                        </Select>\n                        <IsVisible value={this.state.repositories.includes('beta') && this.state.policy !== 'none'}>\n                            <InfoBox type=\"warning\">{I18n.t('repo_update_hint')}</InfoBox>\n                        </IsVisible>\n                        <IsVisible value={this.state.policy === 'major'}>\n                            <InfoBox type=\"warning\">\n                                {I18n.t(\n                                    'The current selected configuration will allow to automatically pull in incompatible changes of this adapter!',\n                                )}\n                            </InfoBox>\n                        </IsVisible>\n                    </IsVisible>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        disabled={this.state.currentSavedPolicy === this.state.policy}\n                        color=\"primary\"\n                        variant=\"contained\"\n                        startIcon={<Save />}\n                        onClick={() => this.save()}\n                    >\n                        {I18n.t('Save')}\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        onClick={() => this.props.onClose()}\n                        color=\"grey\"\n                        startIcon={<CloseIcon />}\n                    >\n                        {I18n.t('Close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n","import React, { type JSX } from 'react';\nimport semver from 'semver';\n\nimport { amber, green, red } from '@mui/material/colors';\n\nimport {\n    CardMedia,\n    IconButton,\n    Tooltip,\n    Typography,\n    Rating,\n    Grid2,\n    Link,\n    TextField,\n    InputAdornment,\n    Button,\n    Card,\n    CardContent,\n    Box,\n} from '@mui/material';\n\nimport {\n    Refresh as RefreshIcon,\n    Add as AddIcon,\n    Help as HelpIcon,\n    KeyboardArrowUp,\n    Cloud as CloudIcon,\n    CloudOff as CloudOffIcon,\n    ArrowUpward as ArrowUpwardIcon,\n    ArrowDownward as ArrowDownwardIcon,\n    Remove as RemoveIcon,\n    GitHub as GitHubIcon,\n    MonetizationOn,\n    Close as CloseIcon,\n    Link as LinkIcon,\n    Publish as PublishIcon,\n    DeleteForever as DeleteForeverIcon,\n    AddToPhotos as AddToPhotosIcon,\n    Build as BuildIcon,\n} from '@mui/icons-material';\n\nimport { type IobTheme, Utils } from '@iobroker/adapter-react-v5';\n\nimport AdapterUpdateDialog from '@/dialogs/AdapterUpdateDialog';\nimport CustomModal from '@/components/CustomModal';\nimport RatingDialog, { type RatingDialogRepository } from '@/dialogs/RatingDialog';\nimport AdapterDeletionDialog from '@/dialogs/AdapterDeletionDialog';\nimport AdminUtils from '@/helpers/AdminUtils';\nimport AdapterInstallDialog, {\n    type AdapterInstallDialogState,\n    type AdapterRating,\n    type AdapterRatingInfo,\n    type AdaptersContext,\n} from '@/components/Adapters/AdapterInstallDialog';\nimport AutoUpgradeConfigDialog, { ICONS } from '@/dialogs/AutoUpgradeConfigDialog';\n\nimport IsVisible from '../IsVisible';\nimport { extractUrlLink } from './Utils';\nimport sentryIcon from '../../assets/sentry.svg';\n\nexport const genericStyles: Record<string, any> = {\n    hidden: {\n        display: 'none',\n    },\n    buttonUpdate: {\n        border: '1px solid',\n        padding: '0px 7px',\n        borderRadius: 5,\n        display: 'flex',\n        alignItems: 'center',\n        cursor: 'pointer',\n        transition: 'background 0.5s',\n        '&:hover': {\n            background: '#00800026',\n        },\n    },\n\n    buttonUpdateIcon: {\n        height: 20,\n        width: 20,\n        marginRight: 10,\n    },\n\n    classPoll: {\n        color: 'orange',\n    },\n    classPush: {\n        color: 'green',\n    },\n    classAssumption: {\n        color: 'red',\n        transform: 'rotate(90deg)',\n    },\n    marginLeft5: {\n        marginLeft: 5,\n    },\n    ratingSet: {\n        cursor: 'pointer',\n    },\n    sentry: {\n        width: 21,\n        height: 21,\n        objectFit: 'fill',\n        marginTop: 3,\n        filter: 'invert(0%) sepia(90%) saturate(1267%) hue-rotate(-260deg) brightness(99%) contrast(97%)',\n    },\n    tooltip: {\n        pointerEvents: 'none',\n    },\n    wrongDependencies: {\n        color: red[700],\n    },\n    updateAvailable: {\n        color: green[700],\n    },\n    currentVersion: (theme: IobTheme) => ({\n        cursor: 'pointer',\n        mb: '6px',\n        mr: '8px',\n        mt: '4px',\n        '&:hover': {\n            background: theme.palette.primary.dark,\n        },\n    }),\n    header: (theme: IobTheme) => ({\n        fontWeight: 'bold',\n        background: theme.palette.secondary.main,\n        p: '10px',\n    }),\n    modalDialog: {\n        height: 'calc(100% - 64px)',\n        overflowY: 'hidden',\n    },\n    currentVersionText: (theme: IobTheme) => ({\n        color: theme.palette.mode === 'dark' ? '#a3ffa3' : '#009800',\n        fontWeight: 'bold',\n    }),\n    rating: {},\n    containerVersion: {},\n    containerSpecificVersion: {},\n    versionWarn: {\n        color: amber[500],\n    },\n    cardContentFlexBetween: {},\n    cardContentFlex: {},\n};\n\nexport type Ratings = { [adapterName: string]: AdapterRating } & { uuid: string };\n\nexport type AdapterCacheEntry = {\n    title: string;\n    desc: string;\n    image: string;\n    connectionType: string;\n    updateAvailable: boolean;\n    rightDependencies: boolean;\n    rightOs: boolean;\n    sentry: boolean;\n    daysAgo: number;\n    stat: number;\n    daysAgoText: string;\n};\n\nexport interface AdapterGenericProps {\n    /** adapter name id without 'system.adapter.' */\n    adapterName: string;\n    /** Same information for every adapter */\n    context: AdaptersContext;\n    cached: AdapterCacheEntry;\n    commandRunning: boolean;\n}\n\nexport interface AdapterGenericState extends AdapterInstallDialogState {\n    autoUpgradeDialogOpen: boolean;\n    showUpdateDialog: boolean;\n    adapterDeletionDialog: boolean;\n    adapterInstallSpecificVersion: string;\n    showInstallVersion: boolean;\n    showSetRating: {\n        version: string;\n        rating: AdapterRatingInfo;\n    } | null;\n}\n\nexport interface ImageProps {\n    alt: string;\n    style: React.CSSProperties;\n    [other: string]: any;\n}\n\nexport default abstract class AdapterGeneric<\n    TProps extends AdapterGenericProps,\n    TState extends AdapterGenericState,\n> extends AdapterInstallDialog<TProps, TState> {\n    protected installedVersion: string = '';\n\n    protected abstract styles: Record<string, any>;\n\n    public constructor(props: TProps) {\n        super(props);\n\n        Object.assign(this.state, {\n            autoUpgradeDialogOpen: false,\n            showUpdateDialog: false,\n            adapterDeletionDialog: false,\n            adapterInstallSpecificVersion: '',\n            showInstallVersion: false,\n            showSetRating: null,\n        } as TState);\n    }\n\n    static renderImage(imageProps: ImageProps): JSX.Element {\n        const { style, alt, ...other } = imageProps;\n\n        const img = style.backgroundImage.substring(5, style.backgroundImage.length - 2);\n\n        return (\n            <img\n                {...other}\n                alt={alt}\n                src={img}\n                onError={e => {\n                    if (e.target) {\n                        (e.target as HTMLImageElement).onerror = null;\n                        (e.target as HTMLImageElement).src = './img/no-image.png';\n                    }\n                }}\n            />\n        );\n    }\n\n    renderAddInstanceButton(): JSX.Element {\n        const allowAdapterInstall = this.props.context.repository[this.props.adapterName]\n            ? this.props.context.repository[this.props.adapterName].allowAdapterInstall\n            : true;\n\n        return (\n            <IsVisible value={allowAdapterInstall}>\n                <Tooltip\n                    title={this.props.context.t('Add instance')}\n                    slotProps={{ popper: { sx: this.styles.tooltip } }}\n                >\n                    <IconButton\n                        size=\"small\"\n                        disabled={this.props.commandRunning}\n                        style={!this.props.cached.rightOs ? this.styles.hidden : undefined}\n                        onClick={\n                            this.props.cached.rightOs\n                                ? () => this.onAddInstance(this.props.adapterName, this.props.context)\n                                : undefined\n                        }\n                    >\n                        <AddIcon />\n                    </IconButton>\n                </Tooltip>\n            </IsVisible>\n        );\n    }\n\n    renderAutoUpgradeButton(): JSX.Element | null {\n        const adapterObj = this.props.context.hostAdapterWorker.getObject(this.props.adapterName);\n        if (!adapterObj) {\n            return <div style={{ width: 34, height: 34, display: 'inline-block' }} />;\n        }\n\n        // 'none' | 'patch' | 'minor' | 'major'\n        const autoUpgrade: ioBroker.AutoUpgradePolicy = adapterObj.common?.automaticUpgrade;\n\n        return (\n            <Tooltip\n                title={this.props.context.t('Automatic Upgrade Policy') + (autoUpgrade ? `: ${autoUpgrade}` : '')}\n                slotProps={{ popper: { sx: this.styles.tooltip } }}\n            >\n                <IconButton\n                    size=\"small\"\n                    onClick={() => this.setState({ autoUpgradeDialogOpen: true, showDialog: true })}\n                >\n                    {!autoUpgrade || autoUpgrade === 'none' ? <KeyboardArrowUp /> : ICONS[autoUpgrade]}\n                </IconButton>\n            </Tooltip>\n        );\n    }\n\n    renderReadmeButton(): JSX.Element {\n        const allowAdapterReadme = this.props.context.repository[this.props.adapterName]\n            ? this.props.context.repository[this.props.adapterName].allowAdapterReadme\n            : true;\n\n        return (\n            <IsVisible value={allowAdapterReadme}>\n                <Tooltip\n                    title={this.props.context.t('Readme')}\n                    slotProps={{ popper: { sx: this.styles.tooltip } }}\n                >\n                    <IconButton\n                        size=\"small\"\n                        onClick={() => this.openInfoDialog()}\n                    >\n                        <HelpIcon />\n                    </IconButton>\n                </Tooltip>\n            </IsVisible>\n        );\n    }\n\n    renderRating(): JSX.Element | null {\n        const allowAdapterRating = this.props.context.repository[this.props.adapterName]\n            ? this.props.context.repository[this.props.adapterName].allowAdapterRating\n            : true;\n\n        if (\n            this.props.context.isTileView &&\n            (this.props.context.sortPopularFirst || this.props.context.sortRecentlyUpdated)\n        ) {\n            return null;\n        }\n\n        const stat = this.props.context.repository[this.props.adapterName].stat;\n        if (!stat || allowAdapterRating === false) {\n            return null;\n        }\n\n        return (\n            <div\n                onClick={() =>\n                    this.setState({\n                        showSetRating: {\n                            version: this.installedVersion,\n                            rating: this.props.context.repository[this.props.adapterName].rating,\n                        },\n                        showDialog: true,\n                    })\n                }\n                style={{ ...this.styles.rating, ...this.styles.ratingSet }}\n                title={this.props.context.repository[this.props.adapterName].rating?.title}\n            >\n                <Rating\n                    name={this.props.adapterName}\n                    precision={0.5}\n                    size=\"small\"\n                    readOnly\n                    value={this.props.context.repository[this.props.adapterName].rating?.rating?.r || 0}\n                />\n            </div>\n        );\n    }\n\n    renderConnectionType(): JSX.Element {\n        const connectionType = this.props.context.repository[this.props.adapterName]?.connectionType;\n        return connectionType === 'cloud' ? (\n            <Tooltip\n                title={this.props.context.t('Adapter requires the specific cloud access for these devices/service')}\n                slotProps={{ popper: { sx: this.styles.tooltip } }}\n            >\n                <CloudIcon />\n            </Tooltip>\n        ) : connectionType === 'local' ? (\n            <Tooltip\n                title={this.props.context.t('Adapter does not use the cloud for these devices/service')}\n                slotProps={{ popper: { sx: this.styles.tooltip } }}\n            >\n                <CloudOffIcon />\n            </Tooltip>\n        ) : null;\n    }\n\n    renderDataSource(): JSX.Element | null {\n        const dataSource = this.props.context.repository[this.props.adapterName]?.dataSource;\n        return dataSource ? (\n            <div style={this.styles.marginLeft5}>\n                {dataSource === 'poll' ? (\n                    <Tooltip\n                        title={this.props.context.t('The device or service will be periodically asked')}\n                        slotProps={{ popper: { sx: this.styles.tooltip } }}\n                    >\n                        <ArrowUpwardIcon style={this.styles.classPoll} />\n                    </Tooltip>\n                ) : dataSource === 'push' ? (\n                    <Tooltip\n                        title={this.props.context.t('The device or service delivers the new state actively')}\n                        slotProps={{ popper: { sx: this.styles.tooltip } }}\n                    >\n                        <ArrowDownwardIcon style={this.styles.classPush} />\n                    </Tooltip>\n                ) : dataSource === 'assumption' ? (\n                    <Tooltip\n                        slotProps={{ popper: { sx: this.styles.tooltip } }}\n                        title={this.props.context.t(\n                            'Adapter cannot request the exactly device status and the status will be guessed on the last sent command',\n                        )}\n                    >\n                        <RemoveIcon style={this.styles.classAssumption} />\n                    </Tooltip>\n                ) : null}\n            </div>\n        ) : null;\n    }\n\n    renderLicenseInfo(): JSX.Element {\n        const adapter = this.props.context.repository[this.props.adapterName];\n        const link = extractUrlLink(adapter);\n\n        return adapter.licenseInformation?.type ? (\n            <Link\n                href={link}\n                target=\"_blank\"\n                rel=\"noopener\"\n                sx={(theme: IobTheme) => ({\n                    color: theme.palette.mode === 'dark' ? 'white' : 'black',\n                    '&:hover': { color: theme.palette.mode === 'dark' ? 'white' : 'black' },\n                })}\n            >\n                {adapter.licenseInformation?.type === 'paid' ? (\n                    <Tooltip\n                        title={this.props.context.t('The adapter requires a paid license.')}\n                        slotProps={{ popper: { sx: this.styles.tooltip } }}\n                    >\n                        <MonetizationOn />\n                    </Tooltip>\n                ) : adapter.licenseInformation?.type === 'commercial' ? (\n                    <Tooltip\n                        slotProps={{ popper: { sx: this.styles.tooltip } }}\n                        title={this.props.context.t('The adapter requires a paid license for commercial use.')}\n                    >\n                        <MonetizationOn opacity={0.5} />\n                    </Tooltip>\n                ) : adapter.licenseInformation?.type === 'limited' ? (\n                    <Tooltip\n                        slotProps={{ popper: { sx: this.styles.tooltip } }}\n                        title={this.props.context.t('The adapter has a limited functionality without a paid license.')}\n                    >\n                        <MonetizationOn opacity={0.5} />\n                    </Tooltip>\n                ) : null}\n            </Link>\n        ) : null;\n    }\n\n    renderSentryInfo(): JSX.Element | null {\n        const sentry = this.props.context.repository[this.props.adapterName]?.plugins?.sentry;\n\n        return sentry ? (\n            <div style={this.styles.marginLeft5}>\n                <Tooltip\n                    title=\"sentry\"\n                    slotProps={{ popper: { sx: this.styles.tooltip } }}\n                >\n                    <CardMedia\n                        style={this.styles.sentry}\n                        component=\"img\"\n                        image={sentryIcon}\n                    />\n                </Tooltip>\n            </div>\n        ) : null;\n    }\n\n    renderVersion(): JSX.Element {\n        const allowAdapterUpdate = this.props.context.repository[this.props.adapterName]\n            ? this.props.context.repository[this.props.adapterName].allowAdapterUpdate\n            : true;\n\n        return !this.props.commandRunning && this.props.cached.updateAvailable && allowAdapterUpdate !== false ? (\n            <Tooltip\n                title={this.props.context.t('Update')}\n                slotProps={{ popper: { sx: this.styles.tooltip } }}\n            >\n                <div\n                    onClick={() => this.setState({ showUpdateDialog: true, showDialog: true })}\n                    style={{\n                        ...this.styles.buttonUpdate,\n                        ...(this.props.cached.rightDependencies ? this.styles.updateAvailable : undefined),\n                    }}\n                >\n                    <IconButton\n                        style={this.styles.buttonUpdateIcon}\n                        size=\"small\"\n                    >\n                        <RefreshIcon />\n                    </IconButton>\n                    {this.props.context.repository[this.props.adapterName].version}\n                </div>\n            </Tooltip>\n        ) : (\n            <span style={this.props.cached.rightDependencies ? undefined : this.styles.wrongDependencies}>\n                {this.props.context.repository[this.props.adapterName].version}\n            </span>\n        );\n    }\n\n    renderInstalledVersion(isRow?: boolean): JSX.Element | null {\n        const installed = this.props.context.installed[this.props.adapterName];\n        const installedFrom = installed?.installedFrom;\n        const { adapterName } = this.props;\n\n        if (isRow) {\n            const enabledCount = installed?.enabled;\n            const installedCount = installed?.count;\n\n            return (\n                <Grid2\n                    container\n                    wrap=\"nowrap\"\n                    alignItems=\"center\"\n                    spacing={1}\n                >\n                    {this.installedVersion ? (\n                        <Grid2>\n                            {this.installedVersion +\n                                (installedCount\n                                    ? ` (${installedCount}${installedCount !== enabledCount ? '~' : ''})`\n                                    : '')}\n                        </Grid2>\n                    ) : null}\n                    {installedFrom && !installedFrom.startsWith(`iobroker.${adapterName}@`) && (\n                        <Grid2 container>\n                            <Tooltip\n                                title={this.props.context.t('Non-NPM-Version: ') + installedFrom}\n                                slotProps={{ popper: { sx: this.styles.tooltip } }}\n                            >\n                                <GitHubIcon\n                                    fontSize=\"small\"\n                                    style={this.styles.versionWarn}\n                                />\n                            </Tooltip>\n                        </Grid2>\n                    )}\n                </Grid2>\n            );\n        }\n\n        return this.installedVersion ? (\n            <Typography\n                component=\"span\"\n                style={this.styles.cardContentFlexBetween}\n            >\n                <div>{this.props.context.t('Installed version')}:</div>\n                <div style={this.styles.cardContentFlex}>\n                    {installedFrom && !installedFrom.startsWith(`iobroker.${adapterName}@`) && (\n                        <Tooltip\n                            title={this.props.context.t('Non-NPM-Version: ') + installedFrom}\n                            slotProps={{ popper: { sx: this.styles.tooltip } }}\n                        >\n                            <GitHubIcon\n                                fontSize=\"small\"\n                                style={this.styles.versionWarn}\n                            />\n                        </Tooltip>\n                    )}\n                    {this.installedVersion}\n                </div>\n            </Typography>\n        ) : null;\n    }\n\n    renderUploadButton(): JSX.Element | null {\n        return this.props.context.expertMode && this.installedVersion ? (\n            <Tooltip\n                title={this.props.context.t('Upload')}\n                slotProps={{ popper: { sx: this.styles.tooltip } }}\n            >\n                <IconButton\n                    size=\"small\"\n                    disabled={this.props.commandRunning}\n                    onClick={() => this.onUpload()}\n                >\n                    <PublishIcon />\n                </IconButton>\n            </Tooltip>\n        ) : null;\n    }\n\n    renderDeleteButton(): JSX.Element {\n        const allowAdapterDelete = this.props.context.repository[this.props.adapterName]\n            ? this.props.context.repository[this.props.adapterName].allowAdapterDelete\n            : true;\n\n        return (\n            <IsVisible value={!!this.installedVersion && allowAdapterDelete}>\n                <Tooltip\n                    title={this.props.context.t('Delete adapter')}\n                    slotProps={{ popper: { sx: this.styles.tooltip } }}\n                >\n                    <IconButton\n                        size=\"small\"\n                        disabled={this.props.commandRunning}\n                        onClick={() => this.setState({ adapterDeletionDialog: true, showDialog: true })}\n                    >\n                        <DeleteForeverIcon />\n                    </IconButton>\n                </Tooltip>\n            </IsVisible>\n        );\n    }\n\n    renderInstallSpecificVersionButton(): JSX.Element | null {\n        const allowAdapterUpdate = this.props.context.repository[this.props.adapterName]\n            ? this.props.context.repository[this.props.adapterName].allowAdapterUpdate\n            : true;\n\n        return (\n            this.props.context.expertMode &&\n            allowAdapterUpdate !== false &&\n            this.installedVersion && (\n                <Tooltip\n                    title={this.props.context.t('Install a specific version')}\n                    slotProps={{ popper: { sx: this.styles.tooltip } }}\n                >\n                    <IconButton\n                        disabled={this.props.commandRunning}\n                        size=\"small\"\n                        onClick={() => this.setState({ showInstallVersion: true, showDialog: true })}\n                    >\n                        <AddToPhotosIcon />\n                    </IconButton>\n                </Tooltip>\n            )\n        );\n    }\n\n    renderRebuildButton(): JSX.Element | null {\n        if (!this.props.context.expertMode || !this.installedVersion) {\n            return null;\n        }\n        return (\n            <Tooltip title={this.props.context.t('Rebuild')}>\n                <IconButton\n                    size=\"small\"\n                    disabled={this.props.commandRunning}\n                    onClick={() => this.rebuild()}\n                >\n                    <BuildIcon />\n                </IconButton>\n            </Tooltip>\n        );\n    }\n\n    renderAutoUpdateDialog(): JSX.Element | null {\n        if (!this.state.autoUpgradeDialogOpen) {\n            return null;\n        }\n        return (\n            <AutoUpgradeConfigDialog\n                onClose={() => this.setState({ autoUpgradeDialogOpen: false, showDialog: false })}\n                adapter={this.props.adapterName}\n                hostId={this.props.context.adminHost}\n                socket={this.props.context.socket}\n            />\n        );\n    }\n\n    renderUpdateAdapterDialog(): JSX.Element | null {\n        if (!this.state.showUpdateDialog) {\n            return null;\n        }\n\n        this.installedVersion = this.props.context.installed[this.props.adapterName]?.version;\n\n        return (\n            <AdapterUpdateDialog\n                adapter={this.props.adapterName}\n                adapterObject={this.props.context.repository[this.props.adapterName]}\n                t={this.props.context.t}\n                dependencies={AdapterInstallDialog.getDependencies(this.props.adapterName, this.props.context)}\n                rightDependencies={this.props.context.rightDependenciesFunc(this.props.adapterName)}\n                news={this.getNews()}\n                toggleTranslation={this.props.context.toggleTranslation}\n                noTranslation={this.props.context.noTranslation}\n                installedVersion={this.installedVersion}\n                onUpdate={version =>\n                    this.setState({ showUpdateDialog: false, showDialog: false }, () => this.update(version))\n                }\n                onIgnore={ignoreVersion =>\n                    this.setState({ showUpdateDialog: false, showDialog: false }, () =>\n                        this.props.context.socket\n                            .getObject(`system.adapter.${this.props.adapterName}`)\n                            .then(obj => {\n                                if (obj?.common) {\n                                    (obj.common as any).ignoreVersion = ignoreVersion;\n                                    this.props.context.socket\n                                        .setObject(obj._id, obj)\n                                        .catch(error => window.alert(`Cannot write object: ${error}`));\n                                } else {\n                                    window.alert(`Adapter \"${this.props.adapterName}\" does not exist!`);\n                                }\n                            })\n                            .then(() => this.props.context.removeUpdateAvailable(this.props.adapterName)),\n                    )\n                }\n                onClose={() => this.setState({ showUpdateDialog: false, showDialog: false })}\n                instances={this.props.context.compactInstances}\n                theme={this.props.context.theme}\n            />\n        );\n    }\n\n    static formatNews(news: string): JSX.Element[] {\n        const lines = (news || '')\n            .toString()\n            .split('\\n')\n            .map(line =>\n                line.trim().replace(/^\\*+/, '').replace(/^-/, '').replace(/\\*+$/, '').replace(/\\r/g, '').trim(),\n            )\n            .filter(line => line);\n\n        return lines.map((line, index) => (\n            <div\n                style={{}}\n                key={index}\n            >\n                <span>- </span>\n                {line}\n            </div>\n        ));\n    }\n\n    renderAdapterInstallVersion(): JSX.Element | null {\n        if (!this.state.showInstallVersion) {\n            return null;\n        }\n\n        return (\n            <CustomModal\n                title={this.props.context.t('Please select specific version of %s', this.props.adapterName)}\n                applyButton={false}\n                onClose={() =>\n                    this.setState({\n                        showInstallVersion: false,\n                        adapterInstallSpecificVersion: '',\n                        showDialog: false,\n                    })\n                }\n                theme={this.props.context.theme}\n                toggleTranslation={this.props.context.toggleTranslation}\n                noTranslation={this.props.context.noTranslation}\n            >\n                <div style={{ height: '100%', overflowY: 'hidden' }}>\n                    <div style={this.styles.containerSpecificVersion}>\n                        <div style={{ display: 'flex', alignItems: 'center', gap: 8 }}>\n                            <TextField\n                                variant=\"standard\"\n                                style={{ flexGrow: 1 }}\n                                label={this.props.context.t('Enter version manually')}\n                                value={this.state.adapterInstallSpecificVersion}\n                                onChange={event => this.setState({ adapterInstallSpecificVersion: event.target.value })}\n                                slotProps={{\n                                    input: {\n                                        endAdornment: this.state.adapterInstallSpecificVersion ? (\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                    size=\"small\"\n                                                    onClick={() => this.setState({ adapterInstallSpecificVersion: '' })}\n                                                >\n                                                    <CloseIcon />\n                                                </IconButton>\n                                            </InputAdornment>\n                                        ) : null,\n                                    },\n                                }}\n                            />\n                            <Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={!this.state.adapterInstallSpecificVersion}\n                                onClick={() => {\n                                    if (this.state.adapterInstallSpecificVersion) {\n                                        void this.update(this.state.adapterInstallSpecificVersion);\n                                        this.setState({\n                                            showInstallVersion: false,\n                                            adapterInstallSpecificVersion: '',\n                                            showDialog: false,\n                                        });\n                                    }\n                                }}\n                            >\n                                {this.props.context.t('Install')}\n                            </Button>\n                        </div>\n                        <Tooltip\n                            title={this.props.context.t('npmjs.com')}\n                            slotProps={{ popper: { sx: this.styles.tooltip } }}\n                        >\n                            <IconButton\n                                size=\"small\"\n                                onClick={() => {\n                                    window\n                                        .open(\n                                            `https://www.npmjs.com/package/iobroker.${this.props.adapterName}?activeTab=versions`,\n                                            this.props.adapterName,\n                                        )\n                                        .focus();\n                                }}\n                            >\n                                <LinkIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </div>\n                    <Box\n                        component=\"div\"\n                        sx={this.styles.header}\n                    >\n                        {this.props.context.t('Or select from the list')}\n                    </Box>\n                    <div style={{ ...this.styles.containerVersion, height: 'calc(100% - 122px)', overflowY: 'auto' }}>\n                        {this.getNews(true).map(({ version, news }) => (\n                            <Card\n                                variant=\"outlined\"\n                                key={version}\n                                sx={this.styles.currentVersion}\n                                onClick={() => {\n                                    void this.update(version);\n                                    this.setState({ showInstallVersion: false, showDialog: false });\n                                }}\n                            >\n                                <CardContent>\n                                    <Typography\n                                        sx={Utils.getStyle(\n                                            this.props.context.theme,\n                                            this.installedVersion === version && this.styles.currentVersionText,\n                                            { fontSize: 16, fontWeight: 'bold' },\n                                        )}\n                                        color=\"text.secondary\"\n                                        gutterBottom\n                                    >\n                                        {version}\n                                        {this.installedVersion === version ? (\n                                            <Box\n                                                component=\"span\"\n                                                sx={this.styles.currentVersionText}\n                                            >{`(${this.props.context.t('current')})`}</Box>\n                                        ) : (\n                                            ''\n                                        )}\n                                    </Typography>\n                                    <Typography\n                                        variant=\"body2\"\n                                        style={{ opacity: 0.7 }}\n                                    >\n                                        {AdapterGeneric.formatNews(news)}\n                                    </Typography>\n                                </CardContent>\n                            </Card>\n                        ))}\n                    </div>\n                </div>\n            </CustomModal>\n        );\n    }\n\n    renderSetRatingDialog(): JSX.Element | null {\n        if (!this.state.showSetRating) {\n            return null;\n        }\n        return (\n            <RatingDialog\n                t={this.props.context.t}\n                lang={this.props.context.lang}\n                version={this.state.showSetRating.version}\n                adapter={this.props.adapterName}\n                currentRating={this.state.showSetRating.rating}\n                onClose={(update: RatingDialogRepository) => {\n                    if (update) {\n                        this.props.context.updateRating(this.props.adapterName, update);\n                    }\n                    this.setState({ showSetRating: null, showDialog: false });\n                }}\n                uuid={this.props.context.uuid}\n            />\n        );\n    }\n\n    renderAdapterDeletionDialog(): JSX.Element | null {\n        if (!this.state.adapterDeletionDialog) {\n            return null;\n        }\n        return (\n            <AdapterDeletionDialog\n                adapter={this.props.adapterName}\n                socket={this.props.context.socket}\n                t={this.props.context.t}\n                onClick={deleteCustom => this.delete(deleteCustom)}\n                onClose={() => this.setState({ adapterDeletionDialog: false, showDialog: false })}\n            />\n        );\n    }\n\n    /**\n     * Open adapter readme or docs\n     */\n    openInfoDialog(): void {\n        const adapter = this.props.context.repository[this.props.adapterName];\n        const lang = adapter.docs?.[this.props.context.lang] ? this.props.context.lang : 'en';\n\n        window.open(AdminUtils.getDocsLinkForAdapter({ lang, adapterName: this.props.adapterName }), 'help');\n    }\n\n    getNews(all = false): { version: string; news: string }[] {\n        const adapter = this.props.context.repository[this.props.adapterName];\n        const installed = this.props.context.installed[this.props.adapterName];\n        const news: { version: string; news: string }[] = [];\n\n        if (installed && adapter?.news) {\n            Object.keys(adapter.news).forEach(version => {\n                try {\n                    if (semver.gt(version, installed.version) || all) {\n                        let text: string;\n                        if (typeof adapter.news[version] === 'object') {\n                            text = this.props.context.noTranslation\n                                ? adapter.news[version].en\n                                : adapter.news[version][this.props.context.lang] || adapter.news[version].en;\n                        } else {\n                            text = adapter.news[version] as any as string;\n                        }\n\n                        news.push({\n                            version,\n                            news: text,\n                        });\n                    }\n                } catch {\n                    // ignore it\n                    console.warn(\n                        `[ADAPTERS] Cannot compare \"${version}\" and \"${installed.version}\" (${this.props.adapterName})`,\n                    );\n                }\n            });\n        }\n\n        return news;\n    }\n\n    onUpload(): void {\n        const adapter = this.props.context.repository[this.props.adapterName];\n        const url = extractUrlLink(adapter);\n        const licenseType = adapter.licenseInformation?.license || adapter.license;\n\n        if (licenseType !== 'MIT') {\n            this.setState({\n                showLicenseDialog: {\n                    url,\n                    upload: true,\n                    adapterName: this.props.adapterName,\n                    licenseType,\n                },\n                showDialog: true,\n            });\n        } else {\n            AdapterInstallDialog.upload(this.props.adapterName, this.props.context);\n        }\n    }\n\n    delete(deleteCustom?: boolean): void {\n        this.props.context.executeCommand(\n            `del ${this.props.adapterName}${deleteCustom ? ' --custom' : ''}${this.props.context.expertMode ? ' --debug' : ''}`,\n        );\n    }\n\n    async update(version: string): Promise<void> {\n        if (\n            this.props.adapterName === 'admin' &&\n            this.props.context.adminHost === this.props.context.currentHost &&\n            (await this.props.context.socket.checkFeatureSupported('ADAPTER_WEBSERVER_UPGRADE'))\n        ) {\n            this.props.context.setAdminUpgradeTo(version);\n            return;\n        }\n\n        this.props.context.executeCommand(\n            `upgrade ${this.props.adapterName}@${version}${this.props.context.expertMode ? ' --debug' : ''}`,\n        );\n    }\n\n    rebuild(): void {\n        this.props.context.executeCommand(\n            `rebuild ${this.props.adapterName}${this.props.context.expertMode ? ' --debug' : ''}`,\n        );\n    }\n\n    renderDialogs(): JSX.Element | null {\n        if (!this.state.showDialog) {\n            return null;\n        }\n\n        return (\n            <>\n                {this.renderAddInstanceDialog(this.props.context)}\n                {this.renderLicenseDialog(this.props.context)}\n                {this.renderUpdateAdapterDialog()}\n                {this.renderAdapterInstallVersion()}\n                {this.renderSetRatingDialog()}\n                {this.renderAdapterDeletionDialog()}\n                {this.renderAutoUpdateDialog()}\n            </>\n        );\n    }\n}\n","import React, { type JSX } from 'react';\n\nimport { Box, Card, CardContent, CardMedia, Fab, Tooltip, Typography } from '@mui/material';\n\nimport { MoreVert as MoreVertIcon } from '@mui/icons-material';\nimport { amber } from '@mui/material/colors';\n\nimport { type IobTheme, Utils } from '@iobroker/adapter-react-v5';\n\nimport IsVisible from '../IsVisible';\nimport AdapterGeneric, {\n    type AdapterGenericProps,\n    type AdapterGenericState,\n    type ImageProps,\n    genericStyles,\n} from './AdapterGeneric';\n\nconst boxShadow = '0 2px 2px 0 rgba(0, 0, 0, .14),0 3px 1px -2px rgba(0, 0, 0, .12),0 1px 5px 0 rgba(0, 0, 0, .2)';\nconst boxShadowHover = '0 8px 17px 0 rgba(0, 0, 0, .2),0 6px 20px 0 rgba(0, 0, 0, .19)';\n\nconst styles: Record<string, any> = {\n    ...genericStyles,\n    type: {\n        color: 'tile',\n    },\n    root: (theme: IobTheme) => ({\n        position: 'relative',\n        m: '10px',\n        width: 300,\n        minHeight: 200,\n        background: theme.palette.background.default,\n        boxShadow,\n        display: 'flex',\n        flexDirection: 'column',\n        transition: 'box-shadow 0.5s',\n        '&:hover': {\n            boxShadow: boxShadowHover,\n        },\n    }),\n    imageBlock: (theme: IobTheme) => ({\n        background: theme.palette.mode === 'dark' ? '#848484' : '#c0c0c0',\n        minHeight: 60,\n        display: 'flex',\n        padding: '0 10px 0 10px',\n        position: 'relative',\n        justifyContent: 'space-between',\n        color: '#000',\n    }),\n    img: {\n        width: 45,\n        height: 45,\n        margin: 'auto 0',\n        position: 'relative',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            zIndex: 2,\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            background: 'url(\"img/no-image.png\") 100% 100% no-repeat',\n            backgroundSize: 'cover',\n            backgroundColor: '#fff',\n        },\n    },\n    installed: {\n        background: '#77c7ff8c',\n    },\n    update: {\n        background: '#10ff006b',\n    },\n    fab: {\n        position: 'absolute',\n        bottom: -20,\n        width: 40,\n        height: 40,\n        right: 20,\n    },\n    greenText: (theme: IobTheme) => ({\n        color: theme.palette.success.dark,\n    }),\n    collapse: {\n        height: '100%',\n        backgroundColor: 'silver',\n        position: 'absolute',\n        width: '100%',\n        zIndex: 3,\n        marginTop: 'auto',\n        bottom: 0,\n        // transition: 'height 0.3s',\n        justifyContent: 'space-between',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    close: {\n        width: 20,\n        height: 20,\n        opacity: 0.9,\n        cursor: 'pointer',\n        position: 'relative',\n        marginLeft: 'auto',\n        mb: '10px',\n        transition: 'all 0.6s ease',\n        '&:hover': {\n            transform: 'rotate(90deg)',\n        },\n        '&:before': {\n            position: 'absolute',\n            left: 9,\n            content: '\"\"',\n            height: 20,\n            width: 3,\n            backgroundColor: 'rgba(0, 0, 0, 0.54)',\n            transform: 'rotate(45deg)',\n        },\n        '&:after': {\n            position: 'absolute',\n            left: 9,\n            content: '\"\"',\n            height: 20,\n            width: 3,\n            backgroundColor: 'rgba(0, 0, 0, 0.54)',\n            transform: 'rotate(-45deg)',\n        },\n    },\n    footerBlock: (theme: IobTheme) => ({\n        background: theme.palette.background.default,\n        p: '10px',\n        display: 'flex',\n        justifyContent: 'space-between',\n    }),\n    versionDate: {\n        alignSelf: 'center',\n    },\n    adapter: (theme: IobTheme) => ({\n        width: '100%',\n        fontWeight: 'bold',\n        fontSize: 16,\n        verticalAlign: 'middle',\n        pl: 1,\n        pt: 2,\n        color: theme.palette.mode === 'dark' ? '#333' : '#333',\n    }),\n    adapterWithAgo: {\n        width: 'calc(100% - 145px)',\n    },\n    description: (theme: IobTheme) => ({\n        color: theme.palette.mode === 'dark' ? '#222' : 'inherit',\n    }),\n\n    cardContent: {\n        overflow: 'auto',\n    },\n    cardContentDiv: {\n        position: 'sticky',\n        right: 0,\n        top: 0,\n        background: 'silver',\n    },\n    cardContentFlex: {\n        display: 'flex',\n    },\n    cardContentFlexBetween: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    cardContent2: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n    },\n    cardMargin10: {\n        marginTop: 10,\n    },\n    availableVersion: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    curdContentFlexCenter: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n\n    versionWarn: {\n        color: amber[500],\n        marginRight: 5,\n    },\n    rating: {\n        marginTop: 20,\n    },\n};\n\ninterface AdapterTileState extends AdapterGenericState {\n    openCollapse: boolean;\n}\n\nclass AdapterTile extends AdapterGeneric<AdapterGenericProps, AdapterTileState> {\n    protected styles: Record<string, any> = styles;\n\n    constructor(props: AdapterGenericProps) {\n        super(props);\n\n        Object.assign(this.state, {\n            openCollapse: false,\n        });\n    }\n\n    renderInfoCard(): JSX.Element {\n        return (\n            <div style={this.styles.collapse}>\n                <CardContent style={this.styles.cardContent}>\n                    <div style={this.styles.cardContentDiv}>\n                        <Box\n                            component=\"div\"\n                            sx={this.styles.close}\n                            onClick={() => this.setState({ openCollapse: !this.state.openCollapse })}\n                        />\n                    </div>\n                    <Typography\n                        gutterBottom\n                        component=\"span\"\n                        variant=\"body2\"\n                        sx={this.styles.description}\n                    >\n                        {this.props.cached.desc}\n                    </Typography>\n                </CardContent>\n                <Box\n                    component=\"div\"\n                    sx={this.styles.footerBlock}\n                >\n                    {this.renderAddInstanceButton()}\n                    <div style={this.styles.cardContentFlex}>\n                        {this.renderAutoUpgradeButton()}\n                        {this.renderReadmeButton()}\n                        {this.renderUploadButton()}\n                        {this.renderDeleteButton()}\n                        {this.renderInstallSpecificVersionButton()}\n                    </div>\n                </Box>\n            </div>\n        );\n    }\n\n    renderCardMedia(): JSX.Element {\n        const available = this.props.context.repository[this.props.adapterName];\n        const availableVersion = available?.version;\n\n        return (\n            <Box\n                component=\"div\"\n                sx={Utils.getStyle(\n                    this.props.context.theme,\n                    this.styles.imageBlock,\n                    this.installedVersion && this.styles.installed,\n                    this.installedVersion &&\n                        availableVersion &&\n                        this.installedVersion !== availableVersion &&\n                        this.props.cached.updateAvailable &&\n                        this.styles.update,\n                )}\n            >\n                <CardMedia\n                    sx={this.styles.img}\n                    component={(props: ImageProps) => AdapterGeneric.renderImage(props)}\n                    src={this.props.cached.image || 'img/no-image.png'}\n                    image={this.props.cached.image || 'img/no-image.png'}\n                />\n                <Box\n                    component=\"div\"\n                    sx={Utils.getStyle(\n                        this.props.context.theme,\n                        this.styles.adapter,\n                        (available.stat || this.props.context.sortRecentlyUpdated) && this.styles.adapterWithAgo,\n                    )}\n                >\n                    {this.props.adapterName}\n                </Box>\n                {this.props.context.sortPopularFirst ? (\n                    <div style={this.styles.versionDate}>{available.stat}</div>\n                ) : null}\n                {this.props.context.sortRecentlyUpdated ? (\n                    <div style={this.styles.versionDate}>{this.props.cached.daysAgoText}</div>\n                ) : null}\n                {!this.props.context.sortPopularFirst && !this.props.context.sortRecentlyUpdated\n                    ? this.renderRating()\n                    : null}\n                {!this.state.openCollapse ? (\n                    <Tooltip\n                        title={this.props.context.t('Info')}\n                        slotProps={{ popper: { sx: { pointerEvents: 'none' } } }}\n                    >\n                        <Fab\n                            onClick={() => this.setState({ openCollapse: !this.state.openCollapse })}\n                            style={this.styles.fab}\n                            color=\"primary\"\n                            aria-label=\"add\"\n                        >\n                            <MoreVertIcon />\n                        </Fab>\n                    </Tooltip>\n                ) : null}\n            </Box>\n        );\n    }\n\n    renderCardContent(): JSX.Element {\n        const allowAdapterUpdate = this.props.context.repository[this.props.adapterName]\n            ? this.props.context.repository[this.props.adapterName].allowAdapterUpdate\n            : true;\n        const installed = this.props.context.installed[this.props.adapterName];\n\n        return (\n            <CardContent style={this.styles.cardContent2}>\n                <Typography\n                    gutterBottom\n                    variant=\"h5\"\n                    component=\"h5\"\n                >\n                    {this.props.cached.title}\n                </Typography>\n                <div style={this.styles.cardContentFlex}>\n                    {this.renderConnectionType()}\n                    {this.renderDataSource()}\n                    <div>{this.renderLicenseInfo()}</div>\n                    {this.renderSentryInfo()}\n                </div>\n                <div style={this.styles.cardMargin10}>\n                    {installed?.count ? (\n                        <Typography\n                            component=\"span\"\n                            style={this.styles.cardContentFlexBetween}\n                        >\n                            <div>{this.props.context.t('Installed instances')}:</div>\n                            <div>{installed.count}</div>\n                        </Typography>\n                    ) : null}\n                    <IsVisible value={allowAdapterUpdate}>\n                        <Typography\n                            component=\"span\"\n                            style={this.styles.availableVersion}\n                        >\n                            <div>{this.props.context.t('Available version:')}</div>\n                            <Box\n                                component=\"div\"\n                                sx={Utils.getStyle(\n                                    this.props.context.theme,\n                                    this.props.cached.updateAvailable && this.styles.greenText,\n                                    this.styles.curdContentFlexCenter,\n                                )}\n                            >\n                                {this.renderVersion()}\n                            </Box>\n                        </Typography>\n                    </IsVisible>\n                    {this.renderInstalledVersion()}\n                </div>\n            </CardContent>\n        );\n    }\n\n    render(): JSX.Element {\n        this.installedVersion = this.props.context.installed[this.props.adapterName]?.version;\n\n        return (\n            <Card sx={this.styles.root}>\n                {this.state.openCollapse ? this.renderInfoCard() : null}\n                {this.renderCardMedia()}\n                {this.renderCardContent()}\n                {this.renderDialogs()}\n            </Card>\n        );\n    }\n}\n\nexport default AdapterTile;\n","import React, { type JSX } from 'react';\n\nimport { Avatar, Grid2, TableCell, TableRow, Tooltip } from '@mui/material';\n\nimport AdapterGeneric, {\n    type AdapterGenericProps,\n    type AdapterGenericState,\n    genericStyles,\n} from '@/components/Adapters/AdapterGeneric';\n\nconst styles: Record<string, any> = {\n    ...genericStyles,\n    type: {\n        color: 'line',\n    },\n    smallAvatar: {\n        width: 32,\n        height: 32,\n        marginLeft: 4,\n    },\n    paddingNone: {\n        padding: '0 !important',\n    },\n    name: {\n        flexWrap: 'nowrap',\n        width: 300,\n        marginTop: 0,\n    },\n    flex: {\n        display: 'flex',\n    },\n    nameCell: {\n        paddingTop: '0 !important',\n        paddingBottom: '0 !important',\n    },\n};\n\nclass AdapterRow extends AdapterGeneric<AdapterGenericProps, AdapterGenericState> {\n    protected styles: Record<string, any> = styles;\n\n    render(): JSX.Element {\n        const adapter = this.props.context.repository[this.props.adapterName];\n\n        const allowAdapterRating = adapter ? adapter.allowAdapterRating : true;\n\n        this.installedVersion = this.props.context.installed[this.props.adapterName]?.version;\n\n        return (\n            <TableRow hover>\n                <TableCell />\n                <TableCell>\n                    <Grid2\n                        container\n                        spacing={1}\n                        alignItems=\"center\"\n                        style={this.styles.name}\n                    >\n                        <Tooltip\n                            title={this.props.adapterName}\n                            slotProps={{ popper: { sx: this.styles.tooltip } }}\n                        >\n                            <Grid2 style={this.styles.paddingNone}>\n                                <Avatar\n                                    variant=\"square\"\n                                    alt={this.props.cached.title}\n                                    src={this.props.cached.image}\n                                    style={this.styles.smallAvatar}\n                                />\n                            </Grid2>\n                        </Tooltip>\n                        {allowAdapterRating !== false ? (\n                            <Grid2 style={this.styles.nameCell}>\n                                <div>{this.props.cached.title}</div>\n                                {this.renderRating()}\n                            </Grid2>\n                        ) : (\n                            <Grid2>{this.props.cached.title}</Grid2>\n                        )}\n                    </Grid2>\n                </TableCell>\n                {!this.props.context.descHidden && (\n                    <TableCell\n                        title={this.props.cached.desc}\n                        style={{ width: 20, wordWrap: 'break-word' }}\n                    >\n                        {this.props.cached.desc}\n                    </TableCell>\n                )}\n                <TableCell>\n                    <div style={this.styles.flex}>\n                        {this.renderConnectionType() || <div style={{ marginLeft: 5, width: 24, height: 24 }} />}\n                        {this.renderDataSource() || <div style={{ width: 24, height: 24 }} />}\n                        {this.renderSentryInfo() || <div style={{ width: 24, height: 24 }} />}\n                        {this.renderLicenseInfo()}\n                    </div>\n                </TableCell>\n                <TableCell>{this.renderInstalledVersion(true)}</TableCell>\n                <TableCell>\n                    <Grid2\n                        container\n                        alignItems=\"center\"\n                    >\n                        {this.renderVersion()}\n                    </Grid2>\n                </TableCell>\n                <TableCell style={{ fontSize: 'smaller' }}>\n                    {adapter?.licenseInformation?.license || adapter?.license}\n                </TableCell>\n                <TableCell>\n                    {this.renderAddInstanceButton()}\n                    {this.renderAutoUpgradeButton()}\n                    {this.renderReadmeButton()}\n                    {this.renderUploadButton()}\n                    {this.renderDeleteButton()}\n                    {this.renderInstallSpecificVersionButton()}\n                    {this.renderRebuildButton()}\n                </TableCell>\n                {this.renderDialogs()}\n            </TableRow>\n        );\n    }\n}\n\nexport default AdapterRow;\n","import React, { Component, Fragment, type JSX } from 'react';\n\nimport {\n    Box,\n    LinearProgress,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Typography,\n} from '@mui/material';\n\nimport { TabContent } from '@iobroker/adapter-react-v5';\n\nimport type { AdaptersContext } from '@/components/Adapters/AdapterInstallDialog';\nimport AdapterCategoryRow from '@/components/Adapters/AdapterCategoryRow';\nimport AdapterTile from '@/components/Adapters/AdapterTile';\nimport AdapterRow from '@/components/Adapters/AdapterRow';\nimport type { AdapterCacheEntry } from '@/components/Adapters/AdapterGeneric';\nimport { InfoBox } from '@foxriver76/iob-component-lib';\n\nconst BUTTONS_WIDTH = 34 * 7 + 8;\nexport const WIDTHS: Record<string, number> = {\n    emptyBlock: 50,\n    name: 300,\n    connectionType: 120,\n    installed: 120,\n    available: 120,\n    update: 40,\n    license: 80,\n    install: BUTTONS_WIDTH,\n};\n\nexport const SUM = Object.keys(WIDTHS).reduce((s, i) => s + WIDTHS[i], 0);\n\nconst styles: Record<string, any> = {\n    container: {\n        height: '100%',\n        width: '100%',\n    },\n    containerNotFullHeight: {\n        height: 'calc(100% - 50px)',\n    },\n    containerFullHeight: {\n        height: '100%',\n    },\n    table: {\n        width: '100%',\n        tableLayout: 'fixed',\n        minWidth: 960,\n        '& td': {\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            pt: '2px',\n            pb: '2px',\n            pr: '4px',\n            pl: '4px',\n        },\n        '& th': {\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            pt: '2px',\n            pb: '2px',\n            pr: '4px',\n            pl: '4px',\n        },\n    },\n    name: {\n        flexWrap: 'nowrap',\n        width: WIDTHS.name,\n    },\n    emptyBlock: {\n        flexWrap: 'nowrap',\n        width: WIDTHS.emptyBlock,\n    },\n    description: {\n        width: `calc(100% - ${SUM + 2}px)`,\n    },\n    connectionType: {\n        width: WIDTHS.connectionType,\n    },\n    installed: {\n        width: WIDTHS.installed,\n    },\n    available: {\n        width: WIDTHS.available,\n        paddingRight: 6,\n    },\n    update: {\n        width: WIDTHS.update,\n        padding: 0,\n    },\n    license: {\n        width: WIDTHS.license,\n    },\n    install: {\n        width: WIDTHS.install,\n    },\n    viewModeDiv: {\n        display: 'flex',\n        flexFlow: 'wrap',\n        overflow: 'auto',\n        justifyContent: 'center',\n    },\n};\n\ninterface AdaptersListProps {\n    stableRepo: boolean;\n    repoName: string;\n    context: AdaptersContext;\n    systemConfig: ioBroker.SystemConfigObject;\n    tableViewMode: boolean;\n    listOfVisibleAdapter: string[] | null;\n    categoriesExpanded: Record<string, boolean>;\n    oneListView: boolean;\n    cachedAdapters: { [adapterName: string]: AdapterCacheEntry } | null;\n    categories: {\n        name: string;\n        translation: string;\n        count: number;\n        installed: number;\n        adapters: string[];\n    }[];\n    toggleCategory: (category: string) => void;\n    clearAllFilters: () => void;\n    update: boolean;\n    descWidth: number;\n    sortByName: boolean;\n    sortPopularFirst: boolean;\n    sortRecentlyUpdated: boolean;\n    commandRunning: boolean;\n}\n\ninterface AdaptersListState {\n    descWidth: number;\n    repoName: string;\n    systemConfig: boolean;\n    tableViewMode: boolean;\n    oneListView: boolean;\n    categoriesExpanded: string;\n    cachedAdapters: number;\n    listOfVisibleAdapter: string;\n    update: boolean;\n    sortByName: boolean;\n    sortPopularFirst: boolean;\n    sortRecentlyUpdated: boolean;\n    renderCounter: number;\n    expertMode: boolean;\n    commandRunning: boolean;\n}\n\nclass AdaptersList extends Component<AdaptersListProps, AdaptersListState> {\n    private lastRenderCounter: number = -1;\n\n    constructor(props: AdaptersListProps) {\n        super(props);\n\n        this.state = {\n            descWidth: props.descWidth,\n            repoName: props.repoName,\n            systemConfig: !!props.systemConfig,\n            tableViewMode: props.tableViewMode,\n            oneListView: props.oneListView,\n            categoriesExpanded: JSON.stringify(props.categoriesExpanded),\n            cachedAdapters: props.cachedAdapters ? Object.keys(props.cachedAdapters).length : 0,\n            update: props.update,\n            sortByName: props.sortByName,\n            sortPopularFirst: props.sortPopularFirst,\n            sortRecentlyUpdated: props.sortRecentlyUpdated,\n            renderCounter: 0,\n            listOfVisibleAdapter: JSON.stringify(props.listOfVisibleAdapter),\n            expertMode: props.context.expertMode,\n            commandRunning: props.commandRunning,\n        };\n    }\n\n    getRow(adapterName: string, context: AdaptersContext): JSX.Element | null {\n        const cached = this.props.cachedAdapters[adapterName];\n        if (cached) {\n            return (\n                <AdapterRow\n                    context={context}\n                    key={`adapter-${adapterName}`}\n                    adapterName={adapterName}\n                    cached={cached}\n                    commandRunning={this.state.commandRunning}\n                />\n            );\n        }\n        return null;\n    }\n\n    getRows(context: AdaptersContext): JSX.Element | JSX.Element[] | null {\n        if (!this.props.listOfVisibleAdapter) {\n            return (\n                <TableRow>\n                    <TableCell colSpan={8}>\n                        <LinearProgress />\n                    </TableCell>\n                </TableRow>\n            );\n        }\n\n        let count = 0;\n\n        let rows: JSX.Element[] = [];\n\n        if (this.props.oneListView) {\n            for (let i = 0; i < this.props.listOfVisibleAdapter.length; i++) {\n                const adapterName = this.props.listOfVisibleAdapter[i];\n\n                if (rows.length > 50 && !this.props.context.installed[adapterName]?.version) {\n                    continue;\n                }\n                rows.push(this.getRow(adapterName, context));\n            }\n            count = rows.length;\n\n            if (count && this.props.listOfVisibleAdapter.length > rows.length) {\n                const rest = this.props.listOfVisibleAdapter.length - rows.length;\n                const text =\n                    rest === 1\n                        ? this.props.context.t('Filter adapters to see others. There is %s more', 1)\n                        : this.props.context.t('Filter adapters to see others. There are %s more', rest);\n\n                rows.push(\n                    <TableRow key=\"more\">\n                        <TableCell\n                            colSpan={8}\n                            style={{ fontSize: 20, padding: 20, textAlign: 'center' }}\n                        >\n                            {text}\n                        </TableCell>\n                    </TableRow>,\n                );\n            }\n        } else {\n            rows = this.props.categories.map(category => {\n                const showCategory = category.adapters.find(adapterName =>\n                    this.props.listOfVisibleAdapter.includes(adapterName),\n                );\n                if (!showCategory) {\n                    return null;\n                }\n                const categoryName = category.name;\n                const expanded = this.props.categoriesExpanded[categoryName];\n                count++;\n\n                return (\n                    <Fragment key={`category-${categoryName} ${category.adapters.length}`}>\n                        <AdapterCategoryRow\n                            key={`category-${categoryName}${1}`}\n                            categoryName={categoryName}\n                            count={category.count}\n                            expanded={expanded}\n                            installedCount={category.installed}\n                            name={category.translation}\n                            descHidden={context.descHidden}\n                            onToggle={() => this.props.toggleCategory(categoryName)}\n                            t={this.props.context.t}\n                        />\n\n                        {expanded &&\n                            category.adapters.map(adapterName => {\n                                const item = this.getRow(adapterName, context);\n                                if (item) {\n                                    count++;\n                                }\n                                return item;\n                            })}\n                    </Fragment>\n                );\n            });\n        }\n\n        if (!count) {\n            return !this.props.update ? (\n                <tr>\n                    <td\n                        colSpan={4}\n                        style={{\n                            padding: 16,\n                            fontSize: 18,\n                            cursor: 'pointer',\n                        }}\n                        title={this.props.context.t('Click to clear all filters')}\n                        onClick={() => this.props.clearAllFilters()}\n                    >\n                        {this.props.context.t('all items are filtered out')}\n                    </td>\n                </tr>\n            ) : null;\n        }\n\n        return rows;\n    }\n\n    getTiles(context: AdaptersContext): JSX.Element | JSX.Element[] {\n        if (!this.props.listOfVisibleAdapter) {\n            return <LinearProgress />;\n        }\n\n        if (!this.props.listOfVisibleAdapter.length) {\n            return !this.props.update ? (\n                <div\n                    style={{\n                        margin: 20,\n                        fontSize: 26,\n                    }}\n                    title={this.props.context.t('Click to clear all filters')}\n                    onClick={() => this.props.clearAllFilters()}\n                >\n                    {this.props.context.t('all items are filtered out')}\n                </div>\n            ) : null;\n        }\n        const items: JSX.Element[] = [];\n\n        for (let i = 0; i < this.props.listOfVisibleAdapter.length; i++) {\n            const adapterName = this.props.listOfVisibleAdapter[i];\n            const cached = this.props.cachedAdapters[adapterName];\n\n            if (items.length > 50 && !this.props.context.installed[adapterName]?.version) {\n                continue;\n            }\n            items.push(\n                <AdapterTile\n                    key={`adapter-${adapterName}`}\n                    context={context}\n                    adapterName={adapterName}\n                    cached={cached}\n                    commandRunning={this.state.commandRunning}\n                />,\n            );\n        }\n        if (this.props.listOfVisibleAdapter.length > items.length) {\n            items.push(\n                <div\n                    key=\"newLine\"\n                    style={{\n                        flexBasis: '100%',\n                        height: 0,\n                    }}\n                />,\n            );\n            items.push(\n                <div\n                    key=\"more\"\n                    style={{ fontSize: 20, margin: 20 }}\n                >\n                    {this.props.context.t(\n                        'Filter adapters to see others. There is %s more',\n                        this.props.listOfVisibleAdapter.length - items.length,\n                    )}\n                </div>,\n            );\n        }\n\n        return items;\n    }\n\n    renderTileView(stableRepo: boolean, repoName: string, context: AdaptersContext): JSX.Element {\n        return (\n            <>\n                {!stableRepo ? (\n                    <Box sx={{ marginX: 2, marginTop: 1, width: 'calc(100% - 32px)' }}>\n                        <InfoBox type={'warning'}>{this.props.context.t('Active repo is \"%s\"', repoName)}</InfoBox>\n                    </Box>\n                ) : null}\n                <div style={styles.viewModeDiv}>{this.getTiles(context)}</div>\n            </>\n        );\n    }\n\n    renderTableView(stableRepo: boolean, repoName: string, context: AdaptersContext): JSX.Element {\n        return (\n            <TabContent>\n                {!stableRepo ? (\n                    <Box sx={{ marginX: 2, marginTop: 1, width: 'calc(100% - 32px)' }}>\n                        <InfoBox type={'warning'}>{this.props.context.t('Active repo is \"%s\"', repoName)}</InfoBox>\n                    </Box>\n                ) : null}\n                <TableContainer\n                    style={{\n                        ...styles.container,\n                        ...(!stableRepo ? styles.containerNotFullHeight : styles.containerFullHeight),\n                    }}\n                >\n                    <Table\n                        stickyHeader\n                        size=\"small\"\n                        sx={styles.table}\n                    >\n                        <TableHead>\n                            <TableRow>\n                                <TableCell style={styles.emptyBlock}></TableCell>\n                                <TableCell style={styles.name}>\n                                    <Typography>{this.props.context.t('Name')}</Typography>\n                                </TableCell>\n                                {!context.descHidden && (\n                                    <TableCell style={{ ...styles.description, width: this.props.descWidth }}>\n                                        <Typography>{this.props.context.t('Description')}</Typography>\n                                    </TableCell>\n                                )}\n                                <TableCell style={styles.connectionType} />\n                                <TableCell style={styles.installed}>\n                                    <Typography>{this.props.context.t('Installed')}</Typography>\n                                </TableCell>\n                                <TableCell style={styles.available}>\n                                    <Typography>{this.props.context.t('Available')}</Typography>\n                                </TableCell>\n                                <TableCell style={styles.license}>\n                                    <Typography>{this.props.context.t('License')}</Typography>\n                                </TableCell>\n                                <TableCell\n                                    style={{\n                                        ...styles.install,\n                                        width: this.state.expertMode ? BUTTONS_WIDTH : BUTTONS_WIDTH - 34 * 2,\n                                    }}\n                                >\n                                    <Typography>{this.props.context.t('Install')}</Typography>\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>{this.getRows(context)}</TableBody>\n                    </Table>\n                </TableContainer>\n            </TabContent>\n        );\n    }\n\n    static getDerivedStateFromProps(\n        props: AdaptersListProps,\n        state: AdaptersListState,\n    ): Partial<AdaptersListState> | null {\n        let changed = false;\n        // rewrite only if view mode changed, count of adapters in the list\n        if (props.descWidth !== state.descWidth) {\n            console.log('Render because of descWidth');\n            changed = true;\n        }\n        if (props.repoName !== state.repoName) {\n            console.log('Render because of repoName');\n            changed = true;\n        }\n        if (!!props.systemConfig !== state.systemConfig) {\n            console.log('Render because of systemConfig');\n            changed = true;\n        }\n        if (props.tableViewMode !== state.tableViewMode) {\n            console.log('Render because of tableViewMode');\n            changed = true;\n        }\n        if (props.oneListView !== state.oneListView) {\n            console.log('Render because of oneListView');\n            changed = true;\n        }\n        const categoriesExpanded = JSON.stringify(props.categoriesExpanded);\n        if (categoriesExpanded !== state.categoriesExpanded) {\n            console.log('Render because of categoriesExpanded');\n            changed = true;\n        }\n        const cachedAdapters = props.cachedAdapters ? Object.keys(props.cachedAdapters).length : 0;\n        if (cachedAdapters !== state.cachedAdapters) {\n            console.log(`Render because of cachedAdapters ${cachedAdapters} <> ${state.cachedAdapters}`);\n            changed = true;\n        }\n        if (props.update !== state.update) {\n            console.log('Render because of update');\n            changed = true;\n        }\n        if (props.sortByName !== state.sortByName) {\n            console.log('Render because of sortByName');\n            changed = true;\n        }\n        if (props.sortPopularFirst !== state.sortPopularFirst) {\n            console.log('Render because of sortPopularFirst');\n            changed = true;\n        }\n        if (props.sortRecentlyUpdated !== state.sortRecentlyUpdated) {\n            console.log('Render because of sortRecentlyUpdated');\n            changed = true;\n        }\n        if (props.context.expertMode !== state.expertMode) {\n            console.log('Render because of expertMode');\n            changed = true;\n        }\n        const listOfVisibleAdapter = JSON.stringify(props.listOfVisibleAdapter);\n        if (listOfVisibleAdapter !== state.listOfVisibleAdapter) {\n            console.log('Render because of listOfVisibleAdapter');\n            changed = true;\n        }\n        if (props.commandRunning !== state.commandRunning) {\n            console.log('Render because of commandRunning');\n            changed = true;\n        }\n        if (changed) {\n            return {\n                descWidth: props.descWidth,\n                repoName: props.repoName,\n                systemConfig: !!props.systemConfig,\n                tableViewMode: props.tableViewMode,\n                oneListView: props.oneListView,\n                categoriesExpanded,\n                cachedAdapters,\n                update: props.update,\n                sortByName: props.sortByName,\n                sortPopularFirst: props.sortPopularFirst,\n                sortRecentlyUpdated: props.sortRecentlyUpdated,\n                listOfVisibleAdapter,\n                renderCounter: state.renderCounter + 1,\n                expertMode: props.context.expertMode,\n                commandRunning: props.commandRunning,\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps: Readonly<AdaptersListProps>, nextState: Readonly<AdaptersListState>): boolean {\n        if (this.lastRenderCounter !== nextState.renderCounter) {\n            this.lastRenderCounter = nextState.renderCounter;\n            return true;\n        }\n\n        return false;\n    }\n\n    render(): JSX.Element {\n        if (!this.props.systemConfig?.common?.activeRepo) {\n            return <LinearProgress />;\n        }\n\n        if (this.props.tableViewMode) {\n            return this.renderTableView(this.props.stableRepo, this.props.repoName, this.props.context);\n        }\n        return this.renderTileView(this.props.stableRepo, this.props.repoName, this.props.context);\n    }\n}\n\nexport default AdaptersList;\n","import React, { Component, type JSX } from 'react';\n\nimport {\n    Button,\n    CircularProgress,\n    LinearProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n} from '@mui/material';\n\nimport { Close as CloseIcon, Refresh as ReloadIcon } from '@mui/icons-material';\n\nimport { I18n, type AdminConnection, type ThemeType } from '@iobroker/adapter-react-v5';\n\ninterface WebserverParameters {\n    useHttps: boolean;\n    port: number;\n    certPrivateName?: string;\n    certPublicName?: string;\n}\n\ninterface ServerResponse {\n    running: boolean;\n    stderr: string[];\n    stdout: string[];\n    success?: boolean;\n}\n\ninterface AdminUpdaterProps {\n    socket: AdminConnection;\n    host: string;\n    onClose: () => void;\n    version: string;\n    adminInstance: string;\n    onUpdating: (updating: boolean) => void;\n    themeType: ThemeType;\n    currentAdminVersion: string;\n}\n\ninterface AdminUpdaterState {\n    response: ServerResponse | null;\n    error: string | null;\n    starting: boolean;\n    upAgain: boolean;\n}\n\nclass AdminUpdater extends Component<AdminUpdaterProps, AdminUpdaterState> {\n    private updating: boolean;\n\n    private interval: ReturnType<typeof setInterval>;\n\n    private startTimeout: ReturnType<typeof setTimeout>;\n\n    private readonly textareaRef: React.RefObject<HTMLTextAreaElement>;\n\n    private readonly link: string;\n\n    private oldVersion?: string;\n\n    constructor(props: AdminUpdaterProps) {\n        super(props);\n\n        this.state = {\n            response: null,\n            error: null,\n            /** if upgrade is just starting, we ignore errors in the beginning */\n            starting: true,\n            /** if admin is up again after upgrade */\n            upAgain: false,\n        };\n\n        this.updating = false;\n\n        this.textareaRef = React.createRef();\n\n        this.link = `${window.location.protocol}//${window.location.host}/`;\n    }\n\n    setUpdating(updating: boolean): void {\n        if (this.updating !== updating) {\n            this.updating = updating;\n            this.props.onUpdating(updating);\n        }\n    }\n\n    /**\n     * Get the webserver configuration of the current admin instance\n     */\n    async getWebserverParams(): Promise<WebserverParameters> {\n        const obj = await this.props.socket.getObject(`system.adapter.${this.props.adminInstance}`);\n\n        return {\n            useHttps: obj.native.secure,\n            port: obj.native.port,\n            certPrivateName: obj.native.certPrivate,\n            certPublicName: obj.native.certPublic,\n        };\n    }\n\n    async componentDidMount(): Promise<void> {\n        const { certPrivateName, certPublicName, port, useHttps } = await this.getWebserverParams();\n\n        // remember the current version\n        this.oldVersion = this.props.currentAdminVersion;\n\n        await this.props.socket.upgradeAdapterWithWebserver(this.props.host, {\n            version: this.props.version,\n            adapterName: 'admin',\n            port,\n            useHttps,\n            certPublicName,\n            certPrivateName,\n        });\n\n        this.setUpdating(true);\n        this.interval = setInterval(() => this.checkStatus(), 1_000); // poll every second\n\n        this.startTimeout = setTimeout(() => {\n            this.startTimeout = null;\n            this.setState({ starting: false });\n        }, 10_000); // give 10 seconds to controller to start update\n    }\n\n    componentWillUnmount(): void {\n        if (this.interval) {\n            clearInterval(this.interval);\n            this.interval = null;\n        }\n\n        if (this.startTimeout) {\n            clearTimeout(this.startTimeout);\n            this.startTimeout = null;\n        }\n    }\n\n    async checkVersion(): Promise<boolean> {\n        // Maybe the update already happened. Check the version of the admin\n        try {\n            const res = await fetch('./version');\n            const version = await res.text();\n            // if it looks like version \"x.xx.xxx-beta1\" and not equal to the old version\n            if (version && version.length < 20 && version !== this.oldVersion) {\n                // admin updated\n                if (this.interval) {\n                    clearInterval(this.interval);\n                    this.interval = null;\n                }\n                this.setState(\n                    {\n                        response: {\n                            running: false,\n                            success: true,\n                            stderr: [],\n                            stdout: [I18n.t('Version updated to %s', version)],\n                        },\n                        upAgain: true,\n                        error: null,\n                    },\n                    () => this.setUpdating(false),\n                );\n                return true;\n            }\n\n            // if web server is up, and it sends us the old version number => no error\n            return version === this.oldVersion;\n        } catch {\n            return false;\n        }\n    }\n\n    async checkStatus(): Promise<void> {\n        console.log(`Request update status from: ${this.link}`);\n        try {\n            const res = await fetch(this.link);\n\n            // Just for logging purposes\n            const plainBody = await res.text();\n            console.log(`Received status: ${plainBody}`);\n\n            if (plainBody.startsWith('{') && plainBody.endsWith('}')) {\n                try {\n                    const response: ServerResponse = JSON.parse(plainBody) as ServerResponse;\n                    // sometimes stderr has only one empty string in it\n                    if (response?.stderr) {\n                        response.stderr = response.stderr.filter(line => line.trim());\n                    }\n                    if (response && !response.running && response.success && response.stdout) {\n                        response.stdout.push('');\n                        response.stdout.push('---------------------------------------------------');\n                        response.stdout.push(I18n.t('%s was successfully updated to %s', 'admin', this.props.version));\n                    } else if (response?.stdout) {\n                        response.stdout.unshift('');\n                        response.stdout.unshift('---------------------------------------------------');\n                        response.stdout.unshift(I18n.t('updating %s to %s...', 'admin', this.props.version));\n                    }\n                    this.setState({ response, error: null }, (): void => {\n                        if (response && !response.running) {\n                            if (this.interval) {\n                                clearInterval(this.interval);\n                                this.interval = null;\n                            }\n                            this.waitForAdapterStart();\n                        } else if (response?.running) {\n                            this.setUpdating(true);\n                        }\n\n                        // scroll down\n                        if (this.textareaRef.current) {\n                            setTimeout(\n                                () => (this.textareaRef.current.scrollTop = this.textareaRef.current.scrollHeight),\n                                100,\n                            );\n                        }\n                    });\n                } catch (e) {\n                    console.error(`Cannot parse response: ${e}`);\n                    this.setState({ error: plainBody }, () => this.setUpdating(false));\n                }\n            } else if (!(await this.checkVersion())) {\n                // Maybe the update already happened. Check the version of the admin\n                console.error(`Response is not JSON: ${plainBody}`);\n            }\n        } catch (e) {\n            if (!this.state.starting) {\n                // after 10 seconds, show error\n                this.setState({ error: e.toString() }, () => this.setUpdating(false));\n            }\n        }\n    }\n\n    /**\n     * Wait until admin is up again\n     */\n    waitForAdapterStart(): void {\n        this.interval = setInterval(async () => {\n            try {\n                await fetch(this.link);\n                clearInterval(this.interval);\n                this.interval = null;\n                this.setState({ upAgain: true });\n            } catch {\n                // ignore, it will throw until admin is reachable\n            }\n        }, 1_000);\n    }\n\n    render(): JSX.Element {\n        return (\n            <Dialog\n                onClose={(e, reason) => {\n                    if (reason !== 'escapeKeyDown' && reason !== 'backdropClick') {\n                        this.props.onClose();\n                    }\n                }}\n                open={!0}\n                maxWidth=\"lg\"\n                fullWidth\n            >\n                <DialogTitle>{I18n.t('Updating %s...', 'admin')}</DialogTitle>\n                <DialogContent style={{ height: 400, padding: '0 20px', overflow: 'hidden' }}>\n                    {(!this.state.response || this.state.response.running) && !this.state.error ? (\n                        <LinearProgress />\n                    ) : null}\n                    {this.state.response || this.state.error ? (\n                        <textarea\n                            ref={this.textareaRef}\n                            style={{\n                                width: '100%',\n                                height: '100%',\n                                resize: 'none',\n                                background: this.props.themeType === 'dark' ? '#000' : '#fff',\n                                color: this.props.themeType === 'dark' ? '#EEE' : '#111',\n                                boxSizing: 'border-box',\n                                fontFamily:\n                                    'Consolas,Monaco,Lucida Console,Liberation Mono,DejaVu Sans Mono,Bitstream Vera Sans Mono,Courier New, monospace',\n                                border: this.state.response?.success\n                                    ? '2px solid green'\n                                    : this.state.error ||\n                                        (this.state.response &&\n                                            !this.state.response.running &&\n                                            !this.state.response.success)\n                                      ? '2px solid red'\n                                      : undefined,\n                            }}\n                            value={\n                                this.state.error\n                                    ? this.state.error\n                                    : this.state.response.stderr && this.state.response.stderr.length\n                                      ? this.state.response.stderr.join('\\n')\n                                      : this.state.response.stdout.join('\\n')\n                            }\n                            readOnly\n                        />\n                    ) : null}\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        // loading={this.state.response?.success && !this.state.upAgain}\n                        variant=\"contained\"\n                        disabled={this.state.starting || (!this.state.error && !this.state.upAgain)}\n                        onClick={() => {\n                            if (this.state.response?.success) {\n                                window.location.reload();\n                            }\n                            this.props.onClose();\n                        }}\n                        color={this.state.response?.success ? 'primary' : 'grey'}\n                        startIcon={this.state.response?.success ? <ReloadIcon /> : <CloseIcon />}\n                    >\n                        {this.state.response?.success && !this.state.upAgain ? (\n                            <CircularProgress />\n                        ) : this.state.response?.success ? (\n                            I18n.t('Reload')\n                        ) : (\n                            I18n.t('Close')\n                        )}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default AdminUpdater;\n","import React, { createRef, type JSX } from 'react';\nimport semver from 'semver';\n\nimport {\n    Grid2,\n    Button,\n    IconButton,\n    LinearProgress,\n    TextField,\n    Tooltip,\n    InputAdornment,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Dialog,\n    Box,\n} from '@mui/material';\n\nimport {\n    Folder as FolderIcon,\n    FolderOpen as FolderOpenIcon,\n    Refresh as RefreshIcon,\n    List as ListIcon,\n    ViewList as ViewListIcon,\n    ViewModule as ViewModuleIcon,\n    Update as UpdateIcon,\n    Star as StarIcon,\n    Close as CloseIcon,\n} from '@mui/icons-material';\nimport { FaGithub as GithubIcon } from 'react-icons/fa';\n\nimport CustomSelectButton from '@/components/CustomSelectButton';\nimport AdaptersUpdaterDialog from '@/dialogs/AdaptersUpdaterDialog';\nimport SlowConnectionWarningDialog, { SlowConnectionWarningDialogClass } from '@/dialogs/SlowConnectionWarningDialog';\nimport IsVisible from '@/components/IsVisible';\nimport AdminUtils from '@/helpers/AdminUtils';\nimport {\n    TabHeader,\n    type AdminConnection,\n    type IobTheme,\n    type ThemeType,\n    type Translate,\n    TabContainer,\n    Utils,\n} from '@iobroker/adapter-react-v5';\nimport type AdaptersWorker from '@/Workers/AdaptersWorker';\nimport { type AdapterEvent } from '@/Workers/AdaptersWorker';\nimport type InstancesWorker from '@/Workers/InstancesWorker';\nimport type { InstanceEvent } from '@/Workers/InstancesWorker';\nimport HostAdapterWorker, { type HostAdapterEvent } from '@/Workers/HostAdapterWorker';\nimport type { CompactInstanceInfo } from '@/dialogs/AdapterUpdateDialog';\nimport type { RepoAdapterObject } from '@/components/Adapters/Utils';\n\nimport type { Ratings, AdapterCacheEntry } from '@/components/Adapters/AdapterGeneric';\nimport type HostsWorker from '@/Workers/HostsWorker';\nimport GitHubInstallDialog from '@/dialogs/GitHubInstallDialog';\nimport AdapterInstallDialog, {\n    type AdapterRatingInfo,\n    type InstalledInfo,\n    type AdaptersContext,\n    type AdapterInstallDialogState,\n} from '@/components/Adapters/AdapterInstallDialog';\nimport AdaptersList, { SUM } from '@/components/Adapters/AdaptersList';\nimport type { AdminGuiConfig } from '@/types';\nimport type { RatingDialogRepository } from '@/dialogs/RatingDialog';\nimport AdminUpdater from '@/dialogs/AdminUpdater';\n\ntype DockerInformation =\n    | {\n          /** If it is a Docker installation */\n          isDocker: boolean;\n          /** If it is the official Docker image */\n          isOfficial: true;\n          /** Semver string for official Docker image */\n          officialVersion: string;\n      }\n    | {\n          /** If it is a Docker installation */\n          isDocker: boolean;\n          /** If it is the official Docker image */\n          isOfficial: false;\n      };\ntype Platform =\n    | 'aix'\n    | 'android'\n    | 'darwin'\n    | 'freebsd'\n    | 'haiku'\n    | 'linux'\n    | 'openbsd'\n    | 'sunos'\n    | 'win32'\n    | 'cygwin'\n    | 'netbsd';\n\ntype HostInfo = {\n    /** Converted OS for human readability */\n    Platform: Platform | 'docker' | 'Windows' | 'OSX';\n    /** The underlying OS */\n    os: Platform;\n    /** Information about the docker installation */\n    dockerInformation?: DockerInformation;\n    /** Host architecture */\n    Architecture: string;\n    /** Number of CPUs */\n    CPUs: number | null;\n    /** CPU speed */\n    Speed: number | null;\n    /** CPU model */\n    Model: string | null;\n    /** Total RAM of host */\n    RAM: number;\n    /** System uptime in seconds */\n    'System uptime': number;\n    /** Node.JS version */\n    'Node.js': string;\n    /** Current time to compare to local time */\n    time: number;\n    /** Timezone offset to compare to local time */\n    timeOffset: number;\n    /** Number of available adapters */\n    'adapters count': number;\n    /** NPM version */\n    NPM: string;\n};\n\nexport type CompactSystemRepository = {\n    _id: string;\n    common: {\n        name: string;\n        dontDelete: boolean;\n    };\n    native: {\n        repositories: Record<string, ioBroker.RepositoryInformation>;\n    };\n};\n\nconst styles: Record<string, any> = {\n    grow: {\n        flexGrow: 1,\n    },\n    updateAllButton: (theme: IobTheme) => ({\n        position: 'relative',\n        '& .admin-update-second-icon': {\n            position: 'absolute',\n            top: 15,\n            left: 15,\n            opacity: 0.4,\n            color: theme.palette.mode === 'dark' ? '#aad5ff' : '#007fff',\n        },\n    }),\n    counters: {\n        mr: '10px',\n        minWidth: 120,\n        display: 'flex',\n        '& div': {\n            ml: '3px',\n        },\n    },\n    infoAdapters: (theme: IobTheme) => ({\n        fontSize: 10,\n        color: theme.palette.mode === 'dark' ? '#9c9c9c' : '#333',\n        cursor: 'pointer',\n    }),\n    greenText: {\n        color: '#00a005d1',\n    },\n    tooltip: {\n        pointerEvents: 'none',\n    },\n};\n\nconst FILTERS: { name: string; notByList?: boolean }[] = [\n    { name: 'Description A-Z' },\n    { name: 'Name A-Z' },\n    { name: 'Popular first', notByList: true },\n    { name: 'Recently updated', notByList: true },\n];\n\ninterface AdaptersProps {\n    t: Translate;\n    /** The host ID of the admin adapter, like system.host.test */\n    adminHost: string;\n    adminInstance: string;\n    socket: AdminConnection;\n    systemConfig: ioBroker.SystemConfigObject;\n    lang: ioBroker.Languages;\n    themeType: ThemeType;\n    theme: IobTheme;\n    /** Called when admin updates itself */\n    onUpdating: (isUpdating: boolean) => void;\n    ready: boolean;\n    /** Current selected host */\n    currentHost: string;\n    forceUpdateAdapters: number;\n    triggerUpdate: number;\n    /** Like admin.0 */\n    adminGuiConfig: AdminGuiConfig;\n    adaptersWorker: AdaptersWorker;\n    instancesWorker: InstancesWorker;\n    hostsWorker: HostsWorker;\n    expertMode: boolean;\n    executeCommand: (cmd: string, host?: string, callback?: (exitCode: number) => void) => void;\n    commandRunning: boolean;\n    onSetCommandRunning: (commandRunning: boolean) => void;\n    toggleTranslation: () => void;\n    noTranslation: boolean;\n    menuOpened: boolean;\n    menuClosed: boolean;\n    currentAdminVersion: string;\n}\n\ninterface AdaptersState extends AdapterInstallDialogState {\n    lastUpdate: number;\n    repository: Record<string, RepoAdapterObject & { rating?: AdapterRatingInfo }>;\n    installed: InstalledInfo;\n    installedGlobal: InstalledInfo;\n    adapters: Record<string, ioBroker.AdapterObject>;\n    compactInstances: Record<string, CompactInstanceInfo> | null;\n    categories: {\n        name: string;\n        translation: string;\n        count: number;\n        installed: number;\n        adapters: string[];\n    }[];\n    hostData: (HostInfo & { 'Active instances': number; location: string; Uptime: number }) | null;\n    compactRepositories: CompactSystemRepository | null;\n    hostOs: string;\n    nodeJsVersion: string;\n    init: boolean;\n    update: boolean;\n    filterConnectionType: boolean;\n    search: string;\n    oneListView: boolean;\n    tableViewMode: boolean;\n    updateList: boolean;\n    installedList: number;\n    categoriesTiles: string;\n    filterTiles: string;\n    gitHubInstallDialog: boolean;\n    updateAvailable: string[];\n    filteredList: {\n        [adapterName: string]: { exact: boolean; type: 'name' | 'desc' | 'title' | 'keywords'; start?: boolean };\n    } | null;\n    showUpdater: boolean;\n    descWidth: number;\n    showStatistics: boolean;\n    readTimeoutMs: number;\n    showSlowConnectionWarning: boolean;\n    currentHost: string;\n    forceUpdateAdapters: number;\n    triggerUpdate: number;\n    ratings: Ratings | null;\n    categoriesExpanded: { [categoryName: string]: boolean };\n    adminUpgradeTo: string;\n}\n\nclass Adapters extends AdapterInstallDialog<AdaptersProps, AdaptersState> {\n    private readonly inputRef: React.RefObject<HTMLInputElement>;\n\n    private readonly countRef: React.RefObject<HTMLDivElement>;\n\n    private readonly t: Translate;\n\n    private readonly wordCache: Record<string, string> = {};\n\n    private cache: {\n        listOfVisibleAdapter: string[] | null;\n        adapters: { [adapterName: string]: AdapterCacheEntry } | null;\n    } = { listOfVisibleAdapter: null, adapters: null };\n\n    private listOfVisibleAdapterLength: number = 0;\n\n    private allAdapters: number = 0;\n\n    private installedAdapters: number = 0;\n\n    private recentUpdatedAdapters: number = 0;\n\n    private uuid: string = '';\n\n    private buildCacheTimer: ReturnType<typeof setTimeout> | null = null;\n\n    private updateTimeout: ReturnType<typeof setTimeout> | null = null;\n\n    private typingTimer: ReturnType<typeof setTimeout> | null = null;\n\n    private hostsTimer: ReturnType<typeof setTimeout> | null = null;\n\n    private onHostAdapterTimer: ReturnType<typeof setTimeout> | null = null;\n\n    private tempAdapters: Record<string, any> | null = null;\n\n    private tempInstalled: InstalledInfo | null = null;\n\n    private tempInstances: Record<string, CompactInstanceInfo> | null = null;\n\n    private hostAdapterWorker: HostAdapterWorker | null = null;\n\n    constructor(props: AdaptersProps) {\n        super(props);\n\n        Object.assign(this.state, {\n            lastUpdate: 0,\n            repository: {},\n            /** Adapters installed on the same host, without object changes installed just contains io-package information, not enriched information like installedFrom */\n            installed: {},\n            /** This contains the adapters installed on same and other hosts */\n            installedGlobal: {},\n            adapters: {},\n            compactInstances: {},\n            categories: [],\n            hostData: null,\n            compactRepositories: null,\n            hostOs: '',\n            nodeJsVersion: '',\n            init: false,\n            update: false,\n            filterConnectionType: false,\n            search: (((window as any)._localStorage as Storage) || window.localStorage).getItem('Adapter.search') || '',\n            oneListView: false,\n            tableViewMode: false,\n            updateList: false,\n            installedList: 0,\n            categoriesTiles: 'All',\n            filterTiles: 'Description A-Z',\n            gitHubInstallDialog: false,\n            updateAvailable: [],\n            filteredList: null,\n            showUpdater: false,\n            descWidth: 300,\n            showStatistics: false,\n            readTimeoutMs: SlowConnectionWarningDialogClass.getReadTimeoutMs(),\n            showSlowConnectionWarning: false,\n            currentHost: props.currentHost,\n            forceUpdateAdapters: props.forceUpdateAdapters,\n            triggerUpdate: props.triggerUpdate,\n            ratings: null,\n            categoriesExpanded: {},\n            adminUpgradeTo: '',\n        } as AdaptersState);\n\n        this.inputRef = createRef();\n        this.countRef = createRef();\n\n        this.t = this.translate;\n    }\n\n    translate = (word: string, arg1?: string | boolean | number, arg2?: string | boolean | number): string => {\n        if (arg1 !== undefined) {\n            return this.props.t(word, arg1, arg2);\n        }\n\n        if (!this.wordCache[word]) {\n            this.wordCache[word] = this.props.t(word);\n        }\n\n        return this.wordCache[word];\n    };\n\n    renderSlowConnectionWarning(): JSX.Element | null {\n        if (!this.state.showSlowConnectionWarning) {\n            return null;\n        }\n        return (\n            <SlowConnectionWarningDialog\n                readTimeoutMs={this.state.readTimeoutMs}\n                t={this.t}\n                onClose={readTimeoutMs => {\n                    if (readTimeoutMs) {\n                        this.setState({ showSlowConnectionWarning: false, readTimeoutMs }, () => this.updateAll());\n                    } else {\n                        this.setState({ showSlowConnectionWarning: false });\n                    }\n                }}\n            />\n        );\n    }\n\n    async componentDidMount(): Promise<void> {\n        if (this.props.ready) {\n            this.hostAdapterWorker = new HostAdapterWorker(this.props.socket, this.props.currentHost);\n            this.hostAdapterWorker.registerHandler(this.onHostAdapterChanged);\n            // wait till data is loaded\n            await this.hostAdapterWorker.getObjects();\n            await this.updateAll();\n            if (this.state.search) {\n                this.filterAdapters();\n            }\n            this.props.adaptersWorker.registerHandler(this.onAdaptersChanged);\n            this.props.instancesWorker.registerHandler(this.onAdaptersChanged);\n        }\n    }\n\n    async updateAll(update?: boolean, bigUpdate?: boolean, indicateUpdate?: boolean): Promise<void> {\n        await this.getAdapters(update, bigUpdate, indicateUpdate);\n        await this.getAdaptersInfo(update, indicateUpdate);\n    }\n\n    componentDidUpdate(): void {\n        const descWidth = this.getDescWidth();\n        if (this.state.descWidth !== descWidth) {\n            this.setState({ descWidth });\n        }\n        if (this.countRef.current) {\n            this.countRef.current.innerHTML = this.listOfVisibleAdapterLength.toString();\n        }\n    }\n\n    componentWillUnmount(): void {\n        if (this.updateTimeout) {\n            clearTimeout(this.updateTimeout);\n            this.updateTimeout = null;\n        }\n\n        if (this.buildCacheTimer) {\n            clearTimeout(this.buildCacheTimer);\n            this.buildCacheTimer = null;\n        }\n\n        if (this.typingTimer) {\n            clearTimeout(this.typingTimer);\n            this.typingTimer = null;\n        }\n\n        if (this.hostsTimer) {\n            clearTimeout(this.hostsTimer);\n            this.hostsTimer = null;\n        }\n\n        if (this.onHostAdapterTimer) {\n            clearTimeout(this.onHostAdapterTimer);\n            this.onHostAdapterTimer = null;\n        }\n\n        this.props.adaptersWorker.unregisterHandler(this.onAdaptersChanged);\n        this.props.instancesWorker.unregisterHandler(this.onAdaptersChanged);\n        this.hostAdapterWorker.destroy();\n        this.hostAdapterWorker = null;\n    }\n\n    onAdaptersChanged = (events: (AdapterEvent | InstanceEvent)[]): void => {\n        this.tempAdapters = this.tempAdapters || JSON.parse(JSON.stringify(this.state.adapters || {}));\n        this.tempInstalled = this.tempInstalled || JSON.parse(JSON.stringify(this.state.installed || {}));\n        this.tempInstances = this.tempInstances || JSON.parse(JSON.stringify(this.state.compactInstances || {}));\n\n        events.forEach(event => {\n            // detect if adapter or instance\n            const isInstance = !!event.id.match(/\\.\\d+$/);\n            if (isInstance) {\n                if (event.type === 'deleted' || !event.obj) {\n                    delete this.tempInstances[event.id];\n                } else {\n                    this.tempInstances[event.id] = {\n                        enabled: event.obj.common.enabled,\n                        icon: event.obj.common.icon,\n                        name: event.obj.common.name,\n                        adminTab: event.obj.common.adminTab,\n                        version: event.obj.common.version,\n                    };\n                }\n            } else if (event.type === 'deleted' || !event.obj) {\n                // extract name from id\n                const p = event.id.split('.');\n\n                // remove from installed\n                delete this.tempInstalled[p[2]];\n                delete this.tempAdapters[event.id];\n            } else {\n                const name = event.obj.common.name;\n                if (this.tempInstalled[name]) {\n                    // Update attributes\n                    Object.keys(this.tempInstalled[name]).forEach(attr => {\n                        if ((event.obj.common as Record<string, any>)[attr] !== undefined && attr !== 'installedFrom') {\n                            (this.tempInstalled[name] as Record<string, any>)[attr] = (\n                                event.obj.common as Record<string, any>\n                            )[attr];\n                        }\n                    });\n                } else {\n                    // new\n                    this.tempInstalled[event.id.split('.').pop()] = JSON.parse(JSON.stringify(event.obj.common));\n                }\n                this.tempAdapters[event.id] = event.obj;\n            }\n        });\n\n        if (this.updateTimeout) {\n            clearTimeout(this.updateTimeout);\n        }\n        this.updateTimeout = setTimeout(() => {\n            this.updateTimeout = null;\n            const adapters = this.tempAdapters;\n            this.tempAdapters = null;\n            const installed = this.tempInstalled;\n            this.tempInstalled = null;\n            const compactInstances = this.tempInstances;\n            this.tempInstances = null;\n\n            this.analyseInstalled({\n                adapters,\n                installedLocal: installed,\n                cb: () => this.calculateInfo(compactInstances),\n            });\n        }, 300);\n    };\n\n    /**\n     * Enriches information of the installed adapters with those of the repository and sets them to the state\n     */\n    analyseInstalled(options: {\n        adapters: Record<string, ioBroker.AdapterObject>;\n        installedLocal: InstalledInfo;\n        installedGlobal?: InstalledInfo;\n        repository?: Record<string, RepoAdapterObject>;\n        cb?: () => void;\n    }): void {\n        let { adapters, repository } = options;\n\n        const { cb, installedLocal } = options;\n        let { installedGlobal } = options;\n\n        adapters = adapters || this.state.adapters;\n        const installed = installedLocal || this.state.installed;\n        installedGlobal = installedGlobal || this.state.installedGlobal;\n        repository = repository || this.state.repository;\n\n        const updateAvailable: string[] = [];\n\n        Object.keys(installed).forEach(adapterName => {\n            if (installed[adapterName]) {\n                const version = installed[adapterName].version;\n                const repositoryEntry = repository[adapterName];\n\n                if (\n                    repositoryEntry &&\n                    repositoryEntry.version !== version &&\n                    AdminUtils.updateAvailable(version, repositoryEntry.version) &&\n                    !updateAvailable.includes(adapterName)\n                ) {\n                    updateAvailable.push(adapterName);\n                }\n            }\n        });\n\n        this.cache.listOfVisibleAdapter = null;\n\n        this.setState(\n            {\n                adapters,\n                updateAvailable,\n                installed,\n                repository,\n                installedGlobal,\n            },\n            () => cb && cb(),\n        );\n    }\n\n    /**\n     * Get the installed adapters, for current host and other hosts\n     */\n    async getInstalled(update?: boolean): Promise<{\n        installedLocal: InstalledInfo;\n        installedGlobal: InstalledInfo;\n    }> {\n        /** Installed adapters on the same host */\n        let installedLocal: InstalledInfo;\n        /** Installed adapters on any hosts */\n        let installedGlobal: InstalledInfo = {};\n\n        const hosts = await this.props.socket.getHosts(update);\n\n        for (const host of hosts) {\n            try {\n                const alive = await this.props.socket.getState(`${host._id}.alive`);\n                if (alive?.val) {\n                    const res = await this.props.socket.getInstalled(host._id, update, this.state.readTimeoutMs);\n\n                    if (host._id === this.state.currentHost) {\n                        installedLocal = res;\n                    }\n                    // TODO: handle cases where different versions of adapters are installed on different hosts\n                    installedGlobal = { ...installedGlobal, ...res };\n                }\n            } catch (e) {\n                window.alert(`Cannot getInstalled from \"${host._id}\" (timeout ${this.state.readTimeoutMs}ms): ${e}`);\n                if (e.toString().includes('timeout')) {\n                    this.setState({ showSlowConnectionWarning: true });\n                }\n            }\n        }\n\n        return { installedLocal, installedGlobal };\n    }\n\n    async getAdapters(update?: boolean, bigUpdate?: boolean, indicateUpdate?: boolean): Promise<void> {\n        console.log('[ADAPTERS] getAdapters');\n\n        const currentHost = this.state.currentHost;\n        update = update || this.props.adaptersWorker.isForceUpdate();\n\n        if (!this.state.update && (update || indicateUpdate)) {\n            this.setState({ update: true });\n        }\n\n        let adapters: Record<string, ioBroker.AdapterObject>;\n\n        try {\n            adapters = (await this.props.adaptersWorker.getObjects(update)) || {};\n        } catch (e) {\n            window.alert(`Cannot getAdapters: ${e}`);\n        }\n\n        const { installedLocal, installedGlobal } = await this.getInstalled(update);\n\n        let repository: Record<string, RepoAdapterObject>;\n        try {\n            repository = await this.props.socket.getRepository(\n                currentHost,\n                { repo: this.props.systemConfig.common.activeRepo, update: bigUpdate || indicateUpdate },\n                update,\n                this.state.readTimeoutMs,\n            );\n        } catch (e) {\n            window.alert(`Cannot getRepository: ${e}`);\n            if (e.toString().includes('timeout')) {\n                this.setState({ showSlowConnectionWarning: true });\n            }\n        }\n\n        return this.analyseInstalled({\n            adapters,\n            installedLocal,\n            repository,\n            installedGlobal,\n        });\n    }\n\n    getWordVotes(votes: number): string {\n        if (votes === 1) {\n            return this.t('vote');\n        }\n        if (votes >= 2 && votes <= 4) {\n            return this.t('votes2');\n        }\n        if (votes >= 5 && votes <= 20) {\n            return this.t('votes');\n        }\n        const v = votes % 10;\n        if (v === 1) {\n            return this.t('vote21');\n        }\n        if (v >= 2 && v <= 4) {\n            return this.t('votes2');\n        }\n        return this.t('votes');\n    }\n\n    static getAdapterTitle(\n        /** adapter name */\n        adapterName: string,\n        adapters: Record<string, ioBroker.AdapterCommon | AdapterCacheEntry>,\n        lang: ioBroker.Languages,\n    ): string {\n        if (!adapters[adapterName]) {\n            return adapterName;\n        }\n        const titleObj: ioBroker.StringOrTranslated =\n            (adapters[adapterName] as ioBroker.AdapterCommon).titleLang || adapters[adapterName].title;\n        let title: string;\n        if (typeof titleObj === 'object') {\n            title = titleObj[lang] || titleObj.en;\n        } else {\n            title = titleObj;\n        }\n        title = ((title || '').toString() || '').replace('ioBroker Visualisation - ', '');\n        return title.toLowerCase();\n    }\n\n    static sortAdapters(\n        list: string[],\n        lang: ioBroker.Languages,\n        installed: InstalledInfo,\n        adapters: Record<string, RepoAdapterObject | AdapterCacheEntry>,\n        sortByName: boolean,\n        sortPopularFirst?: boolean,\n        sortRecentlyUpdated?: boolean,\n        filteredList?: {\n            [adapterName: string]: { exact: boolean; type: 'name' | 'desc' | 'title' | 'keywords'; start?: boolean };\n        } | null,\n    ): void {\n        const titles: { [adapterName: string]: string } = {};\n        list.sort((a, b) => {\n            if (sortPopularFirst) {\n                if (adapters[b].stat === adapters[a].stat) {\n                    titles[a] = titles[a] || Adapters.getAdapterTitle(a, adapters, lang);\n                    titles[b] = titles[b] || Adapters.getAdapterTitle(b, adapters, lang);\n\n                    return titles[a] > titles[b] ? 1 : titles[a] < titles[b] ? -1 : 0;\n                }\n                return adapters[b].stat - adapters[a].stat;\n            }\n            if (sortRecentlyUpdated) {\n                if (!adapters[a]) {\n                    return -1;\n                }\n                if (!adapters[b]) {\n                    return 1;\n                }\n                if ((adapters[a] as AdapterCacheEntry).daysAgo === (adapters[b] as AdapterCacheEntry).daysAgo) {\n                    titles[a] = titles[a] || Adapters.getAdapterTitle(a, adapters, lang);\n                    titles[b] = titles[b] || Adapters.getAdapterTitle(b, adapters, lang);\n\n                    return titles[a] > titles[b] ? 1 : titles[a] < titles[b] ? -1 : 0;\n                }\n                return (adapters[a] as AdapterCacheEntry).daysAgo - (adapters[b] as AdapterCacheEntry).daysAgo;\n            }\n\n            if (filteredList) {\n                if (filteredList[a].exact && !filteredList[b].exact) {\n                    return -1;\n                }\n                if (!filteredList[a].exact && filteredList[b].exact) {\n                    return 1;\n                }\n            }\n\n            if (installed[a] && installed[b]) {\n                if (sortByName) {\n                    return a > b ? 1 : a < b ? -1 : 0;\n                }\n                titles[a] = titles[a] || Adapters.getAdapterTitle(a, adapters, lang);\n                titles[b] = titles[b] || Adapters.getAdapterTitle(b, adapters, lang);\n\n                return titles[a] > titles[b] ? 1 : titles[a] < titles[b] ? -1 : 0;\n            }\n            if (installed[a]) {\n                return -1;\n            }\n            if (installed[b]) {\n                return 1;\n            }\n\n            if (sortByName) {\n                return a > b ? 1 : a < b ? -1 : 0;\n            }\n            // sort by real language name and not by adapter name\n            titles[a] = titles[a] || Adapters.getAdapterTitle(a, adapters, lang);\n            titles[b] = titles[b] || Adapters.getAdapterTitle(b, adapters, lang);\n\n            return titles[a] > titles[b] ? 1 : titles[a] < titles[b] ? -1 : 0;\n        });\n    }\n\n    calculateInfo(\n        compactInstances: Record<string, CompactInstanceInfo>,\n        ratings?: Ratings | null,\n        hostData?: (HostInfo & { 'Active instances': number; location: string; Uptime: number }) | null,\n        compactRepositories?: CompactSystemRepository | null,\n    ): Promise<void> {\n        hostData = hostData || this.state.hostData;\n        ratings = ratings || this.state.ratings;\n        compactInstances = compactInstances || this.state.compactInstances;\n        if (!compactRepositories?._id) {\n            compactRepositories = this.state.compactRepositories;\n        }\n\n        const adapters = this.state.adapters;\n\n        const installed: InstalledInfo = JSON.parse(JSON.stringify(this.state.installed));\n        const repository: Record<string, RepoAdapterObject> = JSON.parse(JSON.stringify(this.state.repository));\n\n        const nodeJsVersion = (hostData?.['Node.js'] || '').replace('v', '');\n        const hostOs = hostData?.os || '';\n\n        const categories: {\n            [categoryType: string]: {\n                name: string;\n                translation: string;\n                count: number;\n                installed: number;\n                adapters: string[];\n            };\n        } = {};\n        const categoriesSorted: {\n            name: string;\n            translation: string;\n            count: number;\n            installed: number;\n            adapters: string[];\n        }[] = [];\n        let categoriesExpanded: { [categoryName: string]: boolean } = {};\n        try {\n            categoriesExpanded =\n                JSON.parse(\n                    (((window as any)._localStorage as Storage) || window.localStorage).getItem(\n                        'Adapters.expandedCategories',\n                    ),\n                ) || {};\n        } catch {\n            // ignore\n        }\n\n        Object.keys(installed).forEach(adapterName => {\n            const adapter = installed[adapterName];\n            if (adapters[adapterName]?.common?.ignoreVersion) {\n                adapter.ignoreVersion = adapters[adapterName].common.ignoreVersion;\n            }\n\n            if (!adapter.controller && adapterName !== 'hosts') {\n                if (!repository[adapterName]) {\n                    repository[adapterName] = JSON.parse(JSON.stringify(adapter));\n                    repository[adapterName].version = '';\n                }\n            }\n            adapter.count = 0;\n            adapter.enabled = 0;\n        });\n\n        Object.keys(compactInstances).forEach(id => {\n            const adapterName = compactInstances[id].name;\n            if (installed[adapterName]) {\n                installed[adapterName].count++;\n            }\n        });\n\n        const now = Date.now();\n        this.recentUpdatedAdapters = 0;\n        this.installedAdapters = 0;\n\n        Object.keys(repository).forEach(adapterName => {\n            if (adapterName === 'hosts') {\n                return;\n            }\n            if (adapterName.startsWith('_')) {\n                return;\n            }\n            const adapter: RepoAdapterObject & { rating?: AdapterRatingInfo } = repository[adapterName];\n            if (adapter.keywords) {\n                adapter.keywords = adapter.keywords.map(word => word.toLowerCase());\n            }\n            const _installed = installed[adapterName];\n\n            adapter.rating = ratings?.[adapterName] as AdapterRatingInfo;\n\n            if (adapter.rating?.rating) {\n                adapter.rating.title = [\n                    `${this.t('Total rating:')} ${adapter.rating.rating.r} (${\n                        adapter.rating.rating.c\n                    } ${this.getWordVotes(adapter.rating.rating.c)})`,\n                    _installed && _installed.version && adapter.rating[_installed.version]\n                        ? `${this.t('Rating for')} v${_installed.version}: ${adapter.rating[_installed.version].r} (${\n                              adapter.rating[_installed.version].c\n                          } ${this.getWordVotes(adapter.rating.rating.c)})`\n                        : '',\n                ]\n                    .filter(i => i)\n                    .join('\\n');\n            } else {\n                adapter.rating = { title: this.t('No rating or too few data') } as AdapterRatingInfo;\n            }\n\n            if (!adapter.controller) {\n                const type: string = adapter.type;\n                const installedInGroup = installed[adapterName];\n\n                const daysAgo = Math.round((now - new Date(adapter.versionDate).getTime()) / 86400000);\n\n                if (daysAgo <= 31) {\n                    this.recentUpdatedAdapters++;\n                }\n                if (installed[adapterName]) {\n                    this.installedAdapters++;\n                }\n\n                if (!categories[type]) {\n                    categories[type] = {\n                        name: type,\n                        translation: this.t(`${type}_group`),\n                        count: 1,\n                        installed: installedInGroup ? 1 : 0,\n                        adapters: [adapterName],\n                    };\n                } else {\n                    categories[type].count++;\n                    categories[type].adapters.push(adapterName);\n                    if (installedInGroup) {\n                        categories[type].installed++;\n                    }\n                }\n            }\n        });\n\n        Object.keys(categories)\n            .sort((a, b) => {\n                if (a === 'general' && b !== 'general') {\n                    return -1;\n                }\n                if (a !== 'general' && b === 'general') {\n                    return 1;\n                }\n                if (categories[a].translation > categories[b].translation) {\n                    return 1;\n                }\n                if (categories[a].translation < categories[b].translation) {\n                    return -1;\n                }\n                return 0;\n            })\n            .forEach(categoryType => categoriesSorted.push(categories[categoryType]));\n\n        // const _titles = {};\n        const sortByName = this.state.filterTiles === 'Name A-Z';\n\n        Object.keys(categories).forEach(type =>\n            Adapters.sortAdapters(categories[type].adapters, this.props.lang, installed, repository, sortByName),\n        );\n\n        let installedList = 0;\n        try {\n            installedList = JSON.parse(\n                (((window as any)._localStorage as Storage) || window.localStorage).getItem('Adapters.installedList'),\n            );\n            // @ts-expect-error back compatibility\n            if (installedList === false) {\n                installedList = 0;\n            }\n        } catch {\n            // ignore\n        }\n        const oneListView =\n            (((window as any)._localStorage as Storage) || window.localStorage).getItem('Adapters.list') === 'true';\n        const tableViewMode =\n            (((window as any)._localStorage as Storage) || window.localStorage).getItem('Adapters.viewMode') === 'true';\n        const updateList =\n            (((window as any)._localStorage as Storage) || window.localStorage).getItem('Adapters.updateList') ===\n            'true';\n        const categoriesTiles =\n            (((window as any)._localStorage as Storage) || window.localStorage).getItem('Adapters.categoriesTiles') ||\n            'All';\n        let filterTiles =\n            (((window as any)._localStorage as Storage) || window.localStorage).getItem('Adapters.filterTiles') ||\n            'Description A-Z';\n        if (filterTiles === 'A-Z') {\n            filterTiles = 'Description A-Z';\n        }\n        this.allAdapters = Object.keys(repository).length - 1;\n\n        this.cache.listOfVisibleAdapter = null;\n\n        return new Promise<void>(resolve => {\n            this.setState(\n                {\n                    repository,\n                    installed,\n                    ratings,\n                    filterTiles,\n                    categoriesTiles,\n                    compactRepositories,\n                    installedList,\n                    compactInstances,\n                    updateList,\n                    tableViewMode,\n                    oneListView,\n                    lastUpdate: Date.now(),\n                    hostData,\n                    hostOs,\n                    nodeJsVersion,\n                    categories: categoriesSorted,\n                    categoriesExpanded,\n                    init: true,\n                    update: false,\n                },\n                () => resolve(),\n            );\n        });\n    }\n\n    async getAdaptersInfo(update?: boolean, indicateUpdate?: boolean): Promise<void> {\n        if (!this.state.currentHost) {\n            return;\n        }\n\n        // Do not update too often\n        if (Date.now() - this.state.lastUpdate > 1_000) {\n            console.log('[ADAPTERS] getAdaptersInfo');\n\n            const currentHost = this.state.currentHost;\n\n            let ratings: Ratings | null;\n            try {\n                if (!this.state.update || indicateUpdate) {\n                    await new Promise<void>(resolve => {\n                        this.setState({ update: true }, () => resolve());\n                    });\n                }\n                const hostData: HostInfo & { 'Active instances': number; location: string; Uptime: number } =\n                    await this.props.socket\n                        .getHostInfo(currentHost, update, this.state.readTimeoutMs)\n                        .catch((e: unknown): void => {\n                            window.alert(`Cannot getHostInfo for \"${currentHost}\": ${e as Error}`);\n                            if ((e as Error).toString().includes('timeout')) {\n                                this.setState({ showSlowConnectionWarning: true });\n                            }\n                        });\n\n                if (this.props.adminGuiConfig.admin.adapters?.allowAdapterRating !== false) {\n                    try {\n                        ratings = (await this.props.socket.getRatings(update)) as unknown as Ratings;\n                    } catch (e) {\n                        window.alert(`Cannot read ratings: ${e}`);\n                    }\n                    this.uuid = ratings?.uuid || null;\n                } else {\n                    ratings = null;\n                }\n\n                const compactInstances = await this.props.socket\n                    .getCompactInstances(update)\n                    .catch((e: unknown): Record<string, CompactInstanceInfo> => {\n                        window.alert(`Cannot read countsOfInstances: ${e as Error}`);\n                        return {};\n                    });\n\n                const compactRepositoriesEx = await this.props.socket\n                    .getCompactSystemRepositories(update)\n                    .catch((e: unknown): Record<string, CompactSystemRepository> => {\n                        window.alert(`Cannot read getCompactSystemRepositories: ${e}`);\n                        return {};\n                    });\n                const compactRepositories: CompactSystemRepository = compactRepositoriesEx as CompactSystemRepository;\n\n                await this.calculateInfo(compactInstances || {}, ratings, hostData, compactRepositories);\n            } catch (error) {\n                window.alert(`Cannot get adapters info: ${error}`);\n            }\n        }\n    }\n\n    toggleCategory(category: string): void {\n        this.setState(oldState => {\n            const categoriesExpanded = oldState.categoriesExpanded;\n            categoriesExpanded[category] = !categoriesExpanded[category];\n\n            (((window as any)._localStorage as Storage) || window.localStorage).setItem(\n                'Adapters.expandedCategories',\n                JSON.stringify(categoriesExpanded),\n            );\n\n            return { categoriesExpanded };\n        });\n    }\n\n    rightDependencies = (adapterName: string): boolean => {\n        const adapter = this.state.repository[adapterName];\n        let result = true;\n\n        if (adapter) {\n            const dependencies = adapter.dependencies;\n            const nodeVersion = adapter.node;\n\n            if (dependencies) {\n                if (dependencies instanceof Array) {\n                    dependencies.forEach(dependency => {\n                        const checkVersion = typeof dependency !== 'string';\n                        const keys = Object.keys(dependency);\n                        const name = !checkVersion ? dependency : keys ? keys[0] : null;\n\n                        if (result && name) {\n                            const installed = this.state.installed[name];\n\n                            try {\n                                result = installed\n                                    ? checkVersion\n                                        ? semver.satisfies(installed.version, dependency[name], {\n                                              includePrerelease: true,\n                                          })\n                                        : true\n                                    : false;\n                            } catch {\n                                result = true;\n                            }\n                        }\n                    });\n                } else if (typeof dependencies === 'object') {\n                    // back compatibility\n                    const _deps: { [_adapterName: string]: string } = dependencies as any as {\n                        [_adapterName: string]: string;\n                    };\n                    Object.keys(_deps).forEach(_adapterName => {\n                        if (_adapterName && _deps[_adapterName] !== undefined && result) {\n                            const installed = this.state.installed[_adapterName];\n                            const checkVersion = typeof _deps[_adapterName] === 'string';\n                            try {\n                                result = installed\n                                    ? checkVersion\n                                        ? semver.satisfies(installed.version, _deps[_adapterName], {\n                                              includePrerelease: true,\n                                          })\n                                        : true\n                                    : false;\n                            } catch {\n                                result = true;\n                            }\n                        }\n                    });\n                } else {\n                    console.error(\n                        `[ADAPTERS] Invalid dependencies for ${adapterName}: ${JSON.stringify(dependencies)}`,\n                    );\n                }\n            }\n\n            if (result && nodeVersion) {\n                try {\n                    result = semver.satisfies(this.state.nodeJsVersion, nodeVersion);\n                } catch {\n                    result = true;\n                }\n            }\n        }\n\n        return result;\n    };\n\n    rightOs(adapterName: string): boolean {\n        const adapter = this.state.repository[adapterName];\n\n        if (adapter?.os) {\n            if (Array.isArray(adapter.os)) {\n                return !!adapter.os.find(hostOs => this.state.hostOs === hostOs);\n            }\n            return this.state.hostOs === adapter.os;\n        }\n\n        return true;\n    }\n\n    handleFilterChange(event: React.ChangeEvent<HTMLInputElement>): void {\n        if (this.typingTimer) {\n            clearTimeout(this.typingTimer);\n        }\n\n        this.typingTimer = setTimeout(\n            value => {\n                (((window as any)._localStorage as Storage) || window.localStorage).setItem(\n                    'Adapter.search',\n                    value || '',\n                );\n                this.typingTimer = null;\n                this.filterAdapters(value);\n            },\n            300,\n            event.target.value,\n        );\n    }\n\n    // toggleConnectionTypeFilter() {\n    //     this.setState({ filterConnectionType: !this.state.filterConnectionType });\n    // }\n\n    expandAll(): void {\n        this.setState(oldState => {\n            const categories = oldState.categories;\n            const categoriesExpanded = oldState.categoriesExpanded;\n\n            categories.forEach(category => (categoriesExpanded[category.name] = true));\n\n            (((window as any)._localStorage as Storage) || window.localStorage).setItem(\n                'Adapters.expandedCategories',\n                JSON.stringify(categoriesExpanded),\n            );\n\n            return { categoriesExpanded };\n        });\n    }\n\n    collapseAll(): void {\n        const categoriesExpanded = {};\n\n        (((window as any)._localStorage as Storage) || window.localStorage).setItem(\n            'Adapters.expandedCategories',\n            JSON.stringify(categoriesExpanded),\n        );\n\n        this.setState({ categoriesExpanded });\n    }\n\n    listTable(): void {\n        const oneListView = !this.state.oneListView;\n        if (oneListView) {\n            this.expandAll();\n        }\n        (((window as any)._localStorage as Storage) || window.localStorage).setItem(\n            'Adapters.list',\n            oneListView ? 'true' : 'false',\n        );\n        this.setState({ oneListView });\n    }\n\n    changeViewMode(): void {\n        this.cache.listOfVisibleAdapter = null;\n        const tableViewMode = !this.state.tableViewMode;\n\n        // By the list view, the filterTiles can be only 'Description A-Z' or 'Name A-Z'\n        let filterTiles = this.state.filterTiles;\n        if (tableViewMode && filterTiles !== 'Description A-Z' && filterTiles !== 'Name A-Z') {\n            filterTiles = 'Description A-Z';\n            (((window as any)._localStorage as Storage) || window.localStorage).setItem(\n                'Adapters.filterTiles',\n                filterTiles,\n            );\n        }\n\n        (((window as any)._localStorage as Storage) || window.localStorage).setItem(\n            'Adapters.viewMode',\n            tableViewMode ? 'true' : 'false',\n        );\n        this.setState({ tableViewMode, filterTiles });\n    }\n\n    changeUpdateList(): void {\n        this.cache.listOfVisibleAdapter = null;\n        const updateList = !this.state.updateList;\n        (((window as any)._localStorage as Storage) || window.localStorage).setItem(\n            'Adapters.updateList',\n            updateList ? 'true' : 'false',\n        );\n        this.setState({ updateList });\n    }\n\n    changeInstalledList(onlyInstalled?: boolean): void {\n        this.cache.listOfVisibleAdapter = null;\n        let installedList = !this.state.installedList ? 1 : this.state.installedList < 2 ? 2 : 0;\n        if (!installedList && onlyInstalled) {\n            installedList = 1;\n        }\n        (((window as any)._localStorage as Storage) || window.localStorage).setItem(\n            'Adapters.installedList',\n            JSON.stringify(installedList),\n        );\n        this.setState({ installedList });\n    }\n\n    changeFilterTiles(filterTiles: string): void {\n        this.cache.listOfVisibleAdapter = null; // rebuild cache\n        (((window as any)._localStorage as Storage) || window.localStorage).setItem(\n            'Adapters.filterTiles',\n            filterTiles,\n        );\n        this.setState({ filterTiles });\n    }\n\n    changeCategoriesTiles(categoriesTiles: string): void {\n        this.cache.listOfVisibleAdapter = null;\n        (((window as any)._localStorage as Storage) || window.localStorage).setItem(\n            'Adapters.categoriesTiles',\n            categoriesTiles,\n        );\n        this.setState({ categoriesTiles });\n    }\n\n    filterAdapters(search?: string): void {\n        search = search === undefined ? this.state.search : search;\n        search = (search || '').toLowerCase().trim();\n        let filteredList: {\n            [adapterName: string]: { exact: boolean; type: 'name' | 'desc' | 'title' | 'keywords'; start?: boolean };\n        } = {};\n        if (search) {\n            this.state.categories.forEach(category =>\n                category.adapters.forEach(name => {\n                    const adapter = this.state.repository[name];\n                    if (!adapter) {\n                        return;\n                    }\n                    let title: string | undefined;\n                    let desc: string | undefined;\n                    const titleM = adapter.titleLang || adapter.title;\n                    if (typeof titleM === 'object') {\n                        title = titleM[this.props.lang] || titleM.en;\n                    } else {\n                        title = titleM;\n                    }\n                    title = ((title || '').toString() || '').replace('ioBroker Visualisation - ', '');\n                    if (adapter.desc) {\n                        if (typeof adapter.desc === 'string') {\n                            desc = adapter.desc;\n                        } else {\n                            desc = adapter.desc[this.props.lang] || adapter.desc.en || '';\n                        }\n                    } else {\n                        desc = '';\n                    }\n\n                    if (name.includes(search)) {\n                        filteredList[name] = { exact: name === search, type: 'name', start: name.startsWith(search) };\n                    } else if (title && typeof title === 'string' && title.toLowerCase().includes(search)) {\n                        filteredList[name] = { exact: false, type: 'title' };\n                    } else if (desc && typeof desc === 'string' && desc.toLowerCase().includes(search)) {\n                        filteredList[name] = { exact: false, type: 'desc' };\n                    } else if (adapter.keywords?.find(value => value.includes(search))) {\n                        filteredList[name] = { exact: false, type: 'keywords' };\n                    }\n                }),\n            );\n        } else {\n            filteredList = null;\n        }\n\n        this.setState({ filteredList, search }, () => {\n            this.cache.listOfVisibleAdapter = null;\n            this.forceUpdate();\n        });\n    }\n\n    onHostAdapterChanged = (_events: HostAdapterEvent[]): void => {\n        // redraw\n        this.onHostAdapterTimer && clearTimeout(this.onHostAdapterTimer);\n        this.onHostAdapterTimer = setTimeout(() => {\n            this.onHostAdapterTimer = null;\n            this.cache.listOfVisibleAdapter = null;\n            this.forceUpdate();\n        }, 200);\n    };\n\n    clearAllFilters(): void {\n        (((window as any)._localStorage as Storage) || window.localStorage).removeItem('Adapter.search');\n        (((window as any)._localStorage as Storage) || window.localStorage).removeItem('Adapters.installedList');\n        (((window as any)._localStorage as Storage) || window.localStorage).removeItem('Adapters.updateList');\n        if (this.inputRef.current) {\n            this.inputRef.current.value = '';\n        }\n        this.setState(\n            {\n                filteredList: null,\n                updateList: false,\n                filterConnectionType: false,\n                installedList: 0,\n                search: '',\n            },\n            () => this.filterAdapters(),\n        );\n    }\n\n    getContext(descHidden: boolean): AdaptersContext {\n        return {\n            expertMode: this.props.expertMode,\n            t: this.t,\n            socket: this.props.socket,\n            removeUpdateAvailable: (adapterName: string) => {\n                const updateAvailable = [...this.state.updateAvailable];\n                const pos = updateAvailable.indexOf(adapterName);\n                if (pos !== -1) {\n                    updateAvailable.splice(pos, 1);\n                    this.setState({ updateAvailable });\n                }\n            },\n            toggleTranslation: this.props.toggleTranslation,\n            noTranslation: this.props.noTranslation,\n            rightDependenciesFunc: this.rightDependencies,\n            lang: this.props.lang,\n            uuid: this.uuid,\n            themeType: this.props.themeType,\n            theme: this.props.theme,\n            onUpdating: this.props.onUpdating,\n            /** Information about ALL KNOWN adapters in the ioBroker infrastructure. Repo */\n            repository: this.state.repository,\n            /** Information about all installed adapters on this host */\n            installed: this.state.installed,\n            /** Information about all installed adapters on all hosts */\n            installedGlobal: this.state.installedGlobal,\n            /** very compact information about instances */\n            compactInstances: this.state.compactInstances || {},\n            /** Information about installed adapters */\n            adapters: this.state.adapters,\n            nodeJsVersion: this.state.nodeJsVersion,\n            currentHost: this.state.currentHost,\n            /** The host ID of the admin adapter, like system.host.test */\n            adminHost: this.props.adminHost,\n            adminInstance: this.props.adminInstance,\n            /** Current selected host */\n            instancesWorker: this.props.instancesWorker,\n            hostsWorker: this.props.hostsWorker,\n            executeCommand: this.props.executeCommand,\n            /** node.js version of current host */\n            categories: this.state.categories,\n            descHidden,\n            sortPopularFirst: !this.state.tableViewMode && this.state.filterTiles === 'Popular first',\n            sortRecentlyUpdated: !this.state.tableViewMode && this.state.filterTiles === 'Recently updated',\n            isTileView: !this.state.tableViewMode,\n            updateRating: (adapter: string, rating: RatingDialogRepository) => {\n                const repository = JSON.parse(JSON.stringify(this.state.repository));\n                Object.assign(repository[adapter].rating, rating);\n                this.setState({ repository });\n            },\n            setAdminUpgradeTo: this.setAdminUpgradeTo,\n            hostAdapterWorker: this.hostAdapterWorker,\n        } as AdaptersContext;\n    }\n\n    setAdminUpgradeTo = (version: string): void => this.setState({ adminUpgradeTo: version });\n\n    buildCache(context: AdaptersContext): void {\n        this.cache.listOfVisibleAdapter = [];\n        this.cache.adapters = {};\n        const now = Date.now();\n        const textDaysAgo0 = this.t('0 %d days ago');\n        const textDaysAgo1 = this.t('1 %d days ago');\n        const textDaysAgo2 = this.t('2 %d days ago');\n        const textDaysAgo = this.t('5 %d days ago');\n\n        // get all visible adapters\n        this.state.categories\n            .filter(\n                cat =>\n                    this.state.tableViewMode ||\n                    !this.state.categoriesTiles ||\n                    this.state.categoriesTiles === 'All' ||\n                    cat.name === this.state.categoriesTiles,\n            )\n            .forEach(category =>\n                category.adapters.forEach(adapterName => {\n                    const adapter = this.state.repository[adapterName];\n\n                    if (adapter && !adapter.controller) {\n                        const connectionType = adapter.connectionType ? adapter.connectionType : '-';\n                        const updateAvailable = this.state.updateAvailable.includes(adapterName);\n                        const installed = this.state.installed[adapterName];\n\n                        let show: boolean = !this.state.filteredList || !!this.state.filteredList[adapterName];\n                        if (show && this.state.filterConnectionType) {\n                            show = connectionType === 'local';\n                        }\n                        if (show && this.state.updateList) {\n                            show = updateAvailable;\n                        }\n                        if (show && this.state.installedList) {\n                            show =\n                                this.state.installedList < 2\n                                    ? !!(installed && installed.version)\n                                    : !!(installed && installed.version && !installed.count);\n                        }\n                        if (show) {\n                            this.cache.listOfVisibleAdapter.push(adapterName);\n                            const daysAgo10 = Math.round((now - new Date(adapter.versionDate).getTime()) / 8640000);\n                            const daysAgo = Math.round(daysAgo10 / 10);\n\n                            const titleObj = adapter.titleLang || adapter.title;\n                            let title: string;\n                            if (titleObj && typeof titleObj === 'object') {\n                                title = titleObj[this.props.lang] || titleObj.en;\n                            } else {\n                                title = (titleObj as string) || adapterName;\n                            }\n                            title = ((title || '').toString() || '').replace('ioBroker Visualisation - ', '');\n\n                            let desc;\n                            if (adapter.desc) {\n                                if (typeof adapter.desc === 'string') {\n                                    desc = adapter.desc;\n                                } else {\n                                    desc = adapter.desc[this.props.lang] || adapter.desc.en || '';\n                                }\n                            } else {\n                                desc = '';\n                            }\n\n                            const _daysAgo10 = daysAgo % 100 <= 10 || daysAgo % 100 >= 20 ? daysAgo % 10 : 5;\n\n                            this.cache.adapters[adapterName] = {\n                                title,\n                                desc,\n                                image:\n                                    installed && this.state.adapters[`system.adapter.${adapterName}`]\n                                        ? `.${installed.localIcon}`\n                                        : adapter.extIcon,\n                                connectionType: adapter.connectionType ? adapter.connectionType : '-',\n                                updateAvailable: this.state.updateAvailable.includes(adapterName),\n                                rightDependencies: this.rightDependencies(adapterName),\n                                rightOs: this.rightOs(adapterName),\n                                sentry: !!adapter.plugins?.sentry,\n                                daysAgo: daysAgo10,\n                                stat: adapter.stat || 0,\n                                daysAgoText:\n                                    daysAgo || daysAgo === 0\n                                        ? daysAgo === 0\n                                            ? textDaysAgo0\n                                            : _daysAgo10 === 1\n                                              ? textDaysAgo1.replace('%d', daysAgo.toString())\n                                              : _daysAgo10 === 2 || _daysAgo10 === 3 || _daysAgo10 === 4\n                                                ? textDaysAgo2.replace('%d', daysAgo.toString())\n                                                : textDaysAgo.replace('%d', daysAgo.toString())\n                                        : '',\n                            };\n                        }\n                    }\n                }),\n            );\n\n        this.listOfVisibleAdapterLength = this.cache.listOfVisibleAdapter.length;\n\n        const sortByName = this.state.filterTiles === 'Name A-Z';\n\n        if (this.state.tableViewMode) {\n            this.state.categories.forEach(category =>\n                Adapters.sortAdapters(\n                    category.adapters,\n                    this.props.lang,\n                    this.state.installed,\n                    this.cache.adapters,\n                    sortByName,\n                ),\n            );\n        }\n\n        Adapters.sortAdapters(\n            this.cache.listOfVisibleAdapter,\n            this.props.lang,\n            this.state.installed,\n            this.cache.adapters,\n            sortByName,\n            context.sortPopularFirst,\n            context.sortRecentlyUpdated,\n            this.state.filteredList,\n        );\n\n        console.log(`[ADAPTERS] ${new Date().toISOString()} Update cache!`);\n        this.forceUpdate();\n    }\n\n    getUpdater(): JSX.Element | null {\n        if (!this.state.showUpdater) {\n            return null;\n        }\n        return (\n            <AdaptersUpdaterDialog\n                theme={this.props.theme}\n                onSetCommandRunning={commandRunning => this.props.onSetCommandRunning(commandRunning)}\n                t={this.props.t}\n                currentHost={this.state.currentHost}\n                lang={this.props.lang}\n                installed={this.state.installed}\n                repository={this.state.repository}\n                toggleTranslation={this.props.toggleTranslation}\n                noTranslation={this.props.noTranslation}\n                onClose={reload => this.setState({ showUpdater: false }, () => reload && this.updateAll(true, false))}\n                socket={this.props.socket}\n            />\n        );\n    }\n\n    getDescWidth(): number {\n        if (this.props.menuOpened) {\n            return document.body.scrollWidth - SUM - 180 + 13;\n        }\n        if (this.props.menuClosed) {\n            return document.body.scrollWidth - SUM;\n        }\n        // if (this.props.menuCompact) {\n        return document.body.scrollWidth - SUM - 50 + 13;\n    }\n\n    getStatistics(): JSX.Element | null {\n        if (this.state.showStatistics) {\n            return (\n                <Dialog\n                    open={!0}\n                    onClose={() => this.setState({ showStatistics: false })}\n                >\n                    <DialogTitle>{this.t('Statistics')}</DialogTitle>\n                    <DialogContent style={{ fontSize: 16 }}>\n                        <Box\n                            component=\"div\"\n                            sx={styles.counters}\n                        >\n                            {this.t('Total adapters')}:{' '}\n                            <span style={{ paddingLeft: 6, fontWeight: 'bold' }}>{this.allAdapters}</span>\n                        </Box>\n                        <Box\n                            component=\"div\"\n                            sx={styles.counters}\n                        >\n                            {this.t('Installed adapters')}:{' '}\n                            <span style={{ paddingLeft: 6, fontWeight: 'bold' }}>{this.installedAdapters}</span>\n                        </Box>\n                        <Box\n                            component=\"div\"\n                            sx={styles.counters}\n                        >\n                            {this.t('Last month updated adapters')}:{' '}\n                            <span style={{ paddingLeft: 6, fontWeight: 'bold' }}>{this.recentUpdatedAdapters}</span>\n                        </Box>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button\n                            variant=\"contained\"\n                            onClick={() => this.setState({ showStatistics: false })}\n                            color=\"primary\"\n                            autoFocus\n                            startIcon={<CloseIcon />}\n                        >\n                            {this.props.t('Close')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }\n        return null;\n    }\n\n    renderGitHubInstallDialog(context: AdaptersContext): JSX.Element | null {\n        if (!this.state.gitHubInstallDialog) {\n            return null;\n        }\n\n        return (\n            <GitHubInstallDialog\n                t={this.t}\n                categories={this.state.categories}\n                installed={this.state.installedGlobal}\n                upload={adapterName =>\n                    this.props.executeCommand(`upload ${adapterName}${this.props.expertMode ? ' --debug' : ''}`)\n                }\n                installFromUrl={(adapterName, debug, customUrl) =>\n                    this.addInstance({\n                        adapterName,\n                        debug,\n                        customUrl,\n                        context,\n                    })\n                }\n                repository={this.state.repository}\n                onClose={() => {\n                    this.setState({ gitHubInstallDialog: false });\n                }}\n            />\n        );\n    }\n\n    renderHeader(): JSX.Element {\n        let updateAllButtonAvailable =\n            !this.props.commandRunning &&\n            !!this.props.ready &&\n            !!this.state.updateList &&\n            this.state.updateAvailable.length > 1;\n\n        // it is not possible to update admin in bulk\n        if (\n            updateAllButtonAvailable &&\n            this.state.updateAvailable.length === 2 &&\n            this.state.updateAvailable.includes('admin')\n        ) {\n            updateAllButtonAvailable = false;\n        }\n\n        return (\n            <TabHeader>\n                <Tooltip\n                    title={this.t('Change view mode')}\n                    slotProps={{ popper: { sx: styles.tooltip } }}\n                >\n                    <IconButton\n                        size=\"large\"\n                        onClick={() => this.changeViewMode()}\n                    >\n                        {this.state.tableViewMode ? <ViewModuleIcon /> : <ViewListIcon />}\n                    </IconButton>\n                </Tooltip>\n                <Tooltip\n                    title={this.t('Check adapter for updates')}\n                    slotProps={{ popper: { sx: styles.tooltip } }}\n                >\n                    <IconButton\n                        size=\"large\"\n                        onClick={() => this.updateAll(true, true)}\n                    >\n                        <RefreshIcon />\n                    </IconButton>\n                </Tooltip>\n                {this.state.tableViewMode && !this.state.oneListView && (\n                    <Tooltip\n                        title={this.t('expand all')}\n                        slotProps={{ popper: { sx: styles.tooltip } }}\n                    >\n                        <IconButton\n                            size=\"large\"\n                            onClick={() => this.expandAll()}\n                        >\n                            <FolderOpenIcon />\n                        </IconButton>\n                    </Tooltip>\n                )}\n                {this.state.tableViewMode && !this.state.oneListView && (\n                    <Tooltip\n                        title={this.t('collapse all')}\n                        slotProps={{ popper: { sx: styles.tooltip } }}\n                    >\n                        <IconButton\n                            size=\"large\"\n                            onClick={() => this.collapseAll()}\n                        >\n                            <FolderIcon />\n                        </IconButton>\n                    </Tooltip>\n                )}\n                {this.state.tableViewMode && (\n                    <Tooltip\n                        title={this.t('list')}\n                        slotProps={{ popper: { sx: styles.tooltip } }}\n                    >\n                        <IconButton\n                            size=\"large\"\n                            onClick={() => this.listTable()}\n                        >\n                            <ListIcon color={this.state.oneListView ? 'primary' : 'inherit'} />\n                        </IconButton>\n                    </Tooltip>\n                )}\n\n                {/* <Tooltip title={this.t('Filter local connection type')} slotProps={{ popper: { sx: styles.tooltip } }}>\n                <IconButton size=\"large\" onClick={() => this.toggleConnectionTypeFilter()}>\n                    <CloudOffIcon color={this.state.filterConnectionType ? 'primary' : 'inherit'} />\n                </IconButton>\n             </Tooltip> */}\n                {this.state.updateList ? (\n                    <IconButton\n                        size=\"large\"\n                        onClick={() => this.changeInstalledList(true)}\n                    >\n                        <StarIcon\n                            color=\"primary\"\n                            style={{ opacity: 0.3, color: this.state.installedList === 2 ? 'red' : undefined }}\n                        />\n                    </IconButton>\n                ) : (\n                    <Tooltip\n                        slotProps={{ popper: { sx: styles.tooltip } }}\n                        title={this.t(\n                            !this.state.installedList\n                                ? 'Show only installed'\n                                : this.state.installedList === 1\n                                  ? 'Showed only installed adapters'\n                                  : 'Showed only installed adapters without instance.',\n                        )}\n                    >\n                        <IconButton\n                            size=\"large\"\n                            onClick={() => this.changeInstalledList()}\n                        >\n                            <StarIcon\n                                style={this.state.installedList === 2 ? { color: 'red' } : null}\n                                color={this.state.installedList === 1 ? 'primary' : 'inherit'}\n                            />\n                        </IconButton>\n                    </Tooltip>\n                )}\n                <IsVisible\n                    config={this.props.adminGuiConfig.admin}\n                    name=\"admin.adapters.filterUpdates\"\n                >\n                    <Tooltip\n                        title={this.t('Filter adapter with updates')}\n                        slotProps={{ popper: { sx: styles.tooltip } }}\n                    >\n                        <IconButton\n                            size=\"large\"\n                            onClick={() => this.changeUpdateList()}\n                        >\n                            <UpdateIcon color={this.state.updateList ? 'primary' : 'inherit'} />\n                        </IconButton>\n                    </Tooltip>\n                </IsVisible>\n                {updateAllButtonAvailable && (\n                    <Tooltip\n                        title={this.t('Update all adapters')}\n                        slotProps={{ popper: { sx: styles.tooltip } }}\n                    >\n                        <IconButton\n                            size=\"large\"\n                            onClick={() => this.setState({ showUpdater: true })}\n                            sx={styles.updateAllButton}\n                        >\n                            <UpdateIcon />\n                            <UpdateIcon className=\"admin-update-second-icon\" />\n                        </IconButton>\n                    </Tooltip>\n                )}\n\n                {this.props.expertMode && this.props.adminGuiConfig.admin?.adapters.gitHubInstall !== false && (\n                    <Tooltip\n                        title={this.t('Install from custom URL')}\n                        slotProps={{ popper: { sx: styles.tooltip } }}\n                    >\n                        <IconButton\n                            size=\"large\"\n                            onClick={() => this.setState({ gitHubInstallDialog: true })}\n                        >\n                            <GithubIcon />\n                        </IconButton>\n                    </Tooltip>\n                )}\n                <div style={styles.grow} />\n                <TextField\n                    variant=\"standard\"\n                    inputRef={this.inputRef}\n                    label={this.t('Filter by name')}\n                    defaultValue={this.state.search}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => this.handleFilterChange(event)}\n                    slotProps={{\n                        input: {\n                            endAdornment: this.state.search ? (\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        size=\"small\"\n                                        onClick={() => {\n                                            (\n                                                ((window as any)._localStorage as Storage) || window.localStorage\n                                            ).removeItem('Adapter.search');\n                                            this.inputRef.current.value = '';\n                                            this.setState({ search: '' }, () => this.filterAdapters());\n                                        }}\n                                    >\n                                        <CloseIcon />\n                                    </IconButton>\n                                </InputAdornment>\n                            ) : null,\n                        },\n                    }}\n                />\n\n                {!this.state.tableViewMode && (\n                    <CustomSelectButton\n                        t={this.t}\n                        icons\n                        contained={this.state.categoriesTiles !== 'All'}\n                        translateSuffix=\"_group\"\n                        arrayItem={[{ name: 'All' }, ...this.state.categories]}\n                        onClick={value => this.changeCategoriesTiles(value as string)}\n                        value={this.state.categoriesTiles}\n                    />\n                )}\n                <CustomSelectButton\n                    t={this.t}\n                    arrayItem={this.state.tableViewMode ? FILTERS.filter(item => !item.notByList) : FILTERS}\n                    onClick={value => this.changeFilterTiles(value as string)}\n                    value={this.state.filterTiles}\n                />\n                <div style={styles.grow} />\n                <IsVisible\n                    config={this.props.adminGuiConfig.admin}\n                    name=\"admin.adapters.statistics\"\n                >\n                    <Box\n                        component=\"div\"\n                        sx={Utils.getStyle(this.props.theme, styles.infoAdapters, {\n                            display: { sm: 'none', md: 'inline-block' },\n                        })}\n                        onClick={() => this.setState({ showStatistics: true })}\n                    >\n                        <Box\n                            component=\"div\"\n                            sx={{ ...styles.counters, ...styles.greenText }}\n                        >\n                            {this.t('Selected adapters')}\n                            <div ref={this.countRef} />\n                        </Box>\n                        <Box\n                            component=\"div\"\n                            sx={styles.counters}\n                        >\n                            {this.t('Total adapters')}:<div>{this.allAdapters}</div>\n                        </Box>\n                        <Box\n                            component=\"div\"\n                            sx={styles.counters}\n                        >\n                            {this.t('Installed adapters')}:<div>{this.installedAdapters}</div>\n                        </Box>\n                        <Box\n                            component=\"div\"\n                            sx={styles.counters}\n                        >\n                            {this.t('Last month updated adapters')}:<div>{this.recentUpdatedAdapters}</div>\n                        </Box>\n                    </Box>\n                </IsVisible>\n            </TabHeader>\n        );\n    }\n\n    /**\n     * Perform the Admin Upgrade via Webserver\n     * This allows showing UI progress even admin is down\n     */\n    renderWebserverUpgrade(): JSX.Element | null {\n        if (!this.state.adminUpgradeTo) {\n            return null;\n        }\n\n        return (\n            <AdminUpdater\n                socket={this.props.socket}\n                themeType={this.props.themeType}\n                host={this.props.adminHost}\n                onClose={() => {\n                    console.log('Close dialog');\n                    this.setState({ adminUpgradeTo: '', showDialog: false });\n                }}\n                version={this.state.adminUpgradeTo}\n                adminInstance={this.props.adminInstance}\n                onUpdating={isUpdating => {\n                    this.props.onUpdating(isUpdating);\n                }}\n                currentAdminVersion={this.props.currentAdminVersion}\n            />\n        );\n    }\n\n    render(): JSX.Element {\n        if (!this.state.init) {\n            return <LinearProgress />;\n        }\n\n        // update adapters because the repository could be changed\n        if (this.state.triggerUpdate !== this.props.triggerUpdate) {\n            setTimeout(() => {\n                this.setState({ triggerUpdate: this.props.triggerUpdate }, () => this.updateAll(true));\n            }, 100);\n        }\n\n        // if the current host changed\n        if (\n            this.props.currentHost !== this.state.currentHost ||\n            this.props.forceUpdateAdapters !== this.state.forceUpdateAdapters\n        ) {\n            this.hostsTimer =\n                this.hostsTimer ||\n                setTimeout(() => {\n                    this.hostsTimer = null;\n                    this.setState(\n                        {\n                            currentHost: this.props.currentHost,\n                            forceUpdateAdapters: this.props.forceUpdateAdapters,\n                        },\n                        async () => {\n                            if (this.hostAdapterWorker.getHost() !== this.props.currentHost) {\n                                this.hostAdapterWorker.destroy();\n                                this.hostAdapterWorker = new HostAdapterWorker(\n                                    this.props.socket,\n                                    this.props.currentHost,\n                                );\n                                this.hostAdapterWorker.registerHandler(this.onHostAdapterChanged);\n                                await this.hostAdapterWorker.getObjects();\n                            }\n                            await this.updateAll(false, false, true);\n                        },\n                    );\n                }, 200);\n        }\n\n        // fast check if active repo is stable\n        let stableRepo = Utils.isStableRepository(this.props.systemConfig.common.activeRepo);\n\n        // if repositories are available\n        const repositories: Record<string, ioBroker.RepositoryInformation> =\n            this.state.compactRepositories?.native?.repositories;\n        if (repositories) {\n            // new style with multiple active repositories\n            if (this.props.systemConfig.common.activeRepo) {\n                if (Array.isArray(this.props.systemConfig.common.activeRepo)) {\n                    // if any active repo is not stable, show warning\n                    stableRepo = this.props.systemConfig.common.activeRepo.every(\n                        repo => repo.toLowerCase().startsWith('stable') || repositories[repo]?.json?._repoInfo?.stable,\n                    );\n                } else if (typeof this.props.systemConfig.common.activeRepo === 'string') {\n                    // if active repo is not stable, show warning\n                    stableRepo =\n                        // @ts-expect-error deprecated, but could still come\n                        this.props.systemConfig.common.activeRepo.toLowerCase().startsWith('stable') ||\n                        repositories[this.props.systemConfig.common.activeRepo]?.json?._repoInfo?.stable;\n                }\n            }\n        }\n\n        let repoName: string;\n        if (!stableRepo) {\n            repoName = Array.isArray(this.props.systemConfig.common.activeRepo)\n                ? this.props.systemConfig.common.activeRepo.join(', ')\n                : this.props.systemConfig.common.activeRepo;\n\n            // old style with just one active repository\n            if (typeof this.props.systemConfig.common.activeRepo === 'string') {\n                const repoInfo =\n                    repositories && repositories[this.props.systemConfig.common.activeRepo]?.json?._repoInfo;\n\n                if (repoInfo?.name) {\n                    if (repoInfo.name && typeof repoInfo.name === 'object') {\n                        repoName = repoInfo.name[this.props.lang] || repoInfo.name.en;\n                    } else {\n                        // @ts-expect-error deprecated\n                        repoName = repoInfo.name as string;\n                    }\n                }\n            } else if (\n                // new style with multiple active repositories\n                this.props.systemConfig.common.activeRepo &&\n                typeof this.props.systemConfig.common.activeRepo !== 'string'\n            ) {\n                repoName = this.props.systemConfig.common.activeRepo\n                    .map(repo => {\n                        const repoInfo = repositories && repositories[repo]?.json?._repoInfo;\n                        if (repoInfo?.name) {\n                            if (repoInfo.name && typeof repoInfo.name === 'object') {\n                                return repoInfo.name[this.props.lang] || repoInfo.name.en;\n                            }\n                            // @ts-expect-error deprecated\n                            return repoInfo.name as string;\n                        }\n                        return repo;\n                    })\n                    .join(', ');\n            }\n        }\n\n        const context = this.getContext(this.state.descWidth < 50);\n\n        if (!this.cache.listOfVisibleAdapter) {\n            this.buildCacheTimer =\n                this.buildCacheTimer ||\n                setTimeout(() => {\n                    this.buildCacheTimer = null;\n                    this.buildCache(context);\n                }, 0);\n        }\n\n        return (\n            <TabContainer>\n                {this.state.update && (\n                    <Grid2>\n                        <LinearProgress />\n                    </Grid2>\n                )}\n\n                {this.renderHeader()}\n\n                <AdaptersList\n                    stableRepo={stableRepo}\n                    repoName={repoName}\n                    context={context}\n                    systemConfig={this.props.systemConfig}\n                    tableViewMode={this.state.tableViewMode}\n                    oneListView={this.state.oneListView}\n                    update={this.state.update}\n                    cachedAdapters={this.cache.adapters}\n                    categories={this.state.categories}\n                    categoriesExpanded={this.state.categoriesExpanded}\n                    listOfVisibleAdapter={this.cache.listOfVisibleAdapter}\n                    toggleCategory={category => this.toggleCategory(category)}\n                    clearAllFilters={() => this.clearAllFilters()}\n                    descWidth={this.state.descWidth}\n                    sortByName={this.state.filterTiles === 'Name A-Z'}\n                    sortPopularFirst={context.sortPopularFirst}\n                    sortRecentlyUpdated={context.sortRecentlyUpdated}\n                    commandRunning={this.props.commandRunning}\n                />\n\n                {this.getUpdater()}\n                {this.getStatistics()}\n                {this.renderSlowConnectionWarning()}\n                {this.renderGitHubInstallDialog(context)}\n                {this.renderWebserverUpgrade()}\n                {this.renderDialogs(context)}\n            </TabContainer>\n        );\n    }\n}\n\nexport default Adapters;\n"],"names":["styles","button","marginLeft","marginRight","icon","_ref","arrayItem","title","onClick","value","contained","buttonIcon","icons","t","translateSuffix","noTranslation","anchorEl","setAnchorEl","useState","_jsxs","_Fragment","children","_jsx","Tooltip","slotProps","popper","sx","pointerEvents","Button","style","variant","color","e","currentTarget","MaterialDynamicIcon","iconName","Menu","keepMounted","open","Boolean","onClose","map","_ref2","idx","name","MenuItem","selected","disabled","className","placeContent","ICON_CACHE","objIcon","All","AllInclusive","messaging","Message","communication","WifiTethering","general","Apps","logic","VpnKey","alarm","NotificationsActive","SystemUpdateAlt","EmojiSymbols","multimedia","PermMedia","network","SettingsEthernet","storage","Storage","visualization","Visibility","SettingsBrightness","DateRange","energy","BatteryChargingFull","garden","FilterVintage","geoposition","LocationOn","hardware","Phonelink","health","Favorite","household","House","infrastructure","Apartment","lighting","EmojiObjects","protocols","DialerSip","utility","PhonelinkSetup","vehicle","AirportShuttle","BubbleChart","Widgets","weather","Brightness6","metering","LinearScale","adapter","socket","url","setUrl","useEffect","Promise","getObject","then","obj","_obj$common","common","src","alt","Element","Help","smallAvatar","width","height","listItem","theme","mb","background","palette","pl","toVersion","mode","fontWeight","ml","updateDone","opacity","minWidthCss","minWidth","wrapperButton","typography","paddingRight","versions","display","closeButton","position","right","top","grey","languageButton","languageButtonActive","primary","main","versionHeader","borderRadius","AdaptersUpdater","Component","constructor","props","super","updateAvailable","initialVersions","currentRef","current","this","detectUpdates","forEach","installed","version","state","showNews","React","onUpdateSelected","isUpdateAvailable","options","oldVersion","newVersion","semver","console","warn","Object","keys","repository","_installed","ignoreVersion","checkCondition","messages","log","push","sort","getNews","adapterObj","news","en","lang","renderOneAdapter","checked","includes","finished","inProcess","image","localIcon","ListItem","dense","Utils","getStyle","updated","ref","secondaryAction","stopped","CircularProgress","Checkbox","edge","tabIndex","disableRipple","pos","indexOf","splice","ListItemIcon","Avatar","ListItemText","item","join","secondary","Box","component","IconButton","I18n","setState","fromVersion","size","InfoIcon","getReactNews","result","split","line","trim","replace","filter","Grid2","Typography","index","renderShowNews","Dialog","DialogTitle","CloseIcon","getLanguage","toggleTranslation","undefined","LanguageIcon","DialogContent","dividers","container","direction","spacing","wrap","length","gutterBottom","DialogActions","startIcon","render","setTimeout","_this$currentRef$curr","scrollIntoView","List","root","dialogRoot","wrapperHead","justifyContent","checkbox","appBar","flexWrap","bottom","overflow","content","p","AdaptersUpdaterDialog","onAdapterFinished","processList","debug","window","_localStorage","localStorage","getItem","stopOnError","closeOnFinished","currentVersion","updateAdapter","cb","onStartUpdate","onSetCommandRunning","_this$props$repositor","updateAdapters","shift","maxWidth","fullWidth","scroll","id","indeterminate","Command","noSpacing","ready","host","currentHost","cmd","onFinished","errorFunc","Toolbar","disableGutters","FormControlLabel","control","onChange","setItem","label","autoFocus","CheckIcon","CancelIcon","HostAdapterWorker","GenericWorker","prefix","adapterName","objects","getHost","a11yProps","backgroundColor","paper","tabPaper","padding","mt","fontSize","warningText","noteText","marginTop","errorTextNoGit","listIcon","listIconWithMargin","tabSelected","contrastText","GitHubInstallDialog","customHistory","customHistoryStr","_localstorage","JSON","parse","autoCompleteValue","currentTab","renderNpm","Paper","alignItems","target","SmsIcon","Autocomplete","_","newValue","getList","getOptionLabel","option","_option$name","renderInput","params","_this$state$autoCompl","_params","InputProps","startAdornment","InputAdornment","Icon","TextField","renderOption","_option$name2","mr","flexShrink","renderGitHub","getOptionDisabled","nogit","_option$name3","_option$name4","_this$state$autoCompl2","renderCustom","onInputChange","flexGrow","stopPropagation","it","stringify","Delete","freeSolo","onKeyUp","event","key","unshift","pop","installFromUrl","helperText","adapters","arr","i","arrayFlat","categories","category","el","controller","parts","extIcon","meta","readme","toString","titleLang","a","b","_this$state$autoCompl3","closeInit","AppBar","Tabs","_e","newTab","indicatorColor","Tab","wrapped","GithubIcon","UrlIcon","async","_this$state$autoCompl4","_url","_this$state$autoCompl5","fullAdapterName","upload","error","message","formControl","pr","messageText","messageColor_warn","messageColor_error","messageColor_info","messageTitle_warn","messageTitle_error","messageTitle_info","deps","m","AddInstanceDialog","instanceNumbers","adapterObject","instances","componentDidMount","instancesWorker","getObjects","_instances$id","_instances$id$common","substring","lastIndexOf","getAvailableInstances","checkDependencies","dependencies","arguments","array","installedVersion","rightVersion","getText","text","renderOneMessage","level","link","focus","IconWeb","linkText","renderMessages","marginBottom","checkDeps","expertMode","HostSelectors","tooltip","hostsWorker","setCurrentHost","hostName","hostId","onHostChange","FormControl","InputLabel","Select","labelId","currentInstance","onInstanceChange","AddIcon","extractUrlLink","adapterRepo","_adapterRepo$licenseI","licenseInformation","licenseUrl","AdapterInstallDialog","showDialog","showLicenseDialog","addInstanceHostName","addInstanceId","addInstanceDialog","renderLicenseDialog","context","LicenseDialog","licenseType","addInstance","catch","alert","customUrl","compactInstances","instance","resolve","reject","executeCommand","exitCode","Error","getDependencies","_adapter$dependencies","_adapter$globalDepend","Array","isArray","globalDependencies","nodeVersion","node","dependency","entry","checkVersion","includePrerelease","installedGlobal","nodeJsVersion","renderAddInstanceDialog","onAddInstance","_adapter$licenseInfor","license","renderDialogs","nameDiv","categoryName","cursor","green","blue","marginRight5","installedCount","TableRow","hover","TableCell","Grid","onToggle","expanded","ExpandMoreIcon","ChevronRightIcon","colSpan","descHidden","count","rating","listRating","listTime","fontStyle","list","listOwn","dark","listTitle","pt","pb","textAlign","languageFilter","ratingTextControl","ratingLanguageControl","noComments","commentCount","float","infoText","infoTextContainer","paddingBottom","gap","LANGUAGES","RatingDialog","ratingNumber","ratingComment","votings","ratingLang","filterLang","commentsByLanguage","fetch","uuid","res","json","ts","comments","comment","r","setAdapterRating","method","headers","redirect","body","update","renderInfoText","renderComments","_this$state$votings","found","find","disablePadding","ListItemAvatar","Rating","readOnly","defaultValue","Date","toLocaleString","_this$props$currentRa","_this$props$currentRa2","_this$props$currentRa3","currentRating","_event","input","endAdornment","htmlInput","maxLength","paddingTop","toLocaleDateString","_item","VoteIcon","AdapterDeletionDialog","deleteCustom","deleteCustomSupported","checkFeatureSupported","supportCustoms","ICONS","none","HorizontalRule","patch","KeyboardDoubleArrowUp","minor","North","major","VerticalAlignTop","AutoUpgradeConfigDialog","currentSavedPolicy","policy","repositories","supported","getConfiguredRepositories","getCurrentAutoUpgradeSetting","_sysConfig$common","sysConfig","adapterAutoUpgrade","activeRepos","entries","active","repoName","getAdapterId","automaticUpgrade","save","setObject","IsVisible","AUTO_UPGRADE_SETTINGS","AUTO_UPGRADE_OPTIONS_MAPPING","InfoBox","type","Save","genericStyles","hidden","buttonUpdate","border","transition","buttonUpdateIcon","classPoll","classPush","classAssumption","transform","marginLeft5","ratingSet","sentry","objectFit","wrongDependencies","red","header","modalDialog","overflowY","currentVersionText","containerVersion","containerSpecificVersion","versionWarn","amber","cardContentFlexBetween","cardContentFlex","AdapterGeneric","assign","autoUpgradeDialogOpen","showUpdateDialog","adapterDeletionDialog","adapterInstallSpecificVersion","showInstallVersion","showSetRating","renderImage","imageProps","other","img","backgroundImage","onError","onerror","renderAddInstanceButton","allowAdapterInstall","commandRunning","cached","rightOs","renderAutoUpgradeButton","_adapterObj$common","hostAdapterWorker","autoUpgrade","KeyboardArrowUp","renderReadmeButton","allowAdapterReadme","openInfoDialog","HelpIcon","renderRating","_this$props$context$r","_this$props$context$r2","_this$props$context$r3","allowAdapterRating","isTileView","sortPopularFirst","sortRecentlyUpdated","stat","precision","renderConnectionType","_this$props$context$r4","connectionType","CloudIcon","CloudOffIcon","renderDataSource","_this$props$context$r5","dataSource","ArrowUpwardIcon","ArrowDownwardIcon","RemoveIcon","renderLicenseInfo","_adapter$licenseInfor2","_adapter$licenseInfor3","_adapter$licenseInfor4","Link","href","rel","MonetizationOn","renderSentryInfo","_this$props$context$r6","_this$props$context$r7","plugins","CardMedia","sentryIcon","renderVersion","allowAdapterUpdate","rightDependencies","RefreshIcon","renderInstalledVersion","isRow","installedFrom","enabledCount","enabled","startsWith","GitHubIcon","renderUploadButton","onUpload","PublishIcon","renderDeleteButton","allowAdapterDelete","DeleteForeverIcon","renderInstallSpecificVersionButton","AddToPhotosIcon","renderRebuildButton","rebuild","BuildIcon","renderAutoUpdateDialog","adminHost","renderUpdateAdapterDialog","_this$props$context$i","AdapterUpdateDialog","rightDependenciesFunc","onUpdate","onIgnore","_id","removeUpdateAvailable","formatNews","renderAdapterInstallVersion","CustomModal","applyButton","LinkIcon","Card","CardContent","renderSetRatingDialog","updateRating","renderAdapterDeletionDialog","delete","_adapter$docs","docs","AdminUtils","getDocsLinkForAdapter","all","_adapter$licenseInfor5","setAdminUpgradeTo","minHeight","default","boxShadow","flexDirection","imageBlock","margin","zIndex","left","backgroundSize","fab","greenText","success","collapse","close","footerBlock","versionDate","alignSelf","verticalAlign","adapterWithAgo","description","cardContent","cardContentDiv","cardContent2","cardMargin10","availableVersion","curdContentFlexCenter","openCollapse","renderInfoCard","desc","renderCardMedia","available","daysAgoText","Fab","MoreVertIcon","renderCardContent","paddingNone","flex","nameCell","wordWrap","WIDTHS","emptyBlock","install","SUM","reduce","s","containerNotFullHeight","containerFullHeight","table","tableLayout","whiteSpace","textOverflow","viewModeDiv","flexFlow","AdaptersList","lastRenderCounter","descWidth","systemConfig","tableViewMode","oneListView","categoriesExpanded","cachedAdapters","sortByName","renderCounter","listOfVisibleAdapter","getRow","AdapterRow","getRows","LinearProgress","rows","rest","Fragment","AdapterCategoryRow","translation","toggleCategory","clearAllFilters","getTiles","items","_this$props$context$i2","AdapterTile","flexBasis","renderTileView","stableRepo","marginX","renderTableView","TabContent","TableContainer","Table","stickyHeader","TableHead","BUTTONS_WIDTH","TableBody","getDerivedStateFromProps","changed","shouldComponentUpdate","nextProps","nextState","_this$props$systemCon","_this$props$systemCon2","activeRepo","AdminUpdater","updating","interval","startTimeout","textareaRef","response","starting","upAgain","location","protocol","setUpdating","onUpdating","getWebserverParams","adminInstance","useHttps","native","secure","port","certPrivateName","certPrivate","certPublicName","certPublic","currentAdminVersion","upgradeAdapterWithWebserver","setInterval","checkStatus","componentWillUnmount","clearInterval","clearTimeout","running","stderr","stdout","plainBody","endsWith","waitForAdapterStart","scrollTop","scrollHeight","_this$state$response","_this$state$response3","_this$state$response4","_this$state$response5","_this$state$response6","reason","resize","themeType","boxSizing","fontFamily","_this$state$response2","reload","ReloadIcon","grow","updateAllButton","counters","infoAdapters","FILTERS","notByList","Adapters","inputRef","countRef","wordCache","cache","listOfVisibleAdapterLength","allAdapters","installedAdapters","recentUpdatedAdapters","buildCacheTimer","updateTimeout","typingTimer","hostsTimer","onHostAdapterTimer","tempAdapters","tempInstalled","tempInstances","translate","word","arg1","arg2","onAdaptersChanged","events","match","adminTab","attr","analyseInstalled","installedLocal","calculateInfo","_deps","_adapterName","onHostAdapterChanged","_events","forceUpdate","adminUpgradeTo","lastUpdate","hostData","compactRepositories","hostOs","init","filterConnectionType","search","updateList","installedList","categoriesTiles","filterTiles","gitHubInstallDialog","filteredList","showUpdater","showStatistics","readTimeoutMs","SlowConnectionWarningDialogClass","getReadTimeoutMs","showSlowConnectionWarning","forceUpdateAdapters","triggerUpdate","ratings","createRef","renderSlowConnectionWarning","SlowConnectionWarningDialog","updateAll","registerHandler","filterAdapters","adaptersWorker","bigUpdate","indicateUpdate","getAdapters","getAdaptersInfo","componentDidUpdate","getDescWidth","innerHTML","unregisterHandler","destroy","repositoryEntry","getInstalled","hosts","getHosts","alive","getState","val","isForceUpdate","getRepository","repo","getWordVotes","votes","v","getAdapterTitle","titleObj","toLowerCase","sortAdapters","titles","daysAgo","exact","_compactRepositories","_hostData","_hostData2","os","categoriesSorted","_adapters$adapterName","_adapters$adapterName2","now","_ratings","_adapter$rating","keywords","c","installedInGroup","Math","round","getTime","categoryType","_this$props$adminGuiC","getHostInfo","adminGuiConfig","admin","_ratings2","getRatings","getCompactInstances","getCompactSystemRepositories","oldState","handleFilterChange","expandAll","collapseAll","listTable","changeViewMode","changeUpdateList","changeInstalledList","onlyInstalled","changeFilterTiles","changeCategoriesTiles","_adapter$keywords","titleM","start","removeItem","getContext","buildCache","textDaysAgo0","textDaysAgo1","textDaysAgo2","textDaysAgo","cat","show","_adapter$plugins","daysAgo10","_daysAgo10","toISOString","getUpdater","menuOpened","document","scrollWidth","menuClosed","getStatistics","paddingLeft","renderGitHubInstallDialog","renderHeader","_this$props$adminGuiC2","updateAllButtonAvailable","TabHeader","ViewModuleIcon","ViewListIcon","FolderOpenIcon","FolderIcon","ListIcon","StarIcon","config","UpdateIcon","gitHubInstall","CustomSelectButton","sm","md","renderWebserverUpgrade","isUpdating","_this$state$compactRe","_this$state$compactRe2","isStableRepository","every","_repositories$repo","_repositories$repo$js","_repositories$repo$js2","_repoInfo","stable","_repositories$this$pr","_repositories$this$pr2","_repositories$this$pr3","_repositories$this$pr4","_repositories$this$pr5","repoInfo","_repositories$repo2","_repositories$repo2$j","TabContainer"],"sourceRoot":""}