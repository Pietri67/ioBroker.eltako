{"version":3,"file":"static/js/5503.a399bea4.chunk.js","mappings":"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","sources":["../../../../node_modules/@mui/material/colors/amber.js","../../../../node_modules/@mui/material/colors/blueGrey.js","../../../../node_modules/@mui/material/styles/ThemeProviderNoVars.js","../../../../node_modules/@mui/material/styles/ThemeProvider.js","../../../../node_modules/@mui/system/esm/InitColorSchemeScript/InitColorSchemeScript.js","../../../../node_modules/@mui/system/esm/cssVars/useCurrentColorScheme.js","../../../../node_modules/@mui/material/InitColorSchemeScript/InitColorSchemeScript.js","../../../../node_modules/@mui/material/styles/ThemeProviderWithVars.js","../../../../node_modules/@mui/system/esm/cssVars/createCssVarsProvider.js","../../../../node_modules/@mui/private-theming/useTheme/ThemeContext.js","../../../../node_modules/@mui/private-theming/useTheme/useTheme.js","../../../../node_modules/@mui/styled-engine/GlobalStyles/GlobalStyles.js","../../../../node_modules/@mui/styled-engine/StyledEngineProvider/StyledEngineProvider.js","../../../../node_modules/@mui/system/esm/DefaultPropsProvider/DefaultPropsProvider.js","../../../../node_modules/@mui/private-theming/ThemeProvider/nested.js","../../../../node_modules/@mui/private-theming/ThemeProvider/ThemeProvider.js","../../../../node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js","../../../../node_modules/@mui/system/esm/useThemeWithoutDefault/useThemeWithoutDefault.js","../../../../node_modules/@mui/utils/esm/resolveProps/resolveProps.js","../../../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../../../node_modules/react/jsx-runtime.js"],"sourcesContent":["const amber = {\n  50: '#fff8e1',\n  100: '#ffecb3',\n  200: '#ffe082',\n  300: '#ffd54f',\n  400: '#ffca28',\n  500: '#ffc107',\n  600: '#ffb300',\n  700: '#ffa000',\n  800: '#ff8f00',\n  900: '#ff6f00',\n  A100: '#ffe57f',\n  A200: '#ffd740',\n  A400: '#ffc400',\n  A700: '#ffab00'\n};\nexport default amber;","const blueGrey = {\n  50: '#eceff1',\n  100: '#cfd8dc',\n  200: '#b0bec5',\n  300: '#90a4ae',\n  400: '#78909c',\n  500: '#607d8b',\n  600: '#546e7a',\n  700: '#455a64',\n  800: '#37474f',\n  900: '#263238',\n  A100: '#cfd8dc',\n  A200: '#b0bec5',\n  A400: '#78909c',\n  A700: '#455a64'\n};\nexport default blueGrey;","'use client';\n\nimport * as React from 'react';\nimport { ThemeProvider as SystemThemeProvider } from '@mui/system';\nimport THEME_ID from \"./identifier.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ThemeProviderNoVars({\n  theme: themeInput,\n  ...props\n}) {\n  const scopedTheme = THEME_ID in themeInput ? themeInput[THEME_ID] : undefined;\n  return /*#__PURE__*/_jsx(SystemThemeProvider, {\n    ...props,\n    themeId: scopedTheme ? THEME_ID : undefined,\n    theme: scopedTheme || themeInput\n  });\n}","'use client';\n\nimport * as React from 'react';\nimport ThemeProviderNoVars from \"./ThemeProviderNoVars.js\";\nimport { CssVarsProvider } from \"./ThemeProviderWithVars.js\";\nimport THEME_ID from \"./identifier.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ThemeProvider({\n  theme,\n  ...props\n}) {\n  if (typeof theme === 'function') {\n    return /*#__PURE__*/_jsx(ThemeProviderNoVars, {\n      theme: theme,\n      ...props\n    });\n  }\n  const muiTheme = THEME_ID in theme ? theme[THEME_ID] : theme;\n  if (!('colorSchemes' in muiTheme)) {\n    return /*#__PURE__*/_jsx(ThemeProviderNoVars, {\n      theme: theme,\n      ...props\n    });\n  }\n  return /*#__PURE__*/_jsx(CssVarsProvider, {\n    theme: theme,\n    ...props\n  });\n}","/**\n * Split this component for RSC import\n */\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_MODE_STORAGE_KEY = 'mode';\nexport const DEFAULT_COLOR_SCHEME_STORAGE_KEY = 'color-scheme';\nexport const DEFAULT_ATTRIBUTE = 'data-color-scheme';\nexport default function InitColorSchemeScript(options) {\n  const {\n    defaultMode = 'system',\n    defaultLightColorScheme = 'light',\n    defaultDarkColorScheme = 'dark',\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    attribute: initialAttribute = DEFAULT_ATTRIBUTE,\n    colorSchemeNode = 'document.documentElement',\n    nonce\n  } = options || {};\n  let setter = '';\n  let attribute = initialAttribute;\n  if (initialAttribute === 'class') {\n    attribute = '.%s';\n  }\n  if (initialAttribute === 'data') {\n    attribute = '[data-%s]';\n  }\n  if (attribute.startsWith('.')) {\n    const selector = attribute.substring(1);\n    setter += `${colorSchemeNode}.classList.remove('${selector}'.replace('%s', light), '${selector}'.replace('%s', dark));\n      ${colorSchemeNode}.classList.add('${selector}'.replace('%s', colorScheme));`;\n  }\n  const matches = attribute.match(/\\[([^\\]]+)\\]/); // case [data-color-scheme=%s] or [data-color-scheme]\n  if (matches) {\n    const [attr, value] = matches[1].split('=');\n    if (!value) {\n      setter += `${colorSchemeNode}.removeAttribute('${attr}'.replace('%s', light));\n      ${colorSchemeNode}.removeAttribute('${attr}'.replace('%s', dark));`;\n    }\n    setter += `\n      ${colorSchemeNode}.setAttribute('${attr}'.replace('%s', colorScheme), ${value ? `${value}.replace('%s', colorScheme)` : '\"\"'});`;\n  } else {\n    setter += `${colorSchemeNode}.setAttribute('${attribute}', colorScheme);`;\n  }\n  return /*#__PURE__*/_jsx(\"script\", {\n    suppressHydrationWarning: true,\n    nonce: typeof window === 'undefined' ? nonce : ''\n    // eslint-disable-next-line react/no-danger\n    ,\n    dangerouslySetInnerHTML: {\n      __html: `(function() {\ntry {\n  let colorScheme = '';\n  const mode = localStorage.getItem('${modeStorageKey}') || '${defaultMode}';\n  const dark = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';\n  const light = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';\n  if (mode === 'system') {\n    // handle system mode\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\n    if (mql.matches) {\n      colorScheme = dark\n    } else {\n      colorScheme = light\n    }\n  }\n  if (mode === 'light') {\n    colorScheme = light;\n  }\n  if (mode === 'dark') {\n    colorScheme = dark;\n  }\n  if (colorScheme) {\n    ${setter}\n  }\n} catch(e){}})();`\n    }\n  }, \"mui-color-scheme-init\");\n}","'use client';\n\nimport * as React from 'react';\nimport { DEFAULT_MODE_STORAGE_KEY, DEFAULT_COLOR_SCHEME_STORAGE_KEY } from \"../InitColorSchemeScript/InitColorSchemeScript.js\";\nexport function getSystemMode(mode) {\n  if (typeof window !== 'undefined' && typeof window.matchMedia === 'function' && mode === 'system') {\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\n    if (mql.matches) {\n      return 'dark';\n    }\n    return 'light';\n  }\n  return undefined;\n}\nfunction processState(state, callback) {\n  if (state.mode === 'light' || state.mode === 'system' && state.systemMode === 'light') {\n    return callback('light');\n  }\n  if (state.mode === 'dark' || state.mode === 'system' && state.systemMode === 'dark') {\n    return callback('dark');\n  }\n  return undefined;\n}\nexport function getColorScheme(state) {\n  return processState(state, mode => {\n    if (mode === 'light') {\n      return state.lightColorScheme;\n    }\n    if (mode === 'dark') {\n      return state.darkColorScheme;\n    }\n    return undefined;\n  });\n}\nfunction initializeValue(key, defaultValue) {\n  if (typeof window === 'undefined') {\n    return undefined;\n  }\n  let value;\n  try {\n    value = localStorage.getItem(key) || undefined;\n    if (!value) {\n      // the first time that user enters the site.\n      localStorage.setItem(key, defaultValue);\n    }\n  } catch {\n    // Unsupported\n  }\n  return value || defaultValue;\n}\nexport default function useCurrentColorScheme(options) {\n  const {\n    defaultMode = 'light',\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    supportedColorSchemes = [],\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    storageWindow = typeof window === 'undefined' ? undefined : window,\n    noSsr = false\n  } = options;\n  const joinedColorSchemes = supportedColorSchemes.join(',');\n  const isMultiSchemes = supportedColorSchemes.length > 1;\n  const [state, setState] = React.useState(() => {\n    const initialMode = initializeValue(modeStorageKey, defaultMode);\n    const lightColorScheme = initializeValue(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);\n    const darkColorScheme = initializeValue(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\n    return {\n      mode: initialMode,\n      systemMode: getSystemMode(initialMode),\n      lightColorScheme,\n      darkColorScheme\n    };\n  });\n  const [isClient, setIsClient] = React.useState(noSsr || !isMultiSchemes);\n  React.useEffect(() => {\n    setIsClient(true); // to rerender the component after hydration\n  }, []);\n  const colorScheme = getColorScheme(state);\n  const setMode = React.useCallback(mode => {\n    setState(currentState => {\n      if (mode === currentState.mode) {\n        // do nothing if mode does not change\n        return currentState;\n      }\n      const newMode = mode ?? defaultMode;\n      try {\n        localStorage.setItem(modeStorageKey, newMode);\n      } catch {\n        // Unsupported\n      }\n      return {\n        ...currentState,\n        mode: newMode,\n        systemMode: getSystemMode(newMode)\n      };\n    });\n  }, [modeStorageKey, defaultMode]);\n  const setColorScheme = React.useCallback(value => {\n    if (!value) {\n      setState(currentState => {\n        try {\n          localStorage.setItem(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);\n          localStorage.setItem(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\n        } catch {\n          // Unsupported\n        }\n        return {\n          ...currentState,\n          lightColorScheme: defaultLightColorScheme,\n          darkColorScheme: defaultDarkColorScheme\n        };\n      });\n    } else if (typeof value === 'string') {\n      if (value && !joinedColorSchemes.includes(value)) {\n        console.error(`\\`${value}\\` does not exist in \\`theme.colorSchemes\\`.`);\n      } else {\n        setState(currentState => {\n          const newState = {\n            ...currentState\n          };\n          processState(currentState, mode => {\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-${mode}`, value);\n            } catch {\n              // Unsupported\n            }\n            if (mode === 'light') {\n              newState.lightColorScheme = value;\n            }\n            if (mode === 'dark') {\n              newState.darkColorScheme = value;\n            }\n          });\n          return newState;\n        });\n      }\n    } else {\n      setState(currentState => {\n        const newState = {\n          ...currentState\n        };\n        const newLightColorScheme = value.light === null ? defaultLightColorScheme : value.light;\n        const newDarkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;\n        if (newLightColorScheme) {\n          if (!joinedColorSchemes.includes(newLightColorScheme)) {\n            console.error(`\\`${newLightColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n          } else {\n            newState.lightColorScheme = newLightColorScheme;\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-light`, newLightColorScheme);\n            } catch (error) {\n              // Unsupported\n            }\n          }\n        }\n        if (newDarkColorScheme) {\n          if (!joinedColorSchemes.includes(newDarkColorScheme)) {\n            console.error(`\\`${newDarkColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n          } else {\n            newState.darkColorScheme = newDarkColorScheme;\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-dark`, newDarkColorScheme);\n            } catch (error) {\n              // Unsupported\n            }\n          }\n        }\n        return newState;\n      });\n    }\n  }, [joinedColorSchemes, colorSchemeStorageKey, defaultLightColorScheme, defaultDarkColorScheme]);\n  const handleMediaQuery = React.useCallback(event => {\n    if (state.mode === 'system') {\n      setState(currentState => {\n        const systemMode = event?.matches ? 'dark' : 'light';\n\n        // Early exit, nothing changed.\n        if (currentState.systemMode === systemMode) {\n          return currentState;\n        }\n        return {\n          ...currentState,\n          systemMode\n        };\n      });\n    }\n  }, [state.mode]);\n\n  // Ref hack to avoid adding handleMediaQuery as a dep\n  const mediaListener = React.useRef(handleMediaQuery);\n  mediaListener.current = handleMediaQuery;\n  React.useEffect(() => {\n    if (typeof window.matchMedia !== 'function' || !isMultiSchemes) {\n      return undefined;\n    }\n    const handler = (...args) => mediaListener.current(...args);\n\n    // Always listen to System preference\n    const media = window.matchMedia('(prefers-color-scheme: dark)');\n\n    // Intentionally use deprecated listener methods to support iOS & old browsers\n    media.addListener(handler);\n    handler(media);\n    return () => {\n      media.removeListener(handler);\n    };\n  }, [isMultiSchemes]);\n\n  // Handle when localStorage has changed\n  React.useEffect(() => {\n    if (storageWindow && isMultiSchemes) {\n      const handleStorage = event => {\n        const value = event.newValue;\n        if (typeof event.key === 'string' && event.key.startsWith(colorSchemeStorageKey) && (!value || joinedColorSchemes.match(value))) {\n          // If the key is deleted, value will be null then reset color scheme to the default one.\n          if (event.key.endsWith('light')) {\n            setColorScheme({\n              light: value\n            });\n          }\n          if (event.key.endsWith('dark')) {\n            setColorScheme({\n              dark: value\n            });\n          }\n        }\n        if (event.key === modeStorageKey && (!value || ['light', 'dark', 'system'].includes(value))) {\n          setMode(value || defaultMode);\n        }\n      };\n      // For syncing color-scheme changes between iframes\n      storageWindow.addEventListener('storage', handleStorage);\n      return () => {\n        storageWindow.removeEventListener('storage', handleStorage);\n      };\n    }\n    return undefined;\n  }, [setColorScheme, setMode, modeStorageKey, colorSchemeStorageKey, joinedColorSchemes, defaultMode, storageWindow, isMultiSchemes]);\n  return {\n    ...state,\n    mode: isClient ? state.mode : undefined,\n    systemMode: isClient ? state.systemMode : undefined,\n    colorScheme: isClient ? colorScheme : undefined,\n    setMode,\n    setColorScheme\n  };\n}","import * as React from 'react';\nimport SystemInitColorSchemeScript from '@mui/system/InitColorSchemeScript';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const defaultConfig = {\n  attribute: 'data-mui-color-scheme',\n  colorSchemeStorageKey: 'mui-color-scheme',\n  defaultLightColorScheme: 'light',\n  defaultDarkColorScheme: 'dark',\n  modeStorageKey: 'mui-mode'\n};\nexport default (function InitColorSchemeScript(props) {\n  return /*#__PURE__*/_jsx(SystemInitColorSchemeScript, {\n    ...defaultConfig,\n    ...props\n  });\n});","'use client';\n\nimport * as React from 'react';\nimport styleFunctionSx from '@mui/system/styleFunctionSx';\nimport { unstable_createCssVarsProvider as createCssVarsProvider } from '@mui/system';\nimport createTheme from \"./createTheme.js\";\nimport createTypography from \"./createTypography.js\";\nimport THEME_ID from \"./identifier.js\";\nimport { defaultConfig } from \"../InitColorSchemeScript/InitColorSchemeScript.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst {\n  CssVarsProvider: InternalCssVarsProvider,\n  useColorScheme,\n  getInitColorSchemeScript: deprecatedGetInitColorSchemeScript\n} = createCssVarsProvider({\n  themeId: THEME_ID,\n  // @ts-ignore ignore module augmentation tests\n  theme: () => createTheme({\n    cssVariables: true\n  }),\n  colorSchemeStorageKey: defaultConfig.colorSchemeStorageKey,\n  modeStorageKey: defaultConfig.modeStorageKey,\n  defaultColorScheme: {\n    light: defaultConfig.defaultLightColorScheme,\n    dark: defaultConfig.defaultDarkColorScheme\n  },\n  resolveTheme: theme => {\n    const newTheme = {\n      ...theme,\n      typography: createTypography(theme.palette, theme.typography)\n    };\n    newTheme.unstable_sx = function sx(props) {\n      return styleFunctionSx({\n        sx: props,\n        theme: this\n      });\n    };\n    return newTheme;\n  }\n});\nlet warnedOnce = false;\n\n// TODO: remove in v7\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction Experimental_CssVarsProvider(props) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnce) {\n      console.warn(['MUI: The Experimental_CssVarsProvider component has been ported into ThemeProvider.', '', \"You should use `import { ThemeProvider } from '@mui/material/styles'` instead.\", 'For more details, check out https://mui.com/material-ui/customization/css-theme-variables/usage/'].join('\\n'));\n      warnedOnce = true;\n    }\n  }\n  return /*#__PURE__*/_jsx(InternalCssVarsProvider, {\n    ...props\n  });\n}\nlet warnedInitScriptOnce = false;\n\n// TODO: remove in v7\nconst getInitColorSchemeScript = params => {\n  if (!warnedInitScriptOnce) {\n    console.warn(['MUI: The getInitColorSchemeScript function has been deprecated.', '', \"You should use `import InitColorSchemeScript from '@mui/material/InitColorSchemeScript'`\", 'and replace the function call with `<InitColorSchemeScript />` instead.'].join('\\n'));\n    warnedInitScriptOnce = true;\n  }\n  return deprecatedGetInitColorSchemeScript(params);\n};\n\n/**\n * TODO: remove this export in v7\n * @deprecated\n * The `CssVarsProvider` component has been deprecated and ported into `ThemeProvider`.\n *\n * You should use `ThemeProvider` and `createTheme()` instead:\n *\n * ```diff\n * - import { CssVarsProvider, extendTheme } from '@mui/material/styles';\n * + import { ThemeProvider, createTheme } from '@mui/material/styles';\n *\n * - const theme = extendTheme();\n * + const theme = createTheme({\n * +   cssVariables: true,\n * +   colorSchemes: { light: true, dark: true },\n * + });\n *\n * - <CssVarsProvider theme={theme}>\n * + <ThemeProvider theme={theme}>\n * ```\n *\n * To see the full documentation, check out https://mui.com/material-ui/customization/css-theme-variables/usage/.\n */\nexport const CssVarsProvider = InternalCssVarsProvider;\nexport { useColorScheme, getInitColorSchemeScript, Experimental_CssVarsProvider };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles } from '@mui/styled-engine';\nimport { useTheme as muiUseTheme } from '@mui/private-theming';\nimport ThemeProvider from \"../ThemeProvider/index.js\";\nimport InitColorSchemeScript, { DEFAULT_COLOR_SCHEME_STORAGE_KEY, DEFAULT_MODE_STORAGE_KEY } from \"../InitColorSchemeScript/InitColorSchemeScript.js\";\nimport useCurrentColorScheme from \"./useCurrentColorScheme.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const DISABLE_CSS_TRANSITION = '*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}';\nexport default function createCssVarsProvider(options) {\n  const {\n    themeId,\n    /**\n     * This `theme` object needs to follow a certain structure to\n     * be used correctly by the finel `CssVarsProvider`. It should have a\n     * `colorSchemes` key with the light and dark (and any other) palette.\n     * It should also ideally have a vars object created using `prepareCssVars`.\n     */\n    theme: defaultTheme = {},\n    modeStorageKey: defaultModeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey: defaultColorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    disableTransitionOnChange: designSystemTransitionOnChange = false,\n    defaultColorScheme,\n    resolveTheme\n  } = options;\n  const defaultContext = {\n    allColorSchemes: [],\n    colorScheme: undefined,\n    darkColorScheme: undefined,\n    lightColorScheme: undefined,\n    mode: undefined,\n    setColorScheme: () => {},\n    setMode: () => {},\n    systemMode: undefined\n  };\n  const ColorSchemeContext = /*#__PURE__*/React.createContext(undefined);\n  if (process.env.NODE_ENV !== 'production') {\n    ColorSchemeContext.displayName = 'ColorSchemeContext';\n  }\n  const useColorScheme = () => React.useContext(ColorSchemeContext) || defaultContext;\n  function CssVarsProvider(props) {\n    const {\n      children,\n      theme: themeProp,\n      modeStorageKey = defaultModeStorageKey,\n      colorSchemeStorageKey = defaultColorSchemeStorageKey,\n      disableTransitionOnChange = designSystemTransitionOnChange,\n      storageWindow = typeof window === 'undefined' ? undefined : window,\n      documentNode = typeof document === 'undefined' ? undefined : document,\n      colorSchemeNode = typeof document === 'undefined' ? undefined : document.documentElement,\n      disableNestedContext = false,\n      disableStyleSheetGeneration = false,\n      defaultMode: initialMode = 'system',\n      noSsr\n    } = props;\n    const hasMounted = React.useRef(false);\n    const upperTheme = muiUseTheme();\n    const ctx = React.useContext(ColorSchemeContext);\n    const nested = !!ctx && !disableNestedContext;\n    const initialTheme = React.useMemo(() => {\n      if (themeProp) {\n        return themeProp;\n      }\n      return typeof defaultTheme === 'function' ? defaultTheme() : defaultTheme;\n    }, [themeProp]);\n    const scopedTheme = initialTheme[themeId];\n    const {\n      colorSchemes = {},\n      components = {},\n      cssVarPrefix,\n      ...restThemeProp\n    } = scopedTheme || initialTheme;\n    const joinedColorSchemes = Object.keys(colorSchemes).filter(k => !!colorSchemes[k]).join(',');\n    const allColorSchemes = React.useMemo(() => joinedColorSchemes.split(','), [joinedColorSchemes]);\n    const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\n    const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;\n    const defaultMode = colorSchemes[defaultLightColorScheme] && colorSchemes[defaultDarkColorScheme] ? initialMode : colorSchemes[restThemeProp.defaultColorScheme]?.palette?.mode || restThemeProp.palette?.mode;\n\n    // 1. Get the data about the `mode`, `colorScheme`, and setter functions.\n    const {\n      mode: stateMode,\n      setMode,\n      systemMode,\n      lightColorScheme,\n      darkColorScheme,\n      colorScheme: stateColorScheme,\n      setColorScheme\n    } = useCurrentColorScheme({\n      supportedColorSchemes: allColorSchemes,\n      defaultLightColorScheme,\n      defaultDarkColorScheme,\n      modeStorageKey,\n      colorSchemeStorageKey,\n      defaultMode,\n      storageWindow,\n      noSsr\n    });\n    let mode = stateMode;\n    let colorScheme = stateColorScheme;\n    if (nested) {\n      mode = ctx.mode;\n      colorScheme = ctx.colorScheme;\n    }\n\n    // `colorScheme` is undefined on the server and hydration phase\n    const calculatedColorScheme = colorScheme || restThemeProp.defaultColorScheme;\n\n    // 2. get the `vars` object that refers to the CSS custom properties\n    const themeVars = restThemeProp.generateThemeVars?.() || restThemeProp.vars;\n\n    // 3. Start composing the theme object\n    const theme = {\n      ...restThemeProp,\n      components,\n      colorSchemes,\n      cssVarPrefix,\n      vars: themeVars\n    };\n    if (typeof theme.generateSpacing === 'function') {\n      theme.spacing = theme.generateSpacing();\n    }\n\n    // 4. Resolve the color scheme and merge it to the theme\n    if (calculatedColorScheme) {\n      const scheme = colorSchemes[calculatedColorScheme];\n      if (scheme && typeof scheme === 'object') {\n        // 4.1 Merge the selected color scheme to the theme\n        Object.keys(scheme).forEach(schemeKey => {\n          if (scheme[schemeKey] && typeof scheme[schemeKey] === 'object') {\n            // shallow merge the 1st level structure of the theme.\n            theme[schemeKey] = {\n              ...theme[schemeKey],\n              ...scheme[schemeKey]\n            };\n          } else {\n            theme[schemeKey] = scheme[schemeKey];\n          }\n        });\n      }\n    }\n\n    // 5. Declaring effects\n    // 5.1 Updates the selector value to use the current color scheme which tells CSS to use the proper stylesheet.\n    const colorSchemeSelector = restThemeProp.colorSchemeSelector;\n    React.useEffect(() => {\n      if (colorScheme && colorSchemeNode && colorSchemeSelector && colorSchemeSelector !== 'media') {\n        const selector = colorSchemeSelector;\n        let rule = colorSchemeSelector;\n        if (selector === 'class') {\n          rule = `.%s`;\n        }\n        if (selector === 'data') {\n          rule = `[data-%s]`;\n        }\n        if (selector?.startsWith('data-') && !selector.includes('%s')) {\n          // 'data-mui-color-scheme' -> '[data-mui-color-scheme=\"%s\"]'\n          rule = `[${selector}=\"%s\"]`;\n        }\n        if (rule.startsWith('.')) {\n          colorSchemeNode.classList.remove(...allColorSchemes.map(scheme => rule.substring(1).replace('%s', scheme)));\n          colorSchemeNode.classList.add(rule.substring(1).replace('%s', colorScheme));\n        } else {\n          const matches = rule.replace('%s', colorScheme).match(/\\[([^\\]]+)\\]/);\n          if (matches) {\n            const [attr, value] = matches[1].split('=');\n            if (!value) {\n              // for attributes like `data-theme-dark`, `data-theme-light`\n              // remove all the existing data attributes before setting the new one\n              allColorSchemes.forEach(scheme => {\n                colorSchemeNode.removeAttribute(attr.replace(colorScheme, scheme));\n              });\n            }\n            colorSchemeNode.setAttribute(attr, value ? value.replace(/\"|'/g, '') : '');\n          } else {\n            colorSchemeNode.setAttribute(rule, colorScheme);\n          }\n        }\n      }\n    }, [colorScheme, colorSchemeSelector, colorSchemeNode, allColorSchemes]);\n\n    // 5.2 Remove the CSS transition when color scheme changes to create instant experience.\n    // credit: https://github.com/pacocoursey/next-themes/blob/b5c2bad50de2d61ad7b52a9c5cdc801a78507d7a/index.tsx#L313\n    React.useEffect(() => {\n      let timer;\n      if (disableTransitionOnChange && hasMounted.current && documentNode) {\n        const css = documentNode.createElement('style');\n        css.appendChild(documentNode.createTextNode(DISABLE_CSS_TRANSITION));\n        documentNode.head.appendChild(css);\n\n        // Force browser repaint\n        (() => window.getComputedStyle(documentNode.body))();\n        timer = setTimeout(() => {\n          documentNode.head.removeChild(css);\n        }, 1);\n      }\n      return () => {\n        clearTimeout(timer);\n      };\n    }, [colorScheme, disableTransitionOnChange, documentNode]);\n    React.useEffect(() => {\n      hasMounted.current = true;\n      return () => {\n        hasMounted.current = false;\n      };\n    }, []);\n    const contextValue = React.useMemo(() => ({\n      allColorSchemes,\n      colorScheme,\n      darkColorScheme,\n      lightColorScheme,\n      mode,\n      setColorScheme,\n      setMode: process.env.NODE_ENV === 'production' ? setMode : newMode => {\n        if (theme.colorSchemeSelector === 'media') {\n          console.error(['MUI: The `setMode` function has no effect if `colorSchemeSelector` is `media` (`media` is the default value).', 'To toggle the mode manually, please configure `colorSchemeSelector` to use a class or data attribute.', 'To learn more, visit https://mui.com/material-ui/customization/css-theme-variables/configuration/#toggling-dark-mode-manually'].join('\\n'));\n        }\n        setMode(newMode);\n      },\n      systemMode\n    }), [allColorSchemes, colorScheme, darkColorScheme, lightColorScheme, mode, setColorScheme, setMode, systemMode, theme.colorSchemeSelector]);\n    let shouldGenerateStyleSheet = true;\n    if (disableStyleSheetGeneration || restThemeProp.cssVariables === false || nested && upperTheme?.cssVarPrefix === cssVarPrefix) {\n      shouldGenerateStyleSheet = false;\n    }\n    const element = /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [/*#__PURE__*/_jsx(ThemeProvider, {\n        themeId: scopedTheme ? themeId : undefined,\n        theme: resolveTheme ? resolveTheme(theme) : theme,\n        children: children\n      }), shouldGenerateStyleSheet && /*#__PURE__*/_jsx(GlobalStyles, {\n        styles: theme.generateStyleSheets?.() || []\n      })]\n    });\n    if (nested) {\n      return element;\n    }\n    return /*#__PURE__*/_jsx(ColorSchemeContext.Provider, {\n      value: contextValue,\n      children: element\n    });\n  }\n  process.env.NODE_ENV !== \"production\" ? CssVarsProvider.propTypes = {\n    /**\n     * The component tree.\n     */\n    children: PropTypes.node,\n    /**\n     * The node used to attach the color-scheme attribute\n     */\n    colorSchemeNode: PropTypes.any,\n    /**\n     * localStorage key used to store `colorScheme`\n     */\n    colorSchemeStorageKey: PropTypes.string,\n    /**\n     * The default mode when the storage is empty,\n     * require the theme to have `colorSchemes` with light and dark.\n     */\n    defaultMode: PropTypes.string,\n    /**\n     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.\n     */\n    disableNestedContext: PropTypes.bool,\n    /**\n     * If `true`, the style sheet won't be generated.\n     *\n     * This is useful for controlling nested CssVarsProvider behavior.\n     */\n    disableStyleSheetGeneration: PropTypes.bool,\n    /**\n     * Disable CSS transitions when switching between modes or color schemes.\n     */\n    disableTransitionOnChange: PropTypes.bool,\n    /**\n     * The document to attach the attribute to.\n     */\n    documentNode: PropTypes.any,\n    /**\n     * The key in the local storage used to store current color scheme.\n     */\n    modeStorageKey: PropTypes.string,\n    /**\n     * If `true`, the mode will be the same value as the storage without an extra rerendering after the hydration.\n     * You should use this option in conjuction with `InitColorSchemeScript` component.\n     */\n    noSsr: PropTypes.bool,\n    /**\n     * The window that attaches the 'storage' event listener.\n     * @default window\n     */\n    storageWindow: PropTypes.any,\n    /**\n     * The calculated theme object that will be passed through context.\n     */\n    theme: PropTypes.object\n  } : void 0;\n  const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\n  const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;\n  const getInitColorSchemeScript = params => InitColorSchemeScript({\n    colorSchemeStorageKey: defaultColorSchemeStorageKey,\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    modeStorageKey: defaultModeStorageKey,\n    ...params\n  });\n  return {\n    CssVarsProvider,\n    useColorScheme,\n    getInitColorSchemeScript\n  };\n}","import * as React from 'react';\nconst ThemeContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  ThemeContext.displayName = 'ThemeContext';\n}\nexport default ThemeContext;","import * as React from 'react';\nimport ThemeContext from \"./ThemeContext.js\";\nexport default function useTheme() {\n  const theme = React.useContext(ThemeContext);\n  if (process.env.NODE_ENV !== 'production') {\n    // TODO: uncomment once we enable eslint-plugin-react-compiler eslint-disable-next-line react-compiler/react-compiler\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- It's not required to run React.useDebugValue in production\n    React.useDebugValue(theme);\n  }\n  return theme;\n}","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Global } from '@emotion/react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isEmpty(obj) {\n  return obj === undefined || obj === null || Object.keys(obj).length === 0;\n}\nexport default function GlobalStyles(props) {\n  const {\n    styles,\n    defaultTheme = {}\n  } = props;\n  const globalStyles = typeof styles === 'function' ? themeInput => styles(isEmpty(themeInput) ? defaultTheme : themeInput) : styles;\n  return /*#__PURE__*/_jsx(Global, {\n    styles: globalStyles\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes = {\n  defaultTheme: PropTypes.object,\n  styles: PropTypes.oneOfType([PropTypes.array, PropTypes.string, PropTypes.object, PropTypes.func])\n} : void 0;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache';\nimport { StyleSheet } from '@emotion/sheet';\n\n// We might be able to remove this when this issue is fixed:\n// https://github.com/emotion-js/emotion/issues/2790\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst createEmotionCache = options => {\n  const cache = createCache(options);\n\n  /**\n   * This is for client-side apps only.\n   * A custom sheet is required to make the GlobalStyles API work with `prepend: true`.\n   * This is because the [sheet](https://github.com/emotion-js/emotion/blob/main/packages/react/src/global.js#L94-L99) does not consume the options.\n   */\n  class MyStyleSheet extends StyleSheet {\n    constructor(args) {\n      super(args);\n      this.prepend = cache.sheet.prepend;\n    }\n  }\n\n  // Do the same as https://github.com/emotion-js/emotion/blob/main/packages/cache/src/index.js#L238-L245\n  cache.sheet = new MyStyleSheet({\n    key: cache.key,\n    nonce: cache.sheet.nonce,\n    container: cache.sheet.container,\n    speedy: cache.sheet.isSpeedy,\n    prepend: cache.sheet.prepend,\n    insertionPoint: cache.sheet.insertionPoint\n  });\n  return cache;\n};\n\n// prepend: true moves MUI styles to the top of the <head> so they're loaded first.\n// It allows developers to easily override MUI styles with other styling solutions, like CSS modules.\nlet cache;\nif (typeof document === 'object') {\n  cache = createEmotionCache({\n    key: 'css',\n    prepend: true\n  });\n}\nexport default function StyledEngineProvider(props) {\n  const {\n    injectFirst,\n    children\n  } = props;\n  return injectFirst && cache ? /*#__PURE__*/_jsx(CacheProvider, {\n    value: cache,\n    children: children\n  }) : children;\n}\nprocess.env.NODE_ENV !== \"production\" ? StyledEngineProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * By default, the styles are injected last in the <head> element of the page.\n   * As a result, they gain more specificity than any other style sheet.\n   * If you want to override MUI's styles, set this prop.\n   */\n  injectFirst: PropTypes.bool\n} : void 0;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport resolveProps from '@mui/utils/resolveProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst PropsContext = /*#__PURE__*/React.createContext(undefined);\nfunction DefaultPropsProvider({\n  value,\n  children\n}) {\n  return /*#__PURE__*/_jsx(PropsContext.Provider, {\n    value: value,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? DefaultPropsProvider.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  value: PropTypes.object\n} : void 0;\nfunction getThemeProps(params) {\n  const {\n    theme,\n    name,\n    props\n  } = params;\n  if (!theme || !theme.components || !theme.components[name]) {\n    return props;\n  }\n  const config = theme.components[name];\n  if (config.defaultProps) {\n    // compatible with v5 signature\n    return resolveProps(config.defaultProps, props);\n  }\n  if (!config.styleOverrides && !config.variants) {\n    // v6 signature, no property 'defaultProps'\n    return resolveProps(config, props);\n  }\n  return props;\n}\nexport function useDefaultProps({\n  props,\n  name\n}) {\n  const ctx = React.useContext(PropsContext);\n  return getThemeProps({\n    props,\n    name,\n    theme: {\n      components: ctx\n    }\n  });\n}\nexport default DefaultPropsProvider;","const hasSymbol = typeof Symbol === 'function' && Symbol.for;\nexport default hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__';","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@mui/utils';\nimport ThemeContext from \"../useTheme/ThemeContext.js\";\nimport useTheme from \"../useTheme/index.js\";\nimport nested from \"./nested.js\";\n\n// To support composition of theme.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    const mergedTheme = localTheme(outerTheme);\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['MUI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n    return mergedTheme;\n  }\n  return {\n    ...outerTheme,\n    ...localTheme\n  };\n}\n\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  const outerTheme = useTheme();\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const theme = React.useMemo(() => {\n    const output = outerTheme === null ? {\n      ...localTheme\n    } : mergeOuterLocalTheme(outerTheme, localTheme);\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/_jsx(ThemeContext.Provider, {\n    value: theme,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as MuiThemeProvider, useTheme as usePrivateTheme } from '@mui/private-theming';\nimport exactProp from '@mui/utils/exactProp';\nimport { ThemeContext as StyledEngineThemeContext } from '@mui/styled-engine';\nimport useThemeWithoutDefault from \"../useThemeWithoutDefault/index.js\";\nimport RtlProvider from \"../RtlProvider/index.js\";\nimport DefaultPropsProvider from \"../DefaultPropsProvider/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst EMPTY_THEME = {};\nfunction useThemeScoping(themeId, upperTheme, localTheme, isPrivate = false) {\n  return React.useMemo(() => {\n    const resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;\n    if (typeof localTheme === 'function') {\n      const mergedTheme = localTheme(resolvedTheme);\n      const result = themeId ? {\n        ...upperTheme,\n        [themeId]: mergedTheme\n      } : mergedTheme;\n      // must return a function for the private theme to NOT merge with the upper theme.\n      // see the test case \"use provided theme from a callback\" in ThemeProvider.test.js\n      if (isPrivate) {\n        return () => result;\n      }\n      return result;\n    }\n    return themeId ? {\n      ...upperTheme,\n      [themeId]: localTheme\n    } : {\n      ...upperTheme,\n      ...localTheme\n    };\n  }, [themeId, upperTheme, localTheme, isPrivate]);\n}\n\n/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n *\n * <ThemeProvider theme={theme}> // existing use case\n * <ThemeProvider theme={{ id: theme }}> // theme scoping\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme,\n    themeId\n  } = props;\n  const upperTheme = useThemeWithoutDefault(EMPTY_THEME);\n  const upperPrivateTheme = usePrivateTheme() || EMPTY_THEME;\n  if (process.env.NODE_ENV !== 'production') {\n    if (upperTheme === null && typeof localTheme === 'function' || themeId && upperTheme && !upperTheme[themeId] && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const engineTheme = useThemeScoping(themeId, upperTheme, localTheme);\n  const privateTheme = useThemeScoping(themeId, upperPrivateTheme, localTheme, true);\n  const rtlValue = (themeId ? engineTheme[themeId] : engineTheme).direction === 'rtl';\n  return /*#__PURE__*/_jsx(MuiThemeProvider, {\n    theme: privateTheme,\n    children: /*#__PURE__*/_jsx(StyledEngineThemeContext.Provider, {\n      value: engineTheme,\n      children: /*#__PURE__*/_jsx(RtlProvider, {\n        value: rtlValue,\n        children: /*#__PURE__*/_jsx(DefaultPropsProvider, {\n          value: themeId ? engineTheme[themeId].components : engineTheme.components,\n          children: children\n        })\n      })\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  /**\n   * The design system's unique id for getting the corresponded theme when there are multiple design systems.\n   */\n  themeId: PropTypes.string\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","'use client';\n\nimport * as React from 'react';\nimport { ThemeContext } from '@mui/styled-engine';\nfunction isObjectEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\nfunction useTheme(defaultTheme = null) {\n  const contextTheme = React.useContext(ThemeContext);\n  return !contextTheme || isObjectEmpty(contextTheme) ? defaultTheme : contextTheme;\n}\nexport default useTheme;","/**\n * Add keys, values of `defaultProps` that does not exist in `props`\n * @param defaultProps\n * @param props\n * @returns resolved props\n */\nexport default function resolveProps(defaultProps, props) {\n  const output = {\n    ...props\n  };\n  for (const key in defaultProps) {\n    if (Object.prototype.hasOwnProperty.call(defaultProps, key)) {\n      const propName = key;\n      if (propName === 'components' || propName === 'slots') {\n        output[propName] = {\n          ...defaultProps[propName],\n          ...output[propName]\n        };\n      } else if (propName === 'componentsProps' || propName === 'slotProps') {\n        const defaultSlotProps = defaultProps[propName];\n        const slotProps = props[propName];\n        if (!slotProps) {\n          output[propName] = defaultSlotProps || {};\n        } else if (!defaultSlotProps) {\n          output[propName] = slotProps;\n        } else {\n          output[propName] = {\n            ...slotProps\n          };\n          for (const slotKey in defaultSlotProps) {\n            if (Object.prototype.hasOwnProperty.call(defaultSlotProps, slotKey)) {\n              const slotPropName = slotKey;\n              output[propName][slotPropName] = resolveProps(defaultSlotProps[slotPropName], slotProps[slotPropName]);\n            }\n          }\n        }\n      } else if (output[propName] === undefined) {\n        output[propName] = defaultProps[propName];\n      }\n    }\n  }\n  return output;\n}","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n"],"names":["A100","A200","A400","A700","ThemeProviderNoVars","_ref","theme","themeInput","props","scopedTheme","THEME_ID","undefined","_jsx","SystemThemeProvider","themeId","ThemeProvider","CssVarsProvider","DEFAULT_MODE_STORAGE_KEY","DEFAULT_COLOR_SCHEME_STORAGE_KEY","DEFAULT_ATTRIBUTE","getSystemMode","mode","window","matchMedia","matches","processState","state","callback","systemMode","initializeValue","key","defaultValue","value","localStorage","getItem","setItem","useCurrentColorScheme","options","defaultMode","defaultLightColorScheme","defaultDarkColorScheme","supportedColorSchemes","modeStorageKey","colorSchemeStorageKey","storageWindow","noSsr","joinedColorSchemes","join","isMultiSchemes","length","setState","React","initialMode","lightColorScheme","darkColorScheme","isClient","setIsClient","colorScheme","getColorScheme","setMode","currentState","newMode","setColorScheme","includes","console","error","newState","newLightColorScheme","light","newDarkColorScheme","dark","handleMediaQuery","event","mediaListener","current","handler","arguments","media","addListener","removeListener","handleStorage","newValue","startsWith","match","endsWith","addEventListener","removeEventListener","defaultConfig","attribute","InternalCssVarsProvider","useColorScheme","getInitColorSchemeScript","deprecatedGetInitColorSchemeScript","defaultTheme","defaultModeStorageKey","defaultColorSchemeStorageKey","disableTransitionOnChange","designSystemTransitionOnChange","defaultColorScheme","resolveTheme","defaultContext","allColorSchemes","ColorSchemeContext","children","themeProp","documentNode","document","colorSchemeNode","documentElement","disableNestedContext","disableStyleSheetGeneration","hasMounted","upperTheme","muiUseTheme","ctx","nested","initialTheme","colorSchemes","components","cssVarPrefix","restThemeProp","Object","keys","filter","k","split","palette","stateMode","stateColorScheme","calculatedColorScheme","themeVars","generateThemeVars","vars","generateSpacing","spacing","scheme","forEach","schemeKey","colorSchemeSelector","selector","rule","classList","remove","map","substring","replace","add","attr","removeAttribute","setAttribute","timer","css","createElement","appendChild","createTextNode","head","getComputedStyle","body","setTimeout","removeChild","clearTimeout","contextValue","shouldGenerateStyleSheet","cssVariables","element","_jsxs","GlobalStyles","styles","generateStyleSheets","Provider","params","initialAttribute","nonce","setter","suppressHydrationWarning","dangerouslySetInnerHTML","__html","InitColorSchemeScript","createCssVarsProvider","createTheme","newTheme","typography","createTypography","unstable_sx","styleFunctionSx","sx","this","Experimental_CssVarsProvider","warnedInitScriptOnce","warn","useTheme","ThemeContext","globalStyles","obj","Global","createEmotionCache","cache","createCache","MyStyleSheet","StyleSheet","constructor","args","super","prepend","sheet","container","speedy","isSpeedy","insertionPoint","StyledEngineProvider","injectFirst","CacheProvider","PropsContext","useDefaultProps","_ref2","name","config","defaultProps","resolveProps","styleOverrides","variants","getThemeProps","Symbol","for","localTheme","outerTheme","output","mergeOuterLocalTheme","EMPTY_THEME","useThemeScoping","isPrivate","resolvedTheme","mergedTheme","result","useThemeWithoutDefault","upperPrivateTheme","usePrivateTheme","engineTheme","privateTheme","rtlValue","direction","MuiThemeProvider","StyledEngineThemeContext","RtlProvider","DefaultPropsProvider","contextTheme","prototype","hasOwnProperty","call","propName","defaultSlotProps","slotProps","slotKey","slotPropName","f","require","l","m","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","ref","__self","__source","q","c","a","g","b","d","e","h","$$typeof","type","_owner","exports","Fragment","jsx","jsxs","module"],"sourceRoot":""}