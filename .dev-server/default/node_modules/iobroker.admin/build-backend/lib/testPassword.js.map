{"version":3,"file":"testPassword.js","sourceRoot":"","sources":["../../src/lib/testPassword.ts"],"names":[],"mappings":";;AAAA,iDAAgD;AAChD,qDAA6E;AAC7E,6CAAuC;AAEvC,IAAI,UAAU,GAAG,KAAK,CAAC;AACvB,kDAAkD;AAClD,gFAAgF;AAChF,MAAM,aAAa,GAAG,IAAI,sBAAQ,CAAC;IAC/B,KAAK,EAAE,CAAC,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,EAAE;QACnC,IAAI,UAAU,EAAE,CAAC;YACb,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC9B,CAAC;aAAM,CAAC;YACJ,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QAC5C,CAAC;QACD,QAAQ,EAAE,CAAC;IACf,CAAC;CACJ,CAAC,CAAC;AAEH,mEAAmE;AACnE,IAAA,wCAAuB,GAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;IACnC,IAAI,KAAK,EAAE,CAAC;QACR,OAAO,CAAC,GAAG,CAAC,8BAA8B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACnE,qBAAqB;QACrB,MAAM,EAAE,GAAG,IAAA,+BAAe,EAAC;YACvB,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,MAAM,EAAE,aAAa;YACrB,QAAQ,EAAE,IAAI;SACjB,CAAC,CAAC;QACH,EAAE,CAAC,QAAQ,CAAC,2BAA2B,KAAK,CAAC,KAAK,kBAAkB,EAAE,CAAC,QAAgB,EAAE,EAAE;YACvF,UAAU,GAAG,KAAK,CAAC;YACnB,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAC1D,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBACtB,OAAO,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;gBACvC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACpB,CAAC;YACD,EAAE,CAAC,QAAQ,CAAC,4BAA4B,KAAK,CAAC,KAAK,IAAI,EAAE,CAAC,cAAsB,EAAE,EAAE;gBAChF,UAAU,GAAG,KAAK,CAAC;gBACnB,cAAc,GAAG,cAAc,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACtE,IAAI,QAAQ,KAAK,cAAc,EAAE,CAAC;oBAC9B,OAAO,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;oBACzC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACpB,CAAC;gBACD,EAAE,CAAC,KAAK,EAAE,CAAC;gBACX,KAAK,IAAA,iCAAgB,EAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;oBACvE,OAAO,CAAC,GAAG,CAAC,WAAW,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;gBACrD,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;YACH,UAAU,GAAG,IAAI,CAAC;QACtB,CAAC,CAAC,CAAC;QACH,UAAU,GAAG,IAAI,CAAC;IACtB,CAAC;SAAM,CAAC;QACJ,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;QAC7C,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { createInterface } from 'node:readline';\nimport { setLinuxPassword, checkWellKnownPasswords } from './checkLinuxPass';\nimport { Writable } from 'node:stream';\n\nlet maskOutput = false;\n// this file is used for test on different locales\n// node /opt/iobroker/node_modules/iobroker.admin/build-backend/lib/testPassword\nconst mutableStdout = new Writable({\n    write: (_chunk, _encoding, callback) => {\n        if (maskOutput) {\n            process.stdout.write('*');\n        } else {\n            process.stdout.write(_chunk, _encoding);\n        }\n        callback();\n    },\n});\n\n// eslint-disable-next-line @typescript-eslint/no-floating-promises\ncheckWellKnownPasswords().then(found => {\n    if (found) {\n        console.log(`Found well-known password: ${JSON.stringify(found)}`);\n        // enter new password\n        const rl = createInterface({\n            input: process.stdin,\n            output: mutableStdout,\n            terminal: true,\n        });\n        rl.question(`Enter new password for \"${found.login} (min 6 chars): `, (password: string) => {\n            maskOutput = false;\n            password = password.replace(/\\r/g, '').replace(/\\n/g, '');\n            if (password.length < 6) {\n                console.error('password is too short');\n                process.exit(1);\n            }\n            rl.question(`Repeat new password for \"${found.login}: `, (passwordRepeat: string) => {\n                maskOutput = false;\n                passwordRepeat = passwordRepeat.replace(/\\r/g, '').replace(/\\n/g, '');\n                if (password !== passwordRepeat) {\n                    console.error('passwords are not equal');\n                    process.exit(1);\n                }\n                rl.close();\n                void setLinuxPassword(found.login, found.password, password).then(result => {\n                    console.log(`Result: ${JSON.stringify(result)}`);\n                });\n            });\n            maskOutput = true;\n        });\n        maskOutput = true;\n    } else {\n        console.log(`No well known passwords found`);\n        process.exit(0);\n    }\n});\n"]}