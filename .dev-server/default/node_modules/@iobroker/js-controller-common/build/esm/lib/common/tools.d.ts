import type { Client as ObjectsClient } from '@iobroker/db-objects-redis';
import type { InternalLogger } from '@iobroker/js-controller-common-db/tools';
export interface OrderedInstancesObject {
    1: ioBroker.InstanceObject[];
    2: ioBroker.InstanceObject[];
    3: ioBroker.InstanceObject[];
    admin: ioBroker.InstanceObject[];
}
/**
 * Get ordered instances according to tier level
 *
 * @param objects - Objects DB
 * @param logger - logger object
 * @param logPrefix prefix for logging
 */
export declare function getInstancesOrderedByStartPrio(objects: ObjectsClient, logger: InternalLogger | typeof console, logPrefix?: string): Promise<ioBroker.InstanceObject[]>;
interface IsInstalledFromNpmOptions {
    /** Installed from attribute of instance/adapter object */
    installedFrom?: ioBroker.InstalledFrom;
    /** Name of the adapter */
    adapterName: string;
}
/**
 * Check if the adapter has been installed from NPM
 *
 * @param options installedFrom and name information
 */
export declare function isInstalledFromNpm(options: IsInstalledFromNpmOptions): boolean;
export {};
//# sourceMappingURL=tools.d.ts.map