"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var esm_exports = {};
__export(esm_exports, {
  NotificationHandler: () => import_notificationHandler.NotificationHandler,
  getObjectsConstructor: () => import_objects.getObjectsConstructor,
  getStatesConstructor: () => import_states.getStatesConstructor,
  isLocalObjectsDbServer: () => import_objects.isLocalObjectsDbServer,
  isLocalStatesDbServer: () => import_states.isLocalStatesDbServer,
  letsencrypt: () => letsencrypt,
  objectsDbHasServer: () => import_objects.objectsDbHasServer,
  performObjectsInterview: () => import_objects.performObjectsInterview,
  performStatesInterview: () => import_states.performStatesInterview,
  statesDbHasServer: () => import_states.statesDbHasServer,
  zipFiles: () => zipFiles
});
module.exports = __toCommonJS(esm_exports);
var import_states = require("./lib/common/states.js");
var import_objects = require("./lib/common/objects.js");
var import_notificationHandler = require("./lib/common/notificationHandler.js");
var zipFiles = __toESM(require("./lib/common/zipFiles.js"), 1);
__reExport(esm_exports, require("./lib/common/tools.js"), module.exports);
__reExport(esm_exports, require("@iobroker/js-controller-common-db"), module.exports);
const letsencrypt = true;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  NotificationHandler,
  getObjectsConstructor,
  getStatesConstructor,
  isLocalObjectsDbServer,
  isLocalStatesDbServer,
  letsencrypt,
  objectsDbHasServer,
  performObjectsInterview,
  performStatesInterview,
  statesDbHasServer,
  zipFiles,
  ...require("./lib/common/tools.js"),
  ...require("@iobroker/js-controller-common-db")
});
//# sourceMappingURL=index.js.map
