{
  "version": 3,
  "sources": ["../../../../src/lib/adapter/constants.ts"],
  "sourcesContent": ["/**\n * Constants needed for adapter.js\n */\nexport const DEFAULT_SECRET = 'Zgfr56gFe87jJOM';\nexport const ALIAS_STARTS_WITH = 'alias.';\nexport const SYSTEM_ADMIN_USER = 'system.user.admin';\nexport const SYSTEM_ADMIN_GROUP = 'system.group.administrator';\nexport const ERROR_PERMISSION = 'permissionError';\nexport const ACCESS_GROUP_READ = 0x40;\nexport const ACCESS_GROUP_WRITE = 0x20;\nexport const ACCESS_EVERY_WRITE = 0x2;\nexport const ACCESS_EVERY_READ = 0x4;\nexport const ACCESS_USER_READ = 0x400;\nexport const ACCESS_USER_WRITE = 0x200;\nexport const NO_PROTECT_ADAPTERS = ['admin', 'iot', 'cloud', 'discovery'];\n\n/** Two-way mapping for state quality (\"q\" attribute of a state) */\nexport enum STATE_QUALITY {\n    /** The default value for a state */\n    GOOD = 0x00,\n    /** General problem */\n    BAD = 0x01,\n    /** The instance cannot establish a connection */\n    CONNECTION_PROBLEM = 0x02,\n    /** Substitute value from controller. Do not set this in adapters */\n    SUBSTITUTE_FROM_CONTROLLER = 0x10,\n    /** Quality for default values */\n    SUBSTITUTE_INITIAL_VALUE = 0x20,\n    /** Substitute value from instance or device */\n    SUBSTITUTE_DEVICE_INSTANCE_VALUE = 0x40,\n    /** Substitute value from a sensor */\n    SUBSTITUTE_SENSOR_VALUE = 0x80,\n    /** General problem by instance */\n    GENERAL_INSTANCE_PROBLEM = 0x11,\n    /** General problem by device */\n    GENERAL_DEVICE_PROBLEM = 0x41,\n    /** General problem by sensor */\n    GENERAL_SENSOR_PROBLEM = 0x81,\n    /** The instance is not connected */\n    INSTANCE_NOT_CONNECTED = 0x12,\n    /** The device is not connected */\n    DEVICE_NOT_CONNECTED = 0x42,\n    /** The sensor is not connected */\n    SENSOR_NOT_CONNECTED = 0x82,\n    /** The device has reported an error */\n    DEVICE_ERROR_REPORT = 0x44,\n    /** The sensor has reported an error */\n    SENSOR_ERROR_REPORT = 0x84,\n}\n\n/** Using the const array just for type inference */\nconst SUPPORTED_FEATURES_INTERNAL = [\n    'ALIAS', // Alias Feature supported, Since `js-controller` 2.0\n    'ALIAS_SEPARATE_READ_WRITE_ID', // Alias support separated ids for read and write, Since `js-controller` 3.0\n    'ADAPTER_GETPORT_BIND', // getPort method of adapter supports second parameter to bind to a special network interface, Since js-controller 2.0\n    'ADAPTER_DEL_OBJECT_RECURSIVE', // delObject supports options.recursive flag to delete objects structures recursive, Since js-controller 2.2\n    'ADAPTER_SET_OBJECT_SETS_DEFAULT_VALUE', // setObject(*) methods set the default (def) value via setState after the object is created. Since js-controller 2.0\n    'ADAPTER_AUTO_DECRYPT_NATIVE', // all native attributes that are listed in an array `encryptedNative` in io-pack will be automatically decrypted and encrypted. Since js-controller 3.0\n    'PLUGINS', // configurable plugins supported. Since `js-controller` 3.0\n    'CONTROLLER_NPM_AUTO_REBUILD', // Automatic rebuild when node version mismatch is detected. Since `js-controller` 3.0\n    'CONTROLLER_READWRITE_BASE_SETTINGS', // If base settings could be read and written. Since js-controller 3.0\n    'CONTROLLER_MULTI_REPO', // Controller supports multiple repositories\n    'CONTROLLER_LICENSE_MANAGER', // Controller can read licenses from iobroker.net. Since js-controller 4.0\n    'CONTROLLER_OS_PACKAGE_UPGRADE', // Controller can upgrade OS packages\n    'DEL_INSTANCE_CUSTOM', // instances/adapter can be deleted with --custom flag to remove corresponding custom of all objects. Since js-controller 4.0\n    'CUSTOM_FULL_VIEW', // `getObjectView('system', 'custom-full', ...)` will return full objects and not only `common.custom` part. Since `js-controller` 5.0\n    'ADAPTER_GET_OBJECTS_BY_ARRAY', // getForeignObjects supports an array of ids too. Since js-controller 5.0\n    'CONTROLLER_UI_UPGRADE', // Controller can be updated via sendToHost('upgradeController', ...)\n    'ADAPTER_WEBSERVER_UPGRADE', // Controller supports upgrading adapter and provides a webserver (triggered via sendToHost). Since `js-controller` 5.0\n] as const;\n\nexport const SUPPORTED_FEATURES = [...SUPPORTED_FEATURES_INTERNAL];\n\nexport type SupportedFeature = (typeof SUPPORTED_FEATURES)[number];\n\n/** Maximum possible value for 32-bit signed integer */\nexport const MAX_TIMEOUT = 2 ** 32 / 2 - 1;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;AAGO,MAAM,iBAAiB;AACvB,MAAM,oBAAoB;AAC1B,MAAM,oBAAoB;AAC1B,MAAM,qBAAqB;AAC3B,MAAM,mBAAmB;AACzB,MAAM,oBAAoB;AAC1B,MAAM,qBAAqB;AAC3B,MAAM,qBAAqB;AAC3B,MAAM,oBAAoB;AAC1B,MAAM,mBAAmB;AACzB,MAAM,oBAAoB;AAC1B,MAAM,sBAAsB,CAAC,SAAS,OAAO,SAAS,WAAW;AAGxE,IAAY;CAAZ,SAAYA,gBAAa;AAErB,EAAAA,eAAAA,eAAA,MAAA,IAAA,CAAA,IAAA;AAEA,EAAAA,eAAAA,eAAA,KAAA,IAAA,CAAA,IAAA;AAEA,EAAAA,eAAAA,eAAA,oBAAA,IAAA,CAAA,IAAA;AAEA,EAAAA,eAAAA,eAAA,4BAAA,IAAA,EAAA,IAAA;AAEA,EAAAA,eAAAA,eAAA,0BAAA,IAAA,EAAA,IAAA;AAEA,EAAAA,eAAAA,eAAA,kCAAA,IAAA,EAAA,IAAA;AAEA,EAAAA,eAAAA,eAAA,yBAAA,IAAA,GAAA,IAAA;AAEA,EAAAA,eAAAA,eAAA,0BAAA,IAAA,EAAA,IAAA;AAEA,EAAAA,eAAAA,eAAA,wBAAA,IAAA,EAAA,IAAA;AAEA,EAAAA,eAAAA,eAAA,wBAAA,IAAA,GAAA,IAAA;AAEA,EAAAA,eAAAA,eAAA,wBAAA,IAAA,EAAA,IAAA;AAEA,EAAAA,eAAAA,eAAA,sBAAA,IAAA,EAAA,IAAA;AAEA,EAAAA,eAAAA,eAAA,sBAAA,IAAA,GAAA,IAAA;AAEA,EAAAA,eAAAA,eAAA,qBAAA,IAAA,EAAA,IAAA;AAEA,EAAAA,eAAAA,eAAA,qBAAA,IAAA,GAAA,IAAA;AACJ,GA/BY,kBAAA,gBAAa,CAAA,EAAA;AAkCzB,MAAM,8BAA8B;EAChC;;EACA;;EACA;;EACA;;EACA;;EACA;;EACA;;EACA;;EACA;;EACA;;EACA;;EACA;;EACA;;EACA;;EACA;;EACA;;EACA;;;AAGG,MAAM,qBAAqB,CAAC,GAAG,2BAA2B;AAK1D,MAAM,cAAc,KAAK,KAAK,IAAI;",
  "names": ["STATE_QUALITY"]
}
