{
  "version": 3,
  "sources": ["../../../../src/lib/cli/cliCompact.ts"],
  "sourcesContent": ["import * as CLI from './messages.js';\nimport { CLICommand, type CLICommandOptions } from './cliCommand.js';\nimport { tools } from '@iobroker/js-controller-common';\nimport fs from 'fs-extra';\n\n/** Command ioBroker compact ... */\nexport class CLICompact extends CLICommand {\n    private readonly config: ioBroker.IoBrokerJson = fs.readJSONSync(tools.getConfigFileName());\n\n    constructor(options: CLICommandOptions) {\n        super(options);\n    }\n    /**\n     * Executes a command\n     *\n     * @param args\n     */\n    execute(args: any[]): void {\n        const { callback, showHelp } = this.options;\n        const command = args[0];\n        switch (command) {\n            case 'status':\n                return this.statusCompactModeHost();\n            case 'enable':\n            case 'on':\n                return this.setCompactModeHost(true);\n            case 'disable':\n            case 'off':\n                return this.setCompactModeHost(false);\n            default:\n                if (command && command.includes('.')) {\n                    if (args[1]) {\n                        switch (args[1]) {\n                            case 'status':\n                                return this.statusCompactModeInstance(command);\n                            case 'enable':\n                            case 'on':\n                                return this.setCompactModeInstance(command, true, args[2]);\n                            case 'disable':\n                            case 'off':\n                                return this.setCompactModeInstance(command, false);\n                            case 'group':\n                                return this.setCompactModeInstance(command, undefined, args[2]);\n                        }\n                    }\n                }\n\n                CLI.error.unknownCommand('compact', command);\n                showHelp();\n                return void callback(3);\n        }\n    }\n\n    /**\n     * Output status of compact mode for host\n     */\n    statusCompactModeHost(): void {\n        const { callback } = this.options;\n\n        const compactMode = !!this.config?.system?.compact;\n        console.log(`Compact mode for this host is currently ${compactMode ? 'enabled' : 'disabled'}`);\n\n        return void callback();\n    }\n\n    /**\n     * Set compact mode for this host\n     *\n     * @param targetState enable or disable compact mode for host\n     */\n    setCompactModeHost(targetState: boolean): void {\n        const { callback, dbConnect } = this.options;\n\n        dbConnect(params => {\n            const { isOffline } = params;\n\n            const currentState = !!this.config?.system?.compact;\n\n            if (targetState === currentState) {\n                console.log(`Compact mode for this host is already ${currentState ? 'enabled' : 'disabled'}`);\n                return void callback();\n            }\n\n            this.config.system = this.config.system || {};\n            this.config.system.compact = targetState;\n            const configFileName = tools.getConfigFileName();\n            fs.writeFileSync(configFileName, JSON.stringify(this.config, null, 4), 'utf8');\n\n            console.log();\n            console.log(`Compact mode for this host is now ${targetState ? 'enabled' : 'disabled'}`);\n\n            if (!isOffline) {\n                console.log();\n                console.log('Please restart ioBroker for this change to take effect!');\n            }\n            return void callback();\n        });\n    }\n\n    /**\n     * Output the compact mode status for a defined adapter instance\n     *\n     * @param instance instance to output status for\n     */\n    statusCompactModeInstance(instance: `${string}.${number}`): void {\n        const { callback, dbConnect } = this.options;\n\n        dbConnect(params => {\n            const { objects } = params;\n\n            if (!this.config.system?.compact) {\n                console.log('Compact mode is disabled for this host. All compact mode settings will have no effect!');\n                console.log();\n            }\n            objects.getObject(`system.adapter.${instance}`, (err, obj) => {\n                if (!err && obj) {\n                    if (!obj.common.compact) {\n                        console.log(\n                            'This adapter does not support compact mode. The below settings will have no effect!',\n                        );\n                        console.log();\n                    } else {\n                        console.log(`Adapter supports compact mode:     ${!!obj.common.compact}`);\n                    }\n                    console.log(`Compact mode enabled for instance: ${!!obj.common.runAsCompactMode}`);\n                    console.log(\n                        `Compact group:                     ${\n                            obj.common.compactGroup !== undefined ? obj.common.compactGroup : 1\n                        }`,\n                    );\n                    return void callback();\n                }\n                CLI.error.invalidInstance(instance);\n                return void callback(24);\n            });\n        });\n    }\n\n    /**\n     * Put given instance in compact mode group\n     *\n     * @param instance instance to put in group\n     * @param targetState if compact mode should be enabled for instance, if undefined `instance.common.runAsCompact` will not be updated\n     * @param groupId the compact group id, if not given, it will be put in controller group\n     */\n    setCompactModeInstance(instance: `${string}.${number}`, targetState?: boolean, groupId?: string | number): void {\n        const { callback, dbConnect } = this.options;\n\n        dbConnect(async params => {\n            const { objects } = params;\n\n            if (!this.config.system?.compact) {\n                console.log('Compact mode is disabled on this host. This setting will have no effect!');\n                console.log();\n            }\n\n            let obj: ioBroker.InstanceObject | undefined | null;\n            try {\n                obj = await objects.getObject(`system.adapter.${instance}`);\n            } catch {\n                // ignore\n            }\n\n            if (!obj) {\n                CLI.error.invalidInstance(instance);\n                return void callback(24);\n            }\n\n            if (!obj.common.compact) {\n                console.log('This adapter does not support compact mode. The below settings will have no effect!');\n                console.log();\n            } else {\n                console.log(`Adapter supports compact mode :    ${!!obj.common.compact}`);\n            }\n            let newRunAsCompactMode;\n            if (targetState !== undefined && targetState !== !!obj.common.runAsCompactMode) {\n                newRunAsCompactMode = targetState;\n            }\n            let newCompactGroup;\n            if (obj.common.compactGroup === undefined) {\n                obj.common.compactGroup = 1;\n                newCompactGroup = obj.common.compactGroup;\n            }\n            if (groupId !== undefined) {\n                groupId = typeof groupId === 'string' ? parseInt(groupId, 10) : groupId;\n                if (groupId !== obj.common.compactGroup) {\n                    newCompactGroup = groupId;\n                }\n            }\n            console.log(\n                `Compact mode enabled for instance: ${\n                    newRunAsCompactMode !== undefined ? `--> ${newRunAsCompactMode}` : !!obj.common.runAsCompactMode\n                }`,\n            );\n            console.log(\n                `Compact group:                     ${\n                    newCompactGroup !== undefined && obj.common.compactGroup !== newCompactGroup\n                        ? `--> ${newCompactGroup}`\n                        : obj.common.compactGroup\n                }`,\n            );\n            if (newRunAsCompactMode !== undefined || newCompactGroup !== undefined) {\n                if (newCompactGroup !== undefined) {\n                    obj.common.compactGroup = newCompactGroup;\n                }\n                if (newRunAsCompactMode !== undefined) {\n                    obj.common.runAsCompactMode = newRunAsCompactMode;\n                }\n\n                obj.from = `system.host.${tools.getHostName()}.cli`;\n                obj.ts = new Date().getTime();\n                objects.setObject(`system.adapter.${instance}`, obj, err => {\n                    if (err) {\n                        console.log(err);\n                    }\n                    console.log(`Instance settings for \"${instance}\" are changed.`);\n                    callback();\n                });\n            } else {\n                console.log('No settings changed.');\n                return void callback();\n            }\n        });\n    }\n}\n"],
  "mappings": "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",
  "names": ["fs"]
}
