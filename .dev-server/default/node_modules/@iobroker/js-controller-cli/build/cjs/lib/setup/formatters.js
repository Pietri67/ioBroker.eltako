"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var formatters_exports = {};
__export(formatters_exports, {
  formatBytes: () => formatBytes,
  formatRam: () => formatRam,
  formatSeconds: () => formatSeconds,
  formatSpeed: () => formatSpeed
});
module.exports = __toCommonJS(formatters_exports);
function formatSeconds(seconds) {
  let _seconds = seconds;
  const days = Math.floor(_seconds / (3600 * 24));
  _seconds %= 3600 * 24;
  let hours = Math.floor(_seconds / 3600);
  if (hours < 10) {
    hours = `0${hours}`;
  }
  _seconds %= 3600;
  let minutes = Math.floor(_seconds / 60);
  if (minutes < 10) {
    minutes = `0${minutes}`;
  }
  _seconds %= 60;
  _seconds = Math.floor(_seconds);
  if (_seconds < 10) {
    _seconds = `0${_seconds}`;
  }
  let text = "";
  if (days) {
    text += `${days}d. `;
  }
  text += `${hours}:${minutes}:${_seconds}`;
  return text;
}
function formatRam(bytes) {
  const GB = Math.floor(bytes / (1024 * 1024 * 1024) * 10) / 10;
  bytes %= 1024 * 1024 * 1024;
  const MB = Math.floor(bytes / (1024 * 1024) * 10) / 10;
  let text = "";
  if (GB > 1) {
    text += `${GB} GB`;
  } else {
    text += `${MB} MB`;
  }
  return text;
}
function formatSpeed(mhz) {
  return `${mhz} MHz`;
}
function formatBytes(bytes) {
  if (Math.abs(bytes) < 1024) {
    return `${bytes} B`;
  }
  const units = ["KiB", "MiB", "GiB", "TiB", "PiB", "EiB", "ZiB", "YiB"];
  let u = -1;
  do {
    bytes /= 1024;
    ++u;
  } while (Math.abs(bytes) >= 1024 && u < units.length - 1);
  return `${bytes.toFixed(1)} ${units[u]}`;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  formatBytes,
  formatRam,
  formatSeconds,
  formatSpeed
});
//# sourceMappingURL=formatters.js.map
