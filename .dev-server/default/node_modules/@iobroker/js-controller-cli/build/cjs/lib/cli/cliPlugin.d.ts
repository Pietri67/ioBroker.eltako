import { type CLICommandOptions, CLICommand } from './cliCommand.js';
interface CLIPluginOptions extends CLICommandOptions {
    /** If plugin is scoped on adapter */
    adapter?: string;
    /** If plugin is scoped on instance */
    instance?: string;
}
/** Command iobroker plugin <enable/disable/status> <pluginname> [--host this/hostname] ... */
export declare class CLIPlugin extends CLICommand<CLIPluginOptions> {
    /** @param options the cli command options */
    constructor(options: CLIPluginOptions);
    /**
     * Executes a command
     *
     * @param args parsed cli args
     */
    execute(args: any[]): void;
    /**
     * Enables or disables the given plugin
     *
     * @param args the parsed CLI args
     * @param enabled if plugin should be enabled
     */
    set(args: any[], enabled: boolean): void;
    /**
     * Prints the status of the given plugin
     *
     * @param args the parsed CLI arguments
     */
    status(args: any[]): void;
}
export {};
//# sourceMappingURL=cliPlugin.d.ts.map