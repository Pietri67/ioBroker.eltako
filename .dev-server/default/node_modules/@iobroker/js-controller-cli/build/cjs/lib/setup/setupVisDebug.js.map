{
  "version": 3,
  "sources": ["../../../../src/lib/setup/setupVisDebug.ts"],
  "sourcesContent": ["import fs from 'fs-extra';\nimport { tools } from '@iobroker/js-controller-common';\nimport path from 'node:path';\nimport { EXIT_CODES } from '@iobroker/js-controller-common';\n\nimport type { Client as ObjectsRedisClient } from '@iobroker/db-objects-redis';\nimport type { ProcessExitCallback } from '../_Types.js';\n\nexport interface CLIVisDebugOptions {\n    objects: ObjectsRedisClient;\n    processExit: ProcessExitCallback;\n}\n\nexport class VisDebug {\n    private readonly objects: ObjectsRedisClient;\n    private readonly processExit: ProcessExitCallback;\n\n    constructor(options: CLIVisDebugOptions) {\n        this.objects = options.objects;\n        this.processExit = options.processExit;\n    }\n\n    /**\n     * Upload widget directory to vis directory\n     *\n     * @param widgetDir directory of widgets\n     * @param adapter name of the adapter\n     * @param pathW widgets path\n     */\n    private async uploadWidgets(widgetDir: string, adapter: string, pathW: string): Promise<void> {\n        if (!fs.existsSync(widgetDir)) {\n            console.error(`Cannot upload widgets, because folder \"${widgetDir}\" does not exist`);\n            return;\n        }\n        const dirs = fs.readdirSync(widgetDir);\n\n        for (const dir of dirs) {\n            const stat = fs.statSync(`${widgetDir}/${dir}`);\n            if (stat.isDirectory()) {\n                await this.uploadWidgets(`${widgetDir}/${dir}`, adapter, `${pathW}/${dir}`);\n            } else {\n                console.log(`Upload \"${widgetDir}/${dir}\"`);\n                await this.objects.writeFile(adapter, `${pathW}/${dir}`, fs.readFileSync(`${widgetDir}/${dir}`));\n            }\n        }\n    }\n\n    /**\n     * Activates vis debug for given widget\n     *\n     * @param widgetset widget to activate vis debug for\n     */\n    async enableDebug(widgetset: string): Promise<void> {\n        let adapterDir: string | undefined;\n\n        if (widgetset) {\n            // Try to find out the adapter directory out of a list of options\n            const adapterNames2Try = [`vis-${widgetset}`, widgetset];\n            if (adapterNames2Try[0] === adapterNames2Try[1]) {\n                adapterNames2Try.splice(1, 1);\n            }\n            for (const adapterName of adapterNames2Try) {\n                try {\n                    const adapterDir2Try = tools.getAdapterDir(adapterName)!;\n                    // Query the entry\n                    const stats = fs.statSync(adapterDir2Try);\n\n                    // Is it a directory?\n                    if (stats.isDirectory()) {\n                        //found it!\n                        adapterDir = adapterDir2Try;\n                        break;\n                    }\n                } catch {\n                    // OK\n                }\n            }\n\n            if (!adapterDir) {\n                console.error(`Adapter not found. Tried: ${adapterNames2Try.join(', ')}`);\n                return void this.processExit(EXIT_CODES.MISSING_ADAPTER_FILES);\n            }\n        }\n\n        // copy index.html.original to index.html\n        // copy edit.html.original to edit.html\n        // correct appName.json\n        // correct config.js\n        const controllerDir = tools.getControllerDir();\n        let visDir = `${controllerDir}/node_modules/${tools.appName.toLowerCase()}.vis`;\n        if (!fs.existsSync(visDir)) {\n            visDir = `${controllerDir}/node_modules/${tools.appName.toLowerCase()}.vis`;\n            if (!fs.existsSync(visDir)) {\n                visDir = `${controllerDir}/../${tools.appName.toLowerCase()}.vis`;\n                if (!fs.existsSync(visDir)) {\n                    visDir = `${controllerDir}/../${tools.appName.toLowerCase()}.vis`;\n                    if (!fs.existsSync(visDir)) {\n                        console.error(`Cannot find ${tools.appName.toLowerCase()}.vis`);\n                        return void this.processExit(EXIT_CODES.MISSING_ADAPTER_FILES);\n                    }\n                }\n            }\n        }\n\n        if (fs.existsSync(`${visDir}/www/index.html.original`)) {\n            console.log(`Upload \"${path.normalize(`${visDir}/www/index.html.original`)}\"`);\n            const file = fs.readFileSync(`${visDir}/www/index.html.original`, 'utf8');\n            try {\n                await this.objects.writeFile('vis', 'index.html', file);\n            } catch (e) {\n                console.error(`Cannot save ${visDir}/vis/index.html: ${e.message}`);\n            }\n        }\n\n        if (fs.existsSync(`${visDir}/www/edit.html.original`)) {\n            console.log(`Upload \"${path.normalize(`${visDir}/www/edit.html.original`)}\"`);\n            const file = fs.readFileSync(`${visDir}/www/edit.html.original`, 'utf8');\n            try {\n                await this.objects.writeFile('vis', 'edit.html', file);\n            } catch (e) {\n                console.error(`Cannot save ${visDir}/vis/index.html: ${e.message}`);\n            }\n        }\n\n        if (fs.existsSync(`${visDir}/www/cache.manifest`)) {\n            console.log(`Modify \"${path.normalize(`${visDir}/www/cache.manifest`)}\"`);\n            let file = fs.readFileSync(`${visDir}/www/cache.manifest`, 'utf-8');\n            // if file does not exists\n            if (!file.toString().trim()) {\n                const version = fs.readJSONSync(`${visDir}/package.json`).version;\n                file = `CACHE MANIFEST\n#\n# vis Version ${version}\n# dev build 2\n\n\n\nNETWORK:\n    *\n\n\nCACHE:\n    ./img/disconnect.png\n\nFALLBACK:\n    ./index.html ./offline.html\n    ./edit.html ./offline.html\n`;\n            }\n            const n = file.match(/# dev build (\\d+)/)![1];\n            file = file.replace(`# dev build ${n}`, `# dev build ${parseInt(n, 10) + 1}`);\n            // also update it in the vis npm dir like vis does it by itself\n            fs.writeFileSync(`${visDir}/www/cache.manifest`, file);\n            try {\n                await this.objects.writeFile('vis', 'cache.manifest', file);\n            } catch (e) {\n                console.error(`Cannot save ${visDir}/www/cache.manifest: ${e.message}`);\n            }\n        }\n\n        const file = fs.readJSONSync(tools.getConfigFileName(), 'utf8');\n\n        if (!file.objects.noFileCache) {\n            file.objects.noFileCache = true;\n            fs.writeFileSync(tools.getConfigFileName(), JSON.stringify(file, null, 2));\n            await this.objects.enableFileCacheAsync(false);\n            console.log('Disable cache. ioBroker restart required! Execute \"iobroker restart\"');\n        }\n\n        if (widgetset) {\n            const { file } = await this.objects.readFile('vis', 'js/config.js', null);\n            let content = typeof file === 'string' ? file : file.toString();\n\n            content = content.replace(/[\\r\\n]/g, '');\n            const json: Record<string, any> = JSON.parse(content.match(/\"widgetSets\":\\s(.*)};/)![1]);\n            let found = false;\n            for (const widget of Object.values(json)) {\n                if (widget === widgetset || widget.name === widgetset) {\n                    found = true;\n                    break;\n                }\n            }\n            // if widget-set not found in config.js\n            if (!found) {\n                console.log('Modify config.js');\n                const pckg = fs.readJSONSync(`${adapterDir}/io-package.json`);\n                if (pckg.native && pckg.native.dependencies && pckg.native.dependencies.length) {\n                    json.push({\n                        name: widgetset,\n                        depends: pckg.native.dependencies,\n                    });\n                } else {\n                    json.push(widgetset);\n                }\n\n                content = content.replace(/\"widgetSets\":\\s+.*};/, `\"widgetSets\": ${JSON.stringify(json, null, 2)}};`);\n\n                await this.objects.writeFile('vis', 'js/config.js', content);\n                // upload all files into vis\n                console.log(`Upload ${adapterDir}/widgets`);\n                await this.uploadWidgets(`${adapterDir}/widgets`, 'vis', 'widgets');\n            } else {\n                // upload all files into vis\n                console.log(`Upload \"${adapterDir}/widgets\"`);\n                await this.uploadWidgets(`${adapterDir}/widgets`, 'vis', 'widgets');\n            }\n        }\n\n        this.processExit(EXIT_CODES.NO_ERROR);\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAAA,sBAAe;AACf,kCAAsB;AACtB,uBAAiB;AACjB,IAAAA,+BAA2B;AAUrB,MAAO,SAAQ;EACA;EACA;EAEjB,YAAY,SAA2B;AACnC,SAAK,UAAU,QAAQ;AACvB,SAAK,cAAc,QAAQ;EAC/B;;;;;;;;EASQ,MAAM,cAAc,WAAmB,SAAiB,OAAa;AACzE,QAAI,CAAC,gBAAAC,QAAG,WAAW,SAAS,GAAG;AAC3B,cAAQ,MAAM,0CAA0C,SAAS,kBAAkB;AACnF;IACJ;AACA,UAAM,OAAO,gBAAAA,QAAG,YAAY,SAAS;AAErC,eAAW,OAAO,MAAM;AACpB,YAAM,OAAO,gBAAAA,QAAG,SAAS,GAAG,SAAS,IAAI,GAAG,EAAE;AAC9C,UAAI,KAAK,YAAW,GAAI;AACpB,cAAM,KAAK,cAAc,GAAG,SAAS,IAAI,GAAG,IAAI,SAAS,GAAG,KAAK,IAAI,GAAG,EAAE;MAC9E,OAAO;AACH,gBAAQ,IAAI,WAAW,SAAS,IAAI,GAAG,GAAG;AAC1C,cAAM,KAAK,QAAQ,UAAU,SAAS,GAAG,KAAK,IAAI,GAAG,IAAI,gBAAAA,QAAG,aAAa,GAAG,SAAS,IAAI,GAAG,EAAE,CAAC;MACnG;IACJ;EACJ;;;;;;EAOA,MAAM,YAAY,WAAiB;AAC/B,QAAI;AAEJ,QAAI,WAAW;AAEX,YAAM,mBAAmB,CAAC,OAAO,SAAS,IAAI,SAAS;AACvD,UAAI,iBAAiB,CAAC,MAAM,iBAAiB,CAAC,GAAG;AAC7C,yBAAiB,OAAO,GAAG,CAAC;MAChC;AACA,iBAAW,eAAe,kBAAkB;AACxC,YAAI;AACA,gBAAM,iBAAiB,kCAAM,cAAc,WAAW;AAEtD,gBAAM,QAAQ,gBAAAA,QAAG,SAAS,cAAc;AAGxC,cAAI,MAAM,YAAW,GAAI;AAErB,yBAAa;AACb;UACJ;QACJ,QAAQ;QAER;MACJ;AAEA,UAAI,CAAC,YAAY;AACb,gBAAQ,MAAM,6BAA6B,iBAAiB,KAAK,IAAI,CAAC,EAAE;AACxE,eAAO,KAAK,KAAK,YAAY,wCAAW,qBAAqB;MACjE;IACJ;AAMA,UAAM,gBAAgB,kCAAM,iBAAgB;AAC5C,QAAI,SAAS,GAAG,aAAa,iBAAiB,kCAAM,QAAQ,YAAW,CAAE;AACzE,QAAI,CAAC,gBAAAA,QAAG,WAAW,MAAM,GAAG;AACxB,eAAS,GAAG,aAAa,iBAAiB,kCAAM,QAAQ,YAAW,CAAE;AACrE,UAAI,CAAC,gBAAAA,QAAG,WAAW,MAAM,GAAG;AACxB,iBAAS,GAAG,aAAa,OAAO,kCAAM,QAAQ,YAAW,CAAE;AAC3D,YAAI,CAAC,gBAAAA,QAAG,WAAW,MAAM,GAAG;AACxB,mBAAS,GAAG,aAAa,OAAO,kCAAM,QAAQ,YAAW,CAAE;AAC3D,cAAI,CAAC,gBAAAA,QAAG,WAAW,MAAM,GAAG;AACxB,oBAAQ,MAAM,eAAe,kCAAM,QAAQ,YAAW,CAAE,MAAM;AAC9D,mBAAO,KAAK,KAAK,YAAY,wCAAW,qBAAqB;UACjE;QACJ;MACJ;IACJ;AAEA,QAAI,gBAAAA,QAAG,WAAW,GAAG,MAAM,0BAA0B,GAAG;AACpD,cAAQ,IAAI,WAAW,iBAAAC,QAAK,UAAU,GAAG,MAAM,0BAA0B,CAAC,GAAG;AAC7E,YAAMC,QAAO,gBAAAF,QAAG,aAAa,GAAG,MAAM,4BAA4B,MAAM;AACxE,UAAI;AACA,cAAM,KAAK,QAAQ,UAAU,OAAO,cAAcE,KAAI;MAC1D,SAAS,GAAG;AACR,gBAAQ,MAAM,eAAe,MAAM,oBAAoB,EAAE,OAAO,EAAE;MACtE;IACJ;AAEA,QAAI,gBAAAF,QAAG,WAAW,GAAG,MAAM,yBAAyB,GAAG;AACnD,cAAQ,IAAI,WAAW,iBAAAC,QAAK,UAAU,GAAG,MAAM,yBAAyB,CAAC,GAAG;AAC5E,YAAMC,QAAO,gBAAAF,QAAG,aAAa,GAAG,MAAM,2BAA2B,MAAM;AACvE,UAAI;AACA,cAAM,KAAK,QAAQ,UAAU,OAAO,aAAaE,KAAI;MACzD,SAAS,GAAG;AACR,gBAAQ,MAAM,eAAe,MAAM,oBAAoB,EAAE,OAAO,EAAE;MACtE;IACJ;AAEA,QAAI,gBAAAF,QAAG,WAAW,GAAG,MAAM,qBAAqB,GAAG;AAC/C,cAAQ,IAAI,WAAW,iBAAAC,QAAK,UAAU,GAAG,MAAM,qBAAqB,CAAC,GAAG;AACxE,UAAIC,QAAO,gBAAAF,QAAG,aAAa,GAAG,MAAM,uBAAuB,OAAO;AAElE,UAAI,CAACE,MAAK,SAAQ,EAAG,KAAI,GAAI;AACzB,cAAM,UAAU,gBAAAF,QAAG,aAAa,GAAG,MAAM,eAAe,EAAE;AAC1D,QAAAE,QAAO;;gBAEP,OAAO;;;;;;;;;;;;;;;;MAgBX;AACA,YAAM,IAAIA,MAAK,MAAM,mBAAmB,EAAG,CAAC;AAC5C,MAAAA,QAAOA,MAAK,QAAQ,eAAe,CAAC,IAAI,eAAe,SAAS,GAAG,EAAE,IAAI,CAAC,EAAE;AAE5E,sBAAAF,QAAG,cAAc,GAAG,MAAM,uBAAuBE,KAAI;AACrD,UAAI;AACA,cAAM,KAAK,QAAQ,UAAU,OAAO,kBAAkBA,KAAI;MAC9D,SAAS,GAAG;AACR,gBAAQ,MAAM,eAAe,MAAM,wBAAwB,EAAE,OAAO,EAAE;MAC1E;IACJ;AAEA,UAAM,OAAO,gBAAAF,QAAG,aAAa,kCAAM,kBAAiB,GAAI,MAAM;AAE9D,QAAI,CAAC,KAAK,QAAQ,aAAa;AAC3B,WAAK,QAAQ,cAAc;AAC3B,sBAAAA,QAAG,cAAc,kCAAM,kBAAiB,GAAI,KAAK,UAAU,MAAM,MAAM,CAAC,CAAC;AACzE,YAAM,KAAK,QAAQ,qBAAqB,KAAK;AAC7C,cAAQ,IAAI,sEAAsE;IACtF;AAEA,QAAI,WAAW;AACX,YAAM,EAAE,MAAAE,MAAI,IAAK,MAAM,KAAK,QAAQ,SAAS,OAAO,gBAAgB,IAAI;AACxE,UAAI,UAAU,OAAOA,UAAS,WAAWA,QAAOA,MAAK,SAAQ;AAE7D,gBAAU,QAAQ,QAAQ,WAAW,EAAE;AACvC,YAAM,OAA4B,KAAK,MAAM,QAAQ,MAAM,uBAAuB,EAAG,CAAC,CAAC;AACvF,UAAI,QAAQ;AACZ,iBAAW,UAAU,OAAO,OAAO,IAAI,GAAG;AACtC,YAAI,WAAW,aAAa,OAAO,SAAS,WAAW;AACnD,kBAAQ;AACR;QACJ;MACJ;AAEA,UAAI,CAAC,OAAO;AACR,gBAAQ,IAAI,kBAAkB;AAC9B,cAAM,OAAO,gBAAAF,QAAG,aAAa,GAAG,UAAU,kBAAkB;AAC5D,YAAI,KAAK,UAAU,KAAK,OAAO,gBAAgB,KAAK,OAAO,aAAa,QAAQ;AAC5E,eAAK,KAAK;YACN,MAAM;YACN,SAAS,KAAK,OAAO;WACxB;QACL,OAAO;AACH,eAAK,KAAK,SAAS;QACvB;AAEA,kBAAU,QAAQ,QAAQ,wBAAwB,iBAAiB,KAAK,UAAU,MAAM,MAAM,CAAC,CAAC,IAAI;AAEpG,cAAM,KAAK,QAAQ,UAAU,OAAO,gBAAgB,OAAO;AAE3D,gBAAQ,IAAI,UAAU,UAAU,UAAU;AAC1C,cAAM,KAAK,cAAc,GAAG,UAAU,YAAY,OAAO,SAAS;MACtE,OAAO;AAEH,gBAAQ,IAAI,WAAW,UAAU,WAAW;AAC5C,cAAM,KAAK,cAAc,GAAG,UAAU,YAAY,OAAO,SAAS;MACtE;IACJ;AAEA,SAAK,YAAY,wCAAW,QAAQ;EACxC;;",
  "names": ["import_js_controller_common", "fs", "path", "file"]
}
