{
  "version": 3,
  "sources": ["../../../../src/lib/setup/setupLicense.ts"],
  "sourcesContent": ["import type { Client as ObjectsRedisClient } from '@iobroker/db-objects-redis';\nimport { tools } from '@iobroker/js-controller-common';\nimport fs from 'fs-extra';\nimport jwt from 'jsonwebtoken';\n\nexport interface CLILicenseOptions {\n    objects: ObjectsRedisClient;\n}\n\nexport class License {\n    private readonly objects: ObjectsRedisClient;\n\n    constructor(options: CLILicenseOptions) {\n        this.objects = options.objects;\n    }\n\n    /**\n     * Read info from  '/etc/iob_vendor.json' and executes instructions stored there\n     *\n     * @param file path of license file\n     */\n    async setLicense(file: string): Promise<void> {\n        if (fs.existsSync(file)) {\n            file = fs.readFileSync(file, 'utf8');\n        }\n        // try to encode license\n        const license = jwt.decode(file);\n        if (!license) {\n            throw new Error('License cannot be decoded');\n        }\n        if (!tools.isObject(license) || !license.name) {\n            throw new Error('Name not found in the license');\n        }\n        const adapter = license.name.split('.')[1];\n        if (!adapter) {\n            throw new Error(`Invalid license name ${license.name}`);\n        }\n\n        // read all instances of this adapter\n        const arr = await this.objects.getObjectListAsync(\n            {\n                startkey: `system.adapter.${adapter}.`,\n                endkey: `system.adapter.${adapter}.\\u9999`,\n            },\n            { checked: true },\n        );\n\n        let updated = 0;\n\n        if (arr.rows.length) {\n            for (let g = 0; g < arr.rows.length; g++) {\n                const obj = arr.rows[g].value;\n                if (obj && obj.type === 'instance') {\n                    obj.native = obj.native || {};\n                    obj.native.license = file;\n                    updated++;\n                    try {\n                        await this.objects.setObjectAsync(obj._id, obj);\n                        console.log(`Instance \"${obj._id}\" updated`);\n                    } catch (err) {\n                        console.error(`Cannot update \"${obj._id}\": ${err}`);\n                    }\n                }\n            }\n        }\n\n        if (!updated) {\n            console.warn(`no instances of ${adapter} found`);\n            if (arr.rows.length) {\n                for (let g = 0; g < arr.rows.length; g++) {\n                    const obj = arr.rows[g].value;\n                    if (obj && obj.type === 'adapter') {\n                        obj.native = obj.native || {};\n                        obj.native.license = file;\n                        updated++;\n                        try {\n                            await this.objects.setObjectAsync(obj._id, obj);\n                            console.log(`Adapter \"${obj._id}\" updated`);\n                        } catch (err) {\n                            console.error(`Cannot update \"${obj._id}\": ${err}`);\n                        }\n                    }\n                }\n            }\n        }\n\n        if (!updated) {\n            console.error(`no installations of ${adapter} found`);\n        }\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;AAAA,kCAAsB;AACtB,sBAAe;AACf,0BAAgB;AAMV,MAAO,QAAO;EACC;EAEjB,YAAY,SAA0B;AAClC,SAAK,UAAU,QAAQ;EAC3B;;;;;;EAOA,MAAM,WAAW,MAAY;AACzB,QAAI,gBAAAA,QAAG,WAAW,IAAI,GAAG;AACrB,aAAO,gBAAAA,QAAG,aAAa,MAAM,MAAM;IACvC;AAEA,UAAM,UAAU,oBAAAC,QAAI,OAAO,IAAI;AAC/B,QAAI,CAAC,SAAS;AACV,YAAM,IAAI,MAAM,2BAA2B;IAC/C;AACA,QAAI,CAAC,kCAAM,SAAS,OAAO,KAAK,CAAC,QAAQ,MAAM;AAC3C,YAAM,IAAI,MAAM,+BAA+B;IACnD;AACA,UAAM,UAAU,QAAQ,KAAK,MAAM,GAAG,EAAE,CAAC;AACzC,QAAI,CAAC,SAAS;AACV,YAAM,IAAI,MAAM,wBAAwB,QAAQ,IAAI,EAAE;IAC1D;AAGA,UAAM,MAAM,MAAM,KAAK,QAAQ,mBAC3B;MACI,UAAU,kBAAkB,OAAO;MACnC,QAAQ,kBAAkB,OAAO;OAErC,EAAE,SAAS,KAAI,CAAE;AAGrB,QAAI,UAAU;AAEd,QAAI,IAAI,KAAK,QAAQ;AACjB,eAAS,IAAI,GAAG,IAAI,IAAI,KAAK,QAAQ,KAAK;AACtC,cAAM,MAAM,IAAI,KAAK,CAAC,EAAE;AACxB,YAAI,OAAO,IAAI,SAAS,YAAY;AAChC,cAAI,SAAS,IAAI,UAAU,CAAA;AAC3B,cAAI,OAAO,UAAU;AACrB;AACA,cAAI;AACA,kBAAM,KAAK,QAAQ,eAAe,IAAI,KAAK,GAAG;AAC9C,oBAAQ,IAAI,aAAa,IAAI,GAAG,WAAW;UAC/C,SAAS,KAAK;AACV,oBAAQ,MAAM,kBAAkB,IAAI,GAAG,MAAM,GAAG,EAAE;UACtD;QACJ;MACJ;IACJ;AAEA,QAAI,CAAC,SAAS;AACV,cAAQ,KAAK,mBAAmB,OAAO,QAAQ;AAC/C,UAAI,IAAI,KAAK,QAAQ;AACjB,iBAAS,IAAI,GAAG,IAAI,IAAI,KAAK,QAAQ,KAAK;AACtC,gBAAM,MAAM,IAAI,KAAK,CAAC,EAAE;AACxB,cAAI,OAAO,IAAI,SAAS,WAAW;AAC/B,gBAAI,SAAS,IAAI,UAAU,CAAA;AAC3B,gBAAI,OAAO,UAAU;AACrB;AACA,gBAAI;AACA,oBAAM,KAAK,QAAQ,eAAe,IAAI,KAAK,GAAG;AAC9C,sBAAQ,IAAI,YAAY,IAAI,GAAG,WAAW;YAC9C,SAAS,KAAK;AACV,sBAAQ,MAAM,kBAAkB,IAAI,GAAG,MAAM,GAAG,EAAE;YACtD;UACJ;QACJ;MACJ;IACJ;AAEA,QAAI,CAAC,SAAS;AACV,cAAQ,MAAM,uBAAuB,OAAO,QAAQ;IACxD;EACJ;;",
  "names": ["fs", "jwt"]
}
