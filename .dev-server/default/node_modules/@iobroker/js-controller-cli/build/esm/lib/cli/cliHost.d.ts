import { CLICommand, type CLICommandOptions } from './cliCommand.js';
/** Command iobroker host ... */
export declare class CLIHost extends CLICommand {
    constructor(options: CLICommandOptions);
    /**
     * Executes a command
     *
     * @param args
     */
    execute(args: any[]): void;
    /**
     * When in single-host mode, changes the hostname of the host and all instances to the current one
     *
     * @param _args
     */
    self(_args: any[]): void;
    /**
     * Changes the current host's hostname to the given one
     *
     * @param args
     */
    set(args: any[]): void;
    /**
     * Removes the host with the given name
     *
     * @param args
     */
    remove(args: any[]): void;
    /**
     * Renames the host with the given name to the current one (opposite of `set()`)
     *
     * @param args
     */
    rename(args: any[]): void;
    /**
     * Renames the host with the hostname `oldHostname` to the hostname `newHostname`
     *
     * @param oldHostname The hostname to rename from or `undefined` to rename all hosts (single-host mode only!)
     * @param newHostname The hostname to rename to
     */
    renameHost(oldHostname: string | undefined, newHostname: string): void;
}
//# sourceMappingURL=cliHost.d.ts.map