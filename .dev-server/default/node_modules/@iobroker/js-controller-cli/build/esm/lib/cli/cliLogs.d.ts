import { CLICommand, type CLICommandOptions } from './cliCommand.js';
interface CLILogsOptions {
    /** Whether to show today's full log */
    complete?: boolean;
    /** An optional RegExp to filter by */
    regex?: RegExp;
}
/** Command ioBroker state ... */
export declare class CLILogs extends CLICommand {
    private readonly fileSizes;
    private isReady;
    constructor(options: CLICommandOptions);
    /**
     * Executes a command
     *
     * @param args
     * @param params additional parsed CLI parameters
     */
    execute(args: any[], params: Record<string, any>): void;
    /**
     * Called by chokidar when watched files change
     *
     * @param options some options
     * @param event The type of change
     * @param path Which path has changed
     * @param stats Information about the file
     */
    watchHandler(options: CLILogsOptions, event: string, path: string, stats: Record<string, any>): void;
    /**
     * If the log file belongs to today
     *
     * @param path The log file path
     */
    isTodaysLogfile(path: string): boolean;
    /**
     * Streams a portion of a file to the console
     *
     * @param path The file to stream
     * @param start The offset in bytes where to start
     * @param options some options
     */
    streamChange(path: string, start: number, options: CLILogsOptions): void;
}
export {};
//# sourceMappingURL=cliLogs.d.ts.map