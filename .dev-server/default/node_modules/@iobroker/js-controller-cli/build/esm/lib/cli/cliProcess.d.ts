import { CLICommand } from '../../lib/cli/cliCommand.js';
import type { CLICommandOptions } from '../../lib/cli/cliCommand.js';
export declare class CLIProcess extends CLICommand {
    constructor(options: CLICommandOptions);
    /**
     * Starts one or more adapters or the js-controller
     *
     * @param args parsed cli arguments
     */
    start(args: any[]): Promise<void>;
    /**
     * Restarts one or more instances or the js-controller
     *
     * @param args parsed cli arguments
     */
    restart(args: any[]): Promise<void>;
    /**
     * Stops one or more adapters or the js-controller
     *
     * @param args parsed cli arguments
     */
    stop(args: any[]): Promise<void>;
    /**
     * Starts or stops all adapters
     *
     * @param enabled if adapters should be started or stopped
     */
    setAllAdaptersEnabled(enabled: boolean): void;
    /**
     * Starts or stops a single or all instances of adapter.
     * If there are multiple instances, all will be started/stopped/restarted
     *
     * @param adapter The adapter to start
     * @param enabled If adapter should be started or stopped
     * @param [restartIfRunning] Whether running instances should be restarted
     */
    setAdapterEnabled(adapter: string, enabled: boolean, restartIfRunning?: boolean): void;
    /**
     * Starts or stops a specific adapter instance
     *
     * @param instance The instance to start, e.g. "adaptername.0"
     * @param enabled If the instance should be started or stopped
     * @param [restartIfRunning] Whether running instances should be restarted
     */
    setAdapterInstanceEnabled(instance: string, enabled: boolean, restartIfRunning?: boolean): void;
    /**
     * Starts the JS controller
     */
    startJSController(): Promise<void>;
    /**
     * Stops the JS controller
     */
    static stopJSController(): Promise<void>;
    /** Restarts the JS controller */
    restartJSController(): Promise<void>;
    /**
     * Checks if ioBroker is running or not
     *
     * @param args parsed cli arguments
     */
    status(args: any[]): void;
}
//# sourceMappingURL=cliProcess.d.ts.map