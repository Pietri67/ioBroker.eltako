/**
 * Get disk warning level from state
 *
 * @param state disk warning state, normally with value of type number in %
 * @returns The new disk warning level in %
 */
export declare function getDiskWarningLevel(state: ioBroker.State): number;
/** Default value for disk warning level */
export declare const DEFAULT_DISK_WARNING_LEVEL = 5;
interface GetCronExpressionOptions {
    /** The cron expression in the schedule */
    cronExpression: string;
    /** The connection type of the instance */
    connectionType?: ioBroker.ConnectionType;
}
/**
 * Delay the instance start if the expression has no seconds, and it is a cloud connection
 *
 * @param options information about the cron expression and connection type
 */
export declare function getCronExpression(options: GetCronExpressionOptions): string;
export {};
//# sourceMappingURL=utils.d.ts.map