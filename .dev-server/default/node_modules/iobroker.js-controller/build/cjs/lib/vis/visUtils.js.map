{
  "version": 3,
  "sources": ["../../../../src/lib/vis/visUtils.js"],
  "sourcesContent": ["/**\n * These functions are copied from https://github.com/ioBroker/ioBroker.vis-2/blob/master/src/src/Vis/visUtils.jsx\n */\n/**\n * Stringify-parse copy with type inference\n *\n * @param obj The object which should be cloned\n */\nfunction deepClone(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\n\n/**\n * Determine if the string is of form identifier:ioBrokerId, like, val:hm-rpc.0.device.channel.state\n *\n * @param assignment the possible assignment to check\n * @returns\n */\nfunction isIdBinding(assignment) {\n    return !!assignment.match(/^[\\d\\w_]+:\\s?[-.\\d\\w_#]+$/);\n}\n\nfunction getWidgetGroup(views, view, widget) {\n    const widgets = views[view].widgets;\n    let members;\n    if (widgets && typeof widgets === 'object') {\n        for (const w of Object.keys(widgets)) {\n            members = widgets[w].data.members;\n            if (members && members.includes(widget)) {\n                return w;\n            }\n        }\n    }\n    return null;\n}\n\nfunction extractBinding(format) {\n    const oid = format.match(/{(.+?)}/g);\n    let result = null;\n\n    if (oid) {\n        if (oid.length > 50) {\n            console.warn(`Too many bindings in one widget: ${oid.length}[max = 50]`);\n        }\n\n        for (let p = 0; p < oid.length && p < 50; p++) {\n            const _oid = oid[p].substring(1, oid[p].length - 1);\n            if (_oid[0] === '{') {\n                continue;\n            }\n            // If the first symbol is '\"' => it is JSON\n            if (_oid && _oid[0] === '\"') {\n                continue;\n            }\n            const parts = _oid.split(';');\n            result = result || [];\n            let systemOid = parts[0].trim();\n            let visOid = systemOid;\n\n            let test1 = visOid.substring(visOid.length - 4).trim();\n            let test2 = visOid.substring(visOid.length - 3).trim();\n\n            if (visOid && test1 !== '.val' && test2 !== '.ts' && test2 !== '.lc' && test1 !== '.ack') {\n                visOid += '.val';\n            }\n\n            const isSeconds = test2 === '.ts' || test2 === '.lc';\n\n            test1 = systemOid.substring(systemOid.length - 4);\n            test2 = systemOid.substring(systemOid.length - 3);\n\n            if (test1 === '.val' || test1 === '.ack') {\n                systemOid = systemOid.substring(0, systemOid.length - 4);\n            } else if (test2 === '.lc' || test2 === '.ts') {\n                systemOid = systemOid.substring(0, systemOid.length - 3);\n            }\n            let operations = null;\n            const isEval =\n                visOid.match(/^[\\d\\w_]+:\\s?[-._/ :!#$%&()+=@^{}|~\\p{Ll}\\p{Lu}\\p{Nd}]+$/u) ||\n                (!visOid.length && parts.length > 0); // (visOid.indexOf(':') !== -1) && (visOid.indexOf('::') === -1);\n\n            if (isEval) {\n                const xx = visOid.split(':', 2);\n                const yy = systemOid.split(':', 2);\n                visOid = xx[1].trim();\n                systemOid = yy[1].trim();\n                operations = [];\n                operations.push({\n                    op: 'eval',\n                    arg: [\n                        {\n                            name: xx[0],\n                            visOid,\n                            systemOid,\n                        },\n                    ],\n                });\n            }\n\n            for (let u = 1; u < parts.length; u++) {\n                // eval construction\n                if (isEval) {\n                    const trimmed = parts[u].trim();\n                    if (isIdBinding(trimmed)) {\n                        // parts[u].indexOf(':') !== -1 && parts[u].indexOf('::') === -1) {\n                        const argParts = trimmed.split(':', 2);\n                        let _visOid = argParts[1].trim();\n                        let _systemOid = _visOid;\n\n                        test1 = _visOid.substring(_visOid.length - 4);\n                        test2 = _visOid.substring(_visOid.length - 3);\n\n                        if (test1 !== '.val' && test2 !== '.ts' && test2 !== '.lc' && test1 !== '.ack') {\n                            _visOid += '.val';\n                        }\n\n                        test1 = _systemOid.substring(_systemOid.length - 4);\n\n                        if (test1 === '.val' || test1 === '.ack') {\n                            _systemOid = _systemOid.substring(0, _systemOid.length - 4);\n                        } else {\n                            test2 = _systemOid.substring(_systemOid.length - 3);\n                            if (test2 === '.lc' || test2 === '.ts') {\n                                _systemOid = _systemOid.substring(0, _systemOid.length - 3);\n                            }\n                        }\n\n                        operations[0].arg.push({\n                            name: argParts[0].trim(),\n                            visOid: _visOid,\n                            systemOid: _systemOid,\n                        });\n                    } else {\n                        parts[u] = parts[u].replace(/::/g, ':');\n                        if (operations[0].formula) {\n                            const n = deepClone(operations[0]);\n                            n.formula = parts[u];\n                            operations.push(n);\n                        } else {\n                            operations[0].formula = parts[u];\n                        }\n                    }\n                } else {\n                    const parse = parts[u].match(/([\\w\\s/+*-]+)(\\(.+\\))?/);\n                    if (parse && parse[1]) {\n                        parse[1] = parse[1].trim();\n                        // operators requires parameter\n                        if (\n                            parse[1] === '*' ||\n                            parse[1] === '+' ||\n                            parse[1] === '-' ||\n                            parse[1] === '/' ||\n                            parse[1] === '%' ||\n                            parse[1] === 'min' ||\n                            parse[1] === 'max'\n                        ) {\n                            if (parse[2] === undefined) {\n                                console.log(`Invalid format of format string: ${format}`);\n                                parse[2] = null;\n                            } else {\n                                parse[2] = (parse[2] || '').trim().replace(',', '.');\n                                parse[2] = parse[2].substring(1, parse[2].length - 1);\n                                parse[2] = parseFloat(parse[2].trim());\n\n                                if (parse[2].toString() === 'NaN') {\n                                    console.log(`Invalid format of format string: ${format}`);\n                                    parse[2] = null;\n                                } else {\n                                    operations = operations || [];\n                                    operations.push({ op: parse[1], arg: parse[2] });\n                                }\n                            }\n                        } else if (parse[1] === 'date' || parse[1] === 'momentDate') {\n                            // date formatting\n                            operations = operations || [];\n                            parse[2] = (parse[2] || '').trim();\n                            parse[2] = parse[2].substring(1, parse[2].length - 1);\n                            operations.push({ op: parse[1], arg: parse[2] });\n                        } else if (parse[1] === 'array') {\n                            // returns array[value]. e.g.: {id.ack;array(ack is false,ack is true)}\n                            operations = operations || [];\n                            let param = (parse[2] || '').trim();\n                            param = param.substring(1, param.length - 1);\n                            param = param.split(',');\n                            if (Array.isArray(param)) {\n                                operations.push({ op: parse[1], arg: param }); // xxx\n                            }\n                        } else if (parse[1] === 'value') {\n                            // value formatting\n                            operations = operations || [];\n                            let param = parse[2] === undefined ? '(2)' : parse[2] || '';\n                            param = param.trim();\n                            param = param.substring(1, param.length - 1);\n                            operations.push({ op: parse[1], arg: param });\n                        } else if (parse[1] === 'pow' || parse[1] === 'round' || parse[1] === 'random') {\n                            // operators have optional parameter\n                            if (parse[2] === undefined) {\n                                operations = operations || [];\n                                operations.push({ op: parse[1] });\n                            } else {\n                                parse[2] = (parse[2] || '').trim().replace(',', '.');\n                                parse[2] = parse[2].substring(1, parse[2].length - 1);\n                                parse[2] = parseFloat(parse[2].trim());\n\n                                if (parse[2].toString() === 'NaN') {\n                                    console.log(`Invalid format of format string: ${format}`);\n                                    parse[2] = null;\n                                } else {\n                                    operations = operations || [];\n                                    operations.push({ op: parse[1], arg: parse[2] });\n                                }\n                            }\n                        } else if (parse[1] === 'json') {\n                            // json(objPropPath)  ex: json(prop1);  json(prop1.propA)\n                            operations = operations || [];\n                            parse[2] = (parse[2] || '').trim();\n                            parse[2] = parse[2].substring(1, parse[2].length - 1);\n                            operations.push({ op: parse[1], arg: parse[2] });\n                        } else {\n                            // operators without parameter\n                            operations = operations || [];\n                            operations.push({ op: parse[1] });\n                        }\n                    } else {\n                        console.log(`Invalid format ${format}`);\n                    }\n                }\n            }\n\n            result.push({\n                visOid,\n                systemOid,\n                token: oid[p],\n                operations: operations || undefined,\n                format,\n                isSeconds,\n            });\n        }\n    }\n\n    return result;\n}\n\nfunction replaceGroupAttr(inputStr, groupAttrList) {\n    let newString = inputStr;\n    let match = false;\n    // old style: groupAttr0, groupAttr1, groupAttr2, ...\n    let ms = inputStr.match(/(groupAttr\\d+)+?/g);\n    if (ms) {\n        match = true;\n        ms.forEach(m => {\n            const val = groupAttrList[m];\n            if (val === null || val === undefined) {\n                newString = newString.replace(/groupAttr(\\d+)/, '');\n            } else {\n                newString = newString.replace(/groupAttr(\\d+)/, groupAttrList[m]);\n            }\n        });\n    }\n\n    // new style: %html%, %myAttr%, ...\n    ms = inputStr.match(/%([-_a-zA-Z\\d]+)+?%/g);\n    if (ms) {\n        match = true;\n        ms.forEach(m => {\n            const attr = m.substring(1, m.length - 1);\n            const val = groupAttrList[attr];\n            if (val === null || val === undefined) {\n                newString = newString.replace(m, '');\n            } else {\n                newString = newString.replace(m, val);\n            }\n        });\n    }\n\n    return { doesMatch: match, newString };\n}\n\nfunction getUsedObjectIDsInWidget(views, view, wid, linkContext) {\n    // Check all attributes\n    const widget = views[view].widgets[wid];\n\n    // fix error in naming\n    if (widget.groupped) {\n        widget.grouped = true;\n        delete widget.groupped;\n    }\n\n    // rename hqWidgets => hqwidgets\n    if (widget.widgetSet === 'hqWidgets') {\n        widget.widgetSet = 'hqwidgets';\n    }\n\n    // rename RGraph => rgraph\n    if (widget.widgetSet === 'RGraph') {\n        widget.widgetSet = 'rgraph';\n    }\n\n    // rename timeAndWeather => timeandweather\n    if (widget.widgetSet === 'timeAndWeather') {\n        widget.widgetSet = 'timeandweather';\n    }\n\n    // convert \"Show on Value\" to HTML\n    if (widget.tpl === 'tplShowValue') {\n        widget.tpl = 'tplHtml';\n        widget.data['visibility-oid'] = widget.data.oid;\n        widget.data['visibility-val'] = widget.data.value;\n        delete widget.data.oid;\n        delete widget.data.value;\n    }\n\n    // convert \"Hide on >0/True\" to HTML\n    if (widget.tpl === 'tplHideTrue') {\n        widget.tpl = 'tplHtml';\n        widget.data['visibility-cond'] = '!=';\n        widget.data['visibility-oid'] = widget.data.oid;\n        widget.data['visibility-val'] = true;\n        delete widget.data.oid;\n    }\n\n    // convert \"Hide on 0/False\" to HTML\n    if (widget.tpl === 'tplHide') {\n        widget.tpl = 'tplHtml';\n        widget.data['visibility-cond'] = '!=';\n        widget.data['visibility-oid'] = widget.data.oid;\n        widget.data['visibility-val'] = false;\n        delete widget.data.oid;\n    }\n\n    // convert \"Door/Window sensor\" to HTML\n    if (widget.tpl === 'tplHmWindow') {\n        widget.tpl = 'tplValueBool';\n        widget.data.html_false = widget.data.html_closed;\n        widget.data.html_true = widget.data.html_open;\n        delete widget.data.html_closed;\n        delete widget.data.html_open;\n    }\n\n    // convert \"Door/Window sensor\" to HTML\n    if (widget.tpl === 'tplHmWindowRotary') {\n        widget.tpl = 'tplValueListHtml8';\n        widget.data.count = 2;\n        widget.data.value0 = widget.data.html_closed;\n        widget.data.value1 = widget.data.html_open;\n        widget.data.value2 = widget.data.html_tilt;\n        delete widget.data.html_closed;\n        delete widget.data.html_open;\n        delete widget.data.html_tilt;\n    }\n\n    // convert \"tplBulbOnOff\" to tplBulbOnOffCtrl\n    if (widget.tpl === 'tplBulbOnOff') {\n        widget.tpl = 'tplBulbOnOffCtrl';\n        widget.data.readOnly = true;\n    }\n\n    // convert \"tplValueFloatBarVertical\" to tplValueFloatBar\n    if (widget.tpl === 'tplValueFloatBarVertical') {\n        widget.tpl = 'tplValueFloatBar';\n        widget.data.orientation = 'vertical';\n    }\n\n    let { data } = widget;\n    const { style } = widget;\n\n    // if widget is in the group => replace groupAttrX values\n    if (widget.grouped) {\n        // widget.groupid = widget.groupid || getWidgetGroup(views, view, wid);\n\n        if (!views[view].widgets[widget.groupid]) {\n            if (!widget.groupid) {\n                // create a fictive group\n                let groupNum = 1;\n                let gId = `g${groupNum.toString().padStart(5, '0')}`;\n                while (views[view].widgets[gId]) {\n                    groupNum++;\n                    gId = `g${groupNum.toString().padStart(5, '0')}`;\n                }\n                views[view].widgets[gId] = {\n                    tpl: '_tplGroup',\n                    data: {\n                        members: [wid],\n                    },\n                    style: {\n                        top: '100px',\n                        left: '100px',\n                        width: '200px',\n                        height: '200px',\n                    },\n                    widgetSet: null,\n                };\n            }\n        }\n\n        const parentWidgetData = views[view].widgets[widget.groupid]?.data;\n        if (parentWidgetData) {\n            let newGroupData;\n\n            Object.keys(data).forEach(attr => {\n                if (typeof data[attr] === 'string') {\n                    const result = replaceGroupAttr(data[attr], parentWidgetData);\n                    if (result.doesMatch) {\n                        newGroupData = newGroupData || JSON.parse(JSON.stringify(data));\n                        newGroupData[attr] = result.newString || '';\n                    }\n                }\n            });\n            if (newGroupData) {\n                data = newGroupData;\n            }\n        } else {\n            console.error(`Invalid group id \"${widget.groupid}\" in widget \"${wid}\"`);\n        }\n    }\n\n    Object.keys(data || {}).forEach(attr => {\n        if (!attr) {\n            return;\n        }\n\n        if (typeof data[attr] === 'string') {\n            let m;\n            // Process bindings in data attributes\n            const OIDs = extractBinding(data[attr]);\n\n            if (OIDs) {\n                OIDs.forEach(item => {\n                    const systemOid = item.systemOid;\n                    if (systemOid) {\n                        // Save id for subscribing\n                        !linkContext.IDs.includes(systemOid) && linkContext.IDs.push(systemOid);\n\n                        if (linkContext.byViews && !linkContext.byViews[view].includes(systemOid)) {\n                            linkContext.byViews[view].push(systemOid);\n                        }\n\n                        linkContext.bindings[systemOid] = linkContext.bindings[systemOid] || [];\n                        item.type = 'data';\n                        item.attr = attr;\n                        item.view = view;\n                        item.widget = wid;\n\n                        linkContext.bindings[systemOid].push(item);\n                    }\n\n                    if (item.operations && Array.isArray(item.operations[0].arg)) {\n                        for (let ww = 0; ww < item.operations[0].arg.length; ww++) {\n                            const _systemOid = item.operations[0].arg[ww].systemOid;\n                            if (!_systemOid) {\n                                continue;\n                            }\n\n                            !linkContext.IDs.includes(_systemOid) && linkContext.IDs.push(_systemOid);\n\n                            if (linkContext.byViews && linkContext.byViews[view].includes(_systemOid)) {\n                                linkContext.byViews[view].push(_systemOid);\n                            }\n\n                            linkContext.bindings[_systemOid] = linkContext.bindings[_systemOid] || [];\n                            if (!linkContext.bindings[_systemOid].includes(item)) {\n                                linkContext.bindings[_systemOid].push(item);\n                            }\n                        }\n                    }\n                });\n            } else if (\n                attr !== 'oidTrueValue' &&\n                attr !== 'oidFalseValue' &&\n                data[attr] &&\n                data[attr] !== 'nothing_selected'\n            ) {\n                let isID = attr.match(/oid\\d{0,2}$/);\n                if (attr.startsWith('oid')) {\n                    isID = true;\n                } else if (attr.startsWith('signals-oid-')) {\n                    isID = true;\n                } else if (linkContext.widgetAttrInfo) {\n                    const _attr = attr.replace(/\\d{0,2}$/, '');\n                    if (\n                        linkContext.widgetAttrInfo[_attr]?.type === 'id' &&\n                        linkContext.widgetAttrInfo[_attr].noSubscribe !== true\n                    ) {\n                        isID = true;\n                    }\n                }\n\n                if (isID) {\n                    if (!data[attr].startsWith('\"')) {\n                        if (!linkContext.IDs.includes(data[attr])) {\n                            linkContext.IDs.push(data[attr]);\n                        }\n                        if (linkContext.byViews && !linkContext.byViews[view].includes(data[attr])) {\n                            linkContext.byViews[view].push(data[attr]);\n                        }\n                    }\n\n                    // Visibility binding\n                    if (attr === 'visibility-oid') {\n                        let vid = data['visibility-oid'];\n\n                        if (widget.grouped) {\n                            const vGroup = getWidgetGroup(views, view, wid);\n                            if (vGroup) {\n                                if (views[view].widgets[vGroup]) {\n                                    const result1 = replaceGroupAttr(vid, views[view].widgets[vGroup].data);\n                                    if (result1.doesMatch) {\n                                        vid = result1.newString;\n                                    }\n                                } else {\n                                    console.warn(`Invalid group: ${vGroup} in ${view} / ${wid}`);\n                                }\n                            }\n                        }\n\n                        linkContext.visibility[vid] = linkContext.visibility[vid] || [];\n                        linkContext.visibility[vid].push({ view, widget: wid });\n                    } else if (attr.startsWith('signals-oid-')) {\n                        // Signal binding\n                        let sid = data[attr];\n                        if (widget.grouped) {\n                            const group = getWidgetGroup(views, view, wid);\n                            if (group) {\n                                const result2 = replaceGroupAttr(sid, views[view].widgets[group].data);\n                                if (result2.doesMatch) {\n                                    sid = result2.newString;\n                                }\n                            }\n                        }\n\n                        linkContext.signals[sid] = linkContext.signals[sid] || [];\n\n                        linkContext.signals[sid].push({\n                            view,\n                            widget: wid,\n                            index: parseInt(attr.substring(12), 10), // 'signals-oid-'.length = 12\n                        });\n                    } else if (attr === 'lc-oid') {\n                        let lcSid = data[attr];\n\n                        if (widget.grouped) {\n                            const gGroup = getWidgetGroup(views, view, wid);\n                            if (gGroup) {\n                                const result3 = replaceGroupAttr(lcSid, views[view].widgets[gGroup].data);\n                                if (result3.doesMatch) {\n                                    lcSid = result3.newString;\n                                }\n                            }\n                        }\n\n                        linkContext.lastChanges[lcSid] = linkContext.lastChanges[lcSid] || [];\n                        linkContext.lastChanges[lcSid].push({ view, widget: wid });\n                    }\n                } else if (data[attr] === 'id') {\n                    m = attr.match(/^attrType(\\d+)$/);\n                    if (m) {\n                        const _id = `groupAttr${m[1]}`;\n                        if (data[_id]) {\n                            if (!linkContext.IDs.includes(data[_id])) {\n                                linkContext.IDs.push(data[_id]);\n                            }\n                            if (linkContext.byViews && !linkContext.byViews[view].includes(data[_id])) {\n                                linkContext.byViews[view].push(data[_id]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    });\n\n    // build bindings for styles\n    if (style) {\n        Object.keys(style).forEach(cssAttr => {\n            if (cssAttr && typeof style[cssAttr] === 'string') {\n                const OIDs = extractBinding(style[cssAttr]);\n                if (OIDs) {\n                    OIDs.forEach(item => {\n                        const systemOid = item.systemOid;\n                        if (systemOid) {\n                            !linkContext.IDs.includes(systemOid) && linkContext.IDs.push(systemOid);\n                            if (linkContext.byViews && linkContext.byViews[view].includes(systemOid)) {\n                                linkContext.byViews[view].push(systemOid);\n                            }\n\n                            linkContext.bindings[systemOid] = linkContext.bindings[systemOid] || [];\n\n                            item.type = 'style';\n                            item.attr = cssAttr;\n                            item.view = view;\n                            item.widget = wid;\n\n                            linkContext.bindings[systemOid].push(item);\n                        }\n\n                        if (item.operations && Array.isArray(item.operations[0].arg)) {\n                            for (let w = 0; w < item.operations[0].arg.length; w++) {\n                                const _systemOid = item.operations[0].arg[w].systemOid;\n                                if (!_systemOid) {\n                                    continue;\n                                }\n\n                                !linkContext.IDs.includes(_systemOid) && linkContext.IDs.push(_systemOid);\n\n                                if (linkContext.byViews && !linkContext.byViews[view].includes(_systemOid)) {\n                                    linkContext.byViews[view].push(_systemOid);\n                                }\n                                linkContext.bindings[_systemOid] = linkContext.bindings[_systemOid] || [];\n                                if (!linkContext.bindings[_systemOid].includes) {\n                                    linkContext.bindings[_systemOid].push(item);\n                                }\n                            }\n                        }\n                    });\n                }\n            }\n        });\n    }\n}\n\nexport function getUsedObjectIDs(views, isByViews) {\n    if (!views) {\n        console.log('Check why views are not yet loaded!');\n        return null;\n    }\n\n    const linkContext = {\n        IDs: [],\n        visibility: {},\n        bindings: {},\n        lastChanges: {},\n        signals: {},\n    };\n\n    if (isByViews) {\n        linkContext.byViews = {};\n    }\n\n    Object.keys(views).forEach(view => {\n        if (view === '___settings') {\n            return;\n        }\n\n        if (linkContext.byViews) {\n            linkContext.byViews[view] = [];\n        }\n\n        Object.keys(views[view].widgets).forEach(wid => getUsedObjectIDsInWidget(views, view, wid, linkContext));\n    });\n\n    if (isByViews) {\n        let changed;\n        do {\n            changed = false;\n            // Check containers\n\n            Object.keys(views).forEach(view => {\n                if (view === '___settings') {\n                    return;\n                }\n\n                Object.values(views[view].widgets).forEach(widget => {\n                    // Add all OIDs from this view to parent\n                    if (widget.tpl === 'tplContainerView' && widget.data.contains_view) {\n                        const ids = linkContext.byViews[widget.data.contains_view];\n                        if (ids) {\n                            for (let a = 0; a < ids.length; a++) {\n                                if (ids[a] && !linkContext.byViews[view].includes(ids[a])) {\n                                    linkContext.byViews[view].push(ids[a]);\n                                    changed = true;\n                                }\n                            }\n                        } else {\n                            console.warn(`View does not exist: \"${widget.data.contains_view}\"`);\n                        }\n                    }\n                });\n            });\n        } while (changed);\n    }\n\n    return linkContext;\n}\n"],
  "mappings": "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",
  "names": []
}
