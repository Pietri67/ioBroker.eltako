{
  "version": 3,
  "sources": ["../../../src/lib/preinstallCheck.ts"],
  "sourcesContent": ["/**\n * we cannot use semver and other dependencies here, because dependencies are\n * not installed yet, so the version checks get a bit messy\n */\n\nimport path from 'node:path';\nimport child_process from 'node:child_process';\n\nconst RECOMMENDED_NPM_VERSION = 8;\n/** Time to wait for npm version determination */\nconst EXEC_TIMEOUT = 10_000;\n/** Duplicated from exitCodes */\nconst EXIT_CODE_CANNOT_INSTALL_NPM_PACKET = 25;\nconst VERSION_COMMAND = 'npm -v';\n\ntype VersionString = `${number}.${number}.${number}`;\ntype VersionObject = { major: number; minor: number; build: number };\ntype Range = { start: VersionString; end: VersionString };\n/** start already unsupported, end is ok again */\nconst UNSUPPORTED_NPM_VERSION_RANGES: Range[] = [{ start: '5.0.0', end: '5.7.1' }];\n\nfunction checkNpmVersion(): Promise<string> {\n    return new Promise((resolve, reject) => {\n        // Get npm version\n        try {\n            // remove local node_modules\\.bin dir from path\n            // or we potentially get a wrong npm version\n            const newEnv = { ...process.env };\n            newEnv.PATH = (newEnv.PATH || newEnv.Path || newEnv.path)!\n                .split(path.delimiter)\n                .filter(dir => {\n                    dir = dir.toLowerCase();\n                    return !(dir.includes('iobroker') && dir.includes(path.join('node_modules', '.bin')));\n                })\n                .join(path.delimiter);\n\n            let timer: NodeJS.Timeout | null = setTimeout(() => {\n                timer = null;\n                reject(new Error('Timeout'));\n            }, EXEC_TIMEOUT);\n\n            child_process.exec(\n                VERSION_COMMAND,\n                { encoding: 'utf8', env: newEnv, windowsHide: true },\n                (error, stdout, _stderr) => {\n                    if (timer) {\n                        const npmVersion = stdout.trim();\n                        clearTimeout(timer);\n                        timer = null;\n\n                        if (!npmVersion) {\n                            reject(new Error(`Could not determine npm version via \"${VERSION_COMMAND}\"`));\n                        }\n\n                        console.log(`NPM version: ${npmVersion}`);\n\n                        for (const unsupportedVersion of UNSUPPORTED_NPM_VERSION_RANGES) {\n                            if (gte(npmVersion, unsupportedVersion.start) && lt(npmVersion, unsupportedVersion.end)) {\n                                console.warn(\n                                    '!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!',\n                                );\n                                console.warn('WARNING:');\n                                console.warn('You are using an unsupported npm version!');\n                                console.warn('This can lead to problems when installing further packages');\n                                console.warn();\n                                console.warn(\n                                    `Please use \"npm install -g npm@${RECOMMENDED_NPM_VERSION}\" to upgrade npm to ${RECOMMENDED_NPM_VERSION}.x or `,\n                                );\n                                console.warn('use \"npm install -g npm@latest\" to install a supported version of npm!');\n                                console.warn(\n                                    'You need to make sure to repeat this step after installing an update to NodeJS and/or npm.',\n                                );\n                                console.warn(\n                                    '!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!',\n                                );\n                                process.exit(EXIT_CODE_CANNOT_INSTALL_NPM_PACKET);\n                            }\n                        }\n                        resolve(npmVersion);\n                    }\n                },\n            );\n        } catch (e) {\n            reject(e as Error);\n        }\n    });\n}\n\ncheckNpmVersion()\n    .catch(err => {\n        console.error(`Could not check npm version: ${err.message}`);\n        console.error('Assuming that correct version is installed.');\n    })\n    .then(() => {\n        process.exit(0);\n    });\n\n// ======================================\n// all the functions to replace `semver`:\n\n/**\n * Parses a version string\n *\n * @param version The version string to parse\n */\nfunction parseVersion(version: string): VersionObject {\n    const versionRegExp = /^v?(\\d+)\\.(\\d+)\\.(\\d+).*?/;\n    const parsed = versionRegExp.exec(version);\n    if (!parsed) {\n        throw new Error(`Could not parse version \"${version}\"`);\n    }\n\n    return {\n        major: parseInt(parsed[1]),\n        minor: parseInt(parsed[2]),\n        build: parseInt(parsed[3]),\n    };\n}\n\n/**\n * Checks if v1 > v2\n *\n * @param v1\n * @param v2\n */\nfunction gt(v1: VersionObject | string, v2: VersionObject | string): boolean {\n    if (typeof v1 === 'string') {\n        v1 = parseVersion(v1);\n    }\n    if (typeof v2 === 'string') {\n        v2 = parseVersion(v2);\n    }\n\n    if (v1.major > v2.major) {\n        return true;\n    } else if (v1.major < v2.major) {\n        return false;\n    }\n\n    if (v1.minor > v2.minor) {\n        return true;\n    } else if (v1.minor < v2.minor) {\n        return false;\n    }\n\n    return v1.build > v2.build;\n}\n\n/**\n * Checks if v1 < v2\n *\n * @param v1\n * @param v2\n */\nfunction lt(v1: VersionObject | string, v2: VersionObject | string): boolean {\n    if (typeof v1 === 'string') {\n        v1 = parseVersion(v1);\n    }\n    if (typeof v2 === 'string') {\n        v2 = parseVersion(v2);\n    }\n\n    if (v1.major < v2.major) {\n        return true;\n    } else if (v1.major > v2.major) {\n        return false;\n    }\n\n    if (v1.minor < v2.minor) {\n        return true;\n    } else if (v1.minor > v2.minor) {\n        return false;\n    }\n\n    return v1.build < v2.build;\n}\n\n/**\n * Checks if v1 == v2\n *\n * @param v1\n * @param v2\n */\nfunction eq(v1: VersionObject | string, v2: VersionObject | string): boolean {\n    if (typeof v1 === 'string') {\n        v1 = parseVersion(v1);\n    }\n    if (typeof v2 === 'string') {\n        v2 = parseVersion(v2);\n    }\n\n    if (v1.major !== v2.major) {\n        return false;\n    }\n    if (v1.minor !== v2.minor) {\n        return false;\n    }\n    return v1.build === v2.build;\n}\n\n/**\n * Checks if v1 >= v2\n *\n * @param v1\n * @param v2\n */\nfunction gte(v1: VersionObject | string, v2: VersionObject | string): boolean {\n    return gt(v1, v2) || eq(v1, v2);\n}\n"],
  "mappings": "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",
  "names": ["path", "child_process"]
}
