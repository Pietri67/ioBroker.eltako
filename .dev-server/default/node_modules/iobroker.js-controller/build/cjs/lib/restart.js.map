{
  "version": 3,
  "sources": ["../../../src/lib/restart.ts", "../../../../../node_modules/@alcalzone/esm2cjs/shims/import.meta.url/shim.js"],
  "sourcesContent": ["import { spawn } from 'node:child_process';\nimport os from 'node:os';\nimport { execAsync, getRootDir } from '@iobroker/js-controller-common-db/tools';\nimport path from 'node:path';\nimport url from 'node:url';\n\n/**\n * Restarts the js-controller\n *\n * @param callback callback to execute after restart is triggered\n */\nexport default async function restart(callback?: () => void): Promise<void> {\n    let cmd;\n    let args;\n    if (os.platform() === 'win32') {\n        // On Windows, we use powershell to restart the service, because execution of bat files is no more possible\n        const envPath = path.join(getRootDir(), '.env').replaceAll('\\\\', '\\\\\\\\');\n        cmd = `powershell -Command \"$envPath = \\\\\"${envPath}\\\\\";\n        $iobServiceName = \\\\\"ioBroker\\\\\";\n        if (Test-Path $envPath) {\n          foreach ($line in Get-Content $envPath) {\n            $line = $line.Trim();\n            if ($line -match \\\\\"^\\\\s*iobservicename\\\\s*=\\\\s*(.+)\\\\s*$\\\\\") {\n                $iobServiceName = $matches[1].Trim(); break;\n            }\n          }\n        }\n        Write-Output \\\\\"Restarting service $iobServiceName.exe\\\\\";Restart-Service \\\\\"$iobServiceName.exe\\\\\" -Force\"`;\n\n        // Remove line breaks, because the powershell command will fail otherwise\n        cmd = cmd.replace(/[\\r\\n]+/gm, ' ');\n\n        try {\n            await execAsync(cmd);\n        } catch (e) {\n            console.error(`Restart failed: ${e.message}`);\n        }\n    } else {\n        // Unix has a global ioBroker binary that delegates to the init system\n        // We need to call that, so we don't have two instances of ioBroker running\n        cmd = 'iobroker';\n        args = ['restart'];\n\n        const child = spawn(cmd, args, {\n            detached: true,\n            stdio: ['ignore', 'ignore', 'ignore'],\n            windowsHide: true,\n        });\n        child.unref();\n    }\n    if (typeof callback === 'function') {\n        setTimeout(() => callback(), 500);\n    } else {\n        setTimeout(() => process.exit(), 500);\n    }\n}\n\n// eslint-disable-next-line unicorn/prefer-module\nconst modulePath = url.fileURLToPath(import.meta.url || `file://${__filename}`);\nif (process.argv[1] === modulePath) {\n    restart();\n}\n", "export const __import_meta_url =\n  typeof document === 'undefined' ? new (require('url'.replace('', '')).URL)('file:' + __filename).href :\n    (document.currentScript && document.currentScript.src || new URL('main.js', document.baseURI).href)\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;ACAO,IAAM,oBACX,OAAO,aAAa,cAAc,KAAK,QAAQ,MAAM,QAAQ,IAAI,EAAE,CAAC,GAAE,IAAK,UAAU,UAAU,EAAE,OAC9F,SAAS,iBAAiB,SAAS,cAAc,OAAO,IAAI,IAAI,WAAW,SAAS,OAAO,EAAE;ADFlG,gCAAsB;AACtB,qBAAe;AACf,mBAAsC;AACtC,uBAAiB;AACjB,sBAAgB;AAOhB,eAAO,QAA+B,UAAqB;AACvD,MAAI;AACJ,MAAI;AACJ,MAAI,eAAAA,QAAG,SAAQ,MAAO,SAAS;AAE3B,UAAM,UAAU,iBAAAC,QAAK,SAAK,yBAAU,GAAI,MAAM,EAAE,WAAW,MAAM,MAAM;AACvE,UAAM,sCAAsC,OAAO;;;;;;;;;;;AAanD,UAAM,IAAI,QAAQ,aAAa,GAAG;AAElC,QAAI;AACA,gBAAM,wBAAU,GAAG;IACvB,SAAS,GAAG;AACR,cAAQ,MAAM,mBAAmB,EAAE,OAAO,EAAE;IAChD;EACJ,OAAO;AAGH,UAAM;AACN,WAAO,CAAC,SAAS;AAEjB,UAAM,YAAQ,iCAAM,KAAK,MAAM;MAC3B,UAAU;MACV,OAAO,CAAC,UAAU,UAAU,QAAQ;MACpC,aAAa;KAChB;AACD,UAAM,MAAK;EACf;AACA,MAAI,OAAO,aAAa,YAAY;AAChC,eAAW,MAAM,SAAQ,GAAI,GAAG;EACpC,OAAO;AACH,eAAW,MAAM,QAAQ,KAAI,GAAI,GAAG;EACxC;AACJ;AAGA,MAAM,aAAa,gBAAAC,QAAI,cAAc,qBAAmB,UAAU,UAAU,EAAE;AAC9E,IAAI,QAAQ,KAAK,CAAC,MAAM,YAAY;AAChC,UAAO;AACX;",
  "names": ["os", "path", "url"]
}
